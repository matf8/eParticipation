<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.1">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="eParticipation.uy" enabled="true">
      <stringProp name="TestPlan.comments">pruebas de carga</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.tearDown_on_shutdown">true</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="eParticipation - localhost[STRESS]" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">stoptestnow</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativa user" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcion&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;colo@gmail&quot;	&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/alta</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\recursos JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get iniciativas" enabled="false">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/listar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance get" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get procesos" enabled="false">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/proceso/listar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance get" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="eParticipation - elastic cloud[STRESS]" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get iniciativas" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcion&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;colo@gmail&quot;	&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">https://eparticipation.web.elasticloud.uy/backend-web/eParticipation/iniciativa/lista</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios dando de alta 2 iniciativa</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get procesos" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcionAlcance&quot; : &quot;18&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;pepe@gmail&quot;,&#xd;
	&quot;fase&quot;:&quot;fase inicial&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/proceso/listar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance get" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba1Flujo1" enabled="true">
        <stringProp name="TestPlan.comments">altasIniciativas</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">15</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativa user" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcion&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;colo@gmail&quot;	&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/alta</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios dando de alta 2 iniciativa</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\recursos JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativas organizacion" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8785/proponer</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios dando de alta 2 iniciativa</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba1Flujo2" enabled="true">
        <stringProp name="TestPlan.comments">altasIniciativas</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativa user" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcion&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;colo@gmail&quot;	&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/alta</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios dando de alta 2 iniciativa</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get listar Certificados usuario" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/usuario/listarCertificados?user=colo@gmail</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.[0]</stringProp>
            <stringProp name="EXPECTED_VALUE">{&quot;fecha&quot;:&quot;2022-06-14&quot;,&quot;insignia&quot;:&quot;iVBORw0KGgoAAAANSUhEUgAAAHgAAACWEAYAAAEyvaD1AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5JfxUYAAIe+SURBVHja7JVbaJN3GMafL8myGdovNm1kodo0GwtZnSVY+5UusGpPgqYHu5KJFDpTKUhX6RJktoRqkUEaEPQmww0XenA36pfSkq71AIV8TSE0oLbaiqvRmorQiabVHPRz7668GlmgHe6mz8179X9+\/B\/eA0NERIT3Lgn+J22A\/6GD6oNqSzbQdL7p\/KHDwIWrF67+0g\/oRnQj2j6LvGahZmH\/HV+8uqi6qKoFUMwp5j6aAVoPtB44Uvcvxu+aK1UtVBQqvsgAdDm6HK2KqEKsEPdEiASv4BW8RMK4MC6ME6lFtZgdIdKxOlarICrtKu0q6Urtm\/bHbDfbzX73DW+32+3HZwBPyBPy9AFLT5aeLFX27rMt25Y7Lo4mhs4MnRmqAsIr4ZVHMQC7sRuqdURtcpvcXzYM24yVxkrjIjB2c+zm2F2GMSfMCfPPJ36XLkoXpZ\/s3zTPzrPzlh03hClhSpgCClwFroLRdYBbiluKW8OxMOSQIwMIRUPR0CvgdPvp9p49gL5aX\/35r0AwGUxOK2cr370LbAlsCQRSb4i04M7VztUfVhkGecjDx4Bvl2+X7xiRl\/NyvArQ3tbe3soD\/CA\/eNlFpHQr3ZmDAMdxHOdmmDU3l\/W19bW1AyheKV4pOnsnKtwSbk1uJxIWhAXhPpGf\/CQ0E\/nr\/HX+GiJDoaFQb3gTbgu2BduCqX3Tgl2TrsneNwC9pbeUBey07rQa9xHlRfIWt\/5GxOVwOUUiUdbLrJfKP4hKLaWWkkagOdIc+far1L6ydFHHa+O1iQzAyTk5pxFwnHKc6j4JyB7LliTDgDRXmvuBDkgOJAeSJ4B73nveu98DuIIr+AuACHFNUZdPl09XNAF6US9+JiPie\/ge\/ieibfJt8lwJUT6bz+ZvJuLjfNybSVRvrjfXO3+84XA6nI4X65jjxkuNl742AVBBRSrAVmYr6\/j0RSJpSBqSBQyzd3bvbFX\/0Wu+Tl\/nyHHZs4exh7EH17vKNRqNRjOT2pdJdxZNHpPHdBFQmpXmzKfAqHpUPWYHzjWcazh7DJAYJUZmMzARnghPfAhEDVFDdBCIOWPOxJ9A4HngeWB5DeCNs\/hf6W8AAAD\/\/+xWT0jTARh9s8l0GzHdLGlKThmNQhrkgsRgWZlmBKFTlzIP5aCojRitLgVuDJ1\/kGiQUbpQstilw1IZgjmba8qQH7lEIaRw1sLQTbItbH0dQjqtRV6C+i7f8X3v4\/He+\/\/qfxi4TlgnrMn4WX02R5orzc0fJDplOGU4eQQo2FewL2+YSFovrS9QAdoqbdX5M8mBE3r1TNtM24wRYDvYDvYoYAlZQmaGyN5l73rQArAYFrNNSRR3xV3fmgHbF9uXW51EgZuBmwHbL+IwGWNDhiHj6h5gNWc1Z+UikXJWOVu6AtTyank1PYBkVDIqydEtVRZWFp64Bug5es4VCbC2fW37Wmj9XFLKiUxcz+iZy0agx9xjvneY6KDyoLKohChijphXLcDixuLG4gbQG+mN3J8HvMve5RccoqaPTR+1cqJk4ZOQsb\/YX+zvsx+Xdcg69p4G5uRz8rmTgDHVmGqcBHa3727PvQ343vveTxFgi9qityxA40jjiGbkN9SV6KKzRWeL6joA0bRoOrOVyG132581E+UP5Q\/l1QD8TH4mVwBYFVaFdZ4TmhBOCCeyiMq8Zd5j\/qn5ZIwTiisd6eAWA+Wvy19X9t3OM10wXWheuPymP94ff7ifiPOU8zQtHYiFY+GYEmiwNljVLoC3wlvhd\/vKAAB3\/0BcMoVMIVsG+lX9qr47urdfdV91cTnAFrAFLBnAT+OnpQ8AnnHPuLsYkOgkuvyXLFbKQspCCqN7+8eq\/vz48+NoNWASmUSmNEDsF\/t3XQeWupe6QwJAK9QKtVk\/6q1MAzAmxsS0EqkNakNd1xYMxO1yu8ZVP3eVukpd8xwgH\/moCAiWBkuDchYLfPDBBZxSp3SwE1i3rFtihVsA3qw82gptRVPuzk\/lJeUlFSbAN+mb9NYD1ZpqTfUOIGsgayBTCWicGmfD0Se+7Gh2NHtwC7G4WXnCY+Gx8ALwyv3KHbgBKCKKyIEPjw5pVBpVY4v6hSPVkeqI2lbFXDFXLLiUEQwEA+9mAc+wZ9jj\/J\/HfwHwdwAAAP\/\/7FlrTNNXFP\/9eYi4UmZBBqUBQQGB0BafA8wYw0CJokPDm1VAXIC4GkSeDnBbzCRRxABDSAOKQHGpBeS1TIEANYJBM4glbBpAJkUgVlFWiKOcfdBEssUsIxl+kPPlfrj3nJzfuSfn3N+57yzU712kVwCvAP5\/xGCpiuEl4SWhxQD0oLc4bMYVxhWrY4GyrrKuS4ZAzs2cm1m3TH7znvWe9R5+7mA5ajlqdRwIKQ8pD74MNO1o2tG0BSiUFcoKswDWE9YTVj7DVFZVVlUqgLH0sfSxVCCKH8WPEgJYwAIWgNLa0lpp\/TIWLWmENEIaAciuyq5WlgN6NXo1Bp8B\/Zx+Tt9pIoWRwqhOf1Ee+cEPIQA3nhtvNQRooIEGAFvNVptGAVO9U71T\/QBdpIskBaCFFlogYjpiOox5NUWZn2EY673We63tgdv6t\/V73Zbxhu9G3o28mwDcT7qf9GCIqOpc1bmqXwE9iZ7EwBAwEZmIWN3ATu+d3l7h2DWxeWLzhDnTSuZkzuQBhhJDySoJEBcZFxm7FlAXqAvUp4DJ1snWyXYi+Zh8TDEOVLOr2TUsYJV4ldiogih4Y\/DG\/YYAhjGMh\/\/OVf7znOlta0dxR3HHLWBd7LpYMxGR2lRt+nsPkbJH2aO8SWTKM+WZcImatzVva3QHmgOaAxr9gWb3ZvfGcGA8aDxoPACQtcpaZQ3AFcEVwRUnQG4nt5N\/BOzh7+EHDLy210Pktt1tu1smkfi0+LQ4del+L1kxxiLGQvwScNG6aJ0NfmTcpe5SQRiRUqfUKf8kSlhIWIhnEWVOZk5mcoFUXiovxQ9wEjoJN468YSBZmizN1zbAgeoD1UH9gJfIS+TxLKZ7NHc0d6SdqNO507mjgYg\/yB\/kf0vkm+6b7hOXH7zsgIWbhJv4joAwWhjNFwOSQcngkXyi3vbe9t52oi7TLtMuUyKlmdKs05mIN8ebs15N5CZ0E7raEFmOWI5YDDUKuNHcaMv9RAn8BP6XD4iUdko7pR2R0lZpq7QlUvYp+zqHX5+XEgXOBM4ELizd7yW3JRdPF0\/XQsDZwtnCJQzQV+grDD9lmIbIhsi6EoYJqg2q3fc9wNrF2mVSB4j8RNtFA0BZQlnCxcOAXCVXKcJ3\/5JTnlP+jQBIEaQI0vQBy0TLRMtJoFJVqarouxwdlBuUG5TBMJz1nPVrzRmGl83L5h1\/B0\/LpOtJ14\/eevu+bEg2JMsjKp4uni7ZAsARjnAE2Fq2lj0DHFQdVH2hAgoMCwyL\/gCwFVvhBxhcMLhg8ANwYt+JfRkeMxzr59bPudkmT\/9uvyW5JflnZhmr9GPPx54Tlf\/sw9o6bZ2WlfiTIlARWNsHTNybuDd5GEA1qnEDODp1dOqrYcC+077Tvp9htGnaNO1uojULaxbWAJiPm4+bjwd8MnwyfD5gaV7kvch7EQJmLn8uf7b0TR9GMpJhtoyAHcMcwxzUiwC3oQ1tQMWjikcVQ0X+pWdKz5ToAS1tLW0tOUC9bb1tvR3AvcG9wa07ZuIT4xPjWwyk5ablpuQA5x3OOxRwgFNep7y+awHydfm6\/AkgtCa0JtSD6NDAoYFDQoZ5DfeVPFzGlPbQeeg89Rf9z2TPZmuvuRyzGbQZtP5kIO+a4JqgSQUgG9n4+EOx6x3XO87tTy95s73Z3uYM48Q4MU5GgDHHmGPMAYo2FG0oNCMK7wrvirjOMPKz8rPyHMAq0SrR6vNVYZqTmpPPul\/W6CQ6ie4I0O3f7d\/tu0IPV8jDCuD3DfBf7JprVFNXFsf\/l0BeQhIJBgWKqEiNUlCI42Moy6VIKY1UBRmlkVHEB1C1y1HHyqMWFCoDvnBEaARlKAREhgrtUKLWKgSx0IqB+GI0ojwNiICQEHLPfKhWVztfxunCmbW4X\/aHs9Y993f32Xvts\/97NIZHgUeBR4FHgUeBR4H\/D9u0P08mPLuusdxYbixn4NS3p7792\/dAAjOBuacGmKCfoLebKm7Ye2\/vvb2lmhnOXs5ezlsoiqViqVgVQFNxU3HTLkLEJ8UnpwdQlEFkEBkygT52H7vXAZBkSbIkOcBA5EDkQOSL\/TPPZJ6R\/30EgalEKpFKfAHMcGG4MOyer0r039R9U1fRWsvWTtBO0Eo1M\/Ib8xsVEUBweXB5sDchVAAVgLtAPpVP5UcBa8+uPbvOSMhM\/5n+brcpqv9m\/83e6wA60QnN\/0Cl5WpwNUyvAxgBjADGLsC01LTUtHTzw+S05LTkvxyxLztTdqYsG5DVyGpk3wNERERmyQC60U0OAVQYFUaFAURBFEQBaD\/TfvZPEXAw+2D2IQMQUBBQEKAAlC3KFuUwRZn0Jr1JD9Bz6bn0XODK5iubr24dwRgOLAssW8EGYA5zUgjwhnhDPD2CxU3iJvEB4IO+D\/pWcwDiQTwoX4CtYquYN4ExjmMcx+QCQpFQZH0MoAPoADoAcCpyKpriABzuO9yXxgGWVCypeN8ANMQ3xDfsBGxP2p60PQbw\/Hh+POlrSFrsGnYNuwbQz9XPNWQS0hzaHNricaSq3bLdsjMHIBfJRdIDbH2w9cHmfcCq\/av2hxh7tHY6O519Zay7qkHVcEW7pWXDig0r1j0FdDm6nM5no7nkQ8BqgdUCKx9AIBPIBBJC+qR90r7lG1yfKxIjnrQ0czRzNO9wRdnV2dXZqQBRE7XZHwD6AH2AXgNsvbf13tYPgLr36t77oYuinqqfqgd+B7Cd2E4sHcBVcBWcq3Bw7nXuneqVBrlRbpT\/sbj6U82nmviqZXM7pB3SjsnAF\/QXdH4UUMYp45wtzVCzjCwjS59JjbiHhTZCm7HxA52hhlBDqAkgh8gh+hDAPcs9y\/EA+lP6U3r1jz4qCSoJKhYBJJfk0mU\/hQDMAcqP8jPzB1bzV\/NXc4DA7MDswITl83y7fLt8HwBoQhNuAjRN0zQNFPIKeYU84FbHrY5b7a\/hSIfuCN2xxgLozurO6s4EKBklo0IAoiIqUgmkmdJMaca161jNrGaWA1BeXl7+9TSAYc4wZ5gDTBVTZZEL4C7umvUCXAFXYOkETI+cHjljMmBRYlFiwQP4A\/wB\/gDAkDPkZruBt1e9vcrb9BqOdPD+4P1BpYQUlRaVFt941r3MAjhyjnzMMaBUXCrOyjdwjcXGYqMCIDqiIxxgXdS6qHUbgci8yLzINUC3tlvbUwOgFa1oBQYbBhsG\/QCT1qQ1aYHe7b3be0OAC4ILgm83APMN8w3zawiJQAQi8Z+Laa\/s4UnHJx2fJKKoTQc3HdzwZ4Afwg\/hXwS6XLpcdLVAeV553jfblFOGaodqjQuBFkGLoE0OWAVbBVutBDqvdF7pZAMpsSmxyacBbZg27O4e4I7uju72FYAOpUPpIGAScxJz0gHA+773fe9PgHG142rH9VMjH8PWQdZBwpuAbZxtnO2Gd8VsGVvGlgFUO9VOLQD2Kfcp91oAVj5WPpbMOnu2iC3ieP36PT3JPclPjgPqEHWIupKQa2nX0n40Pov1JsD3qe9TnyjA39zf3P8kRdmk2KSM+\/A1xPDtPbf33HIAupndzG7VP26YBCaBSQAwLjEuMXYC9oX2hY46QOYuc5e5ezxU+ap8L\/sSYl5oXmieWeauLlIXqc8SMn399PXiNwlR2avsazqAFr8Wv7ZigPamvWlvQC6UC+VC4NHVR1e7JEwnpivTlVX0Giqt8Dnhc9bVAG9Vv1XtfuZPtemP0h8dPTEx0Hy3+W5G8yZR9sTsiTldFleHPIY8jB4AXOFKKgBmEDOImQgMy4flpiaA7qF76G4AwxgmB4Dzluctzy0FFGqFOn824JDnkOdg2RfjsMBhgWMmbx9XypVyB4Cjnkc9j3qOYNIadBt0G+wHxn499mtBSKqktbG1sSUa2ByzOWaLIGmtocBQYHinFTbHbY4LK4ATbSd+f2IOsHTiUsdlpwGSRbLoBUC1rlpXrQN8HHwcfByAjPqM+oz3gJ01O2t23KOo1oLWgtYvgPYt7Vs68wC6n+6n9QA84YmRBJ7FmcWZNQg4uTm5OV0DeqW90qe+zxaNurmToyZHOd0Adkh3SHe0AINWg1aGq8D1N68X\/HgCiEuIm\/fJLUApU8qUYiA8IzwjfCtgXWldKSgDCnoKegpoYGzW2KyxcoAtY8vGVAJUOBX+39xpf3O51Ohv9B8SiYuWpy5PXcHSBD5xfuL85BoAZzjDBUiNSo1KUQKpi1MXp9QDrdNap7X7A9BDDz2Qfj79\/DEhwOhl9FJsioIEEvybZPeqcukrAz+f8P1ZvnymIp4WnxYXJpGuhMMJh\/f9FdbkIXlIH\/ipwIAlEOUe5R7xHTBFOkU6eROwLWlb0o7TAJzgBCfAdqXtSlERcC7xXKKyZeMgcztzu8WnmdxfyrK7hnYNRc8fwSN948GNB5r1LwE3oxnNgC5Zl6wbhjV+wA+kHIANbNAA8Hfzd\/MagEWnFp1a5DYcVx1aHVodYh5P3aXuUu4AcSSOxBFoX9m+sn0vkLskd0luVwZH8pXkK0\/HzF\/p0CNeaXVqOjW6nhfAFjEWMRYXgcjzkecjIgBSQ2pIOIASlKAEaOxv7G8oBrht3Daul0XCkMuQy1DnxxOEHcIOoWdihO6S7pKuFqD8KX8za6C\/or+i\/11gis8UH5eXdejX1dPyiveKnzfwwvI8eB5jPryRvUyyTLJsD7CtbVvbR\/XA+MrxlaJiIHF94vrEy4AuRBeicwOi34h+I+5G0uRz98\/dV0YD1UnVSZXjgPAvw78MywBiqmKqYt4H+LP5s63qAXKEHDG5vrAjDjxePF5st\/iFrWJWMauKpq2Z9fGsjz2mAvce33t8\/\/FXMyO6IroiugCRVqQVaft5SlpJK92AWy23WjRW8Es\/mn702FUgT5OnyZ8M+Gp9tYuPUlTynOQ5yW8Dl4SXhJe\/M8baJdklOeQDz+2IZ+lfTgDMvD7z+lvHGqemz0qflbFxxh0iIILhJoCbwc0Yc5iQ0AuhF0IFi0qpMqqMOnYhwLXLtcu1D\/g8+vPoz6MJWZi4MHFh4f69LotdFruQXbF19nX2dXzguuK6Qt3UmmCmMFMwFHaxz\/d71QmAV45hsxyzHCrnpR+wat6q+fkz7gAANgKwgx2sAbcetx43HkVJLksuz34MDPAH+AOLARJBIsg0INAm0CbQmtNYH1MfUx+nj9VKtVLtQkBYJCwShgGeTZ5NEpldbL1zvXP9ypc+4DEe49EIeni0ET8KPAo8CjwKPAr82z\/\/Yu\/c46Is0z7+vYfh4HAQAYdxVBRCw8QjiHhAWTOPSIBEhIRaeEhYVl01tZZcTTMzT6lrWkiGeEIlJHVVrFwMNcVSJESEkbM44DDCOAM4z\/sH+tZrtdtnP++n913j98\/z13O4nt993dd9X6f7d2eW2kZ0G9oIbkMbwW1oI7gNbQS3oY3gNvxzyH\/rF0Y+Hfl0RA9AixYtP4QSHgtOWXtbe1t7wIPIB5EPvCFlVsqs1J0\/PKfrxK4Tu9g\/DBynglwpV1pUgrHUWNp8ZuWsZzTPaHrlvvFuTs+cnmczcOzcv3P\/zv5gG2kbaTsQmvOb85sboLNbZ7fOBijLKMuoyHdf3C2vW163JOHkkO2Qbb+1eJFYLVazBuy72Hex94PtdtvttgeDR6VHpYcZctfmrs1dBzOdZjrNdPlpMujjcv27yaH\/ORpcQw01P\/MD\/tX1MXT16urVZRRYyi3l8kC4c+XOlTvDK6YY1UZ1Y+rSbd09unu4ZUvt9en6dP05SdIka5I16U05FFNMsY1Bk6fJ09RJ0iHDIcMhX0ma6TPTJ3ZS8TsZhgxDuuHmwroJdRN0jlvGKt9RvqNyhXzPfM\/8dWDrZ+tnG\/Yzcv2bcjxxjo4BGwds7PcrGkC17G3Z27J3aZLJyeRkUq+cXpJekl4SA+3D2oc5BLe2TfNwArOD2cFsAw19G\/o29IVDKw6tONQPdCqd6t63rX2hzAmgnqaepo6BY6pjqmNqGO833m+8L1QmViZWLgOhFEqhBPcN7hvcy6HXwV4He9aCT6lPqe9ow\/6mhKaEpvklu7QXtBe02WB10eqi1cXemboRuhG6QBifPT57fLYQjWcazzSe+WUNTumT0ie13xNM8J7UPal7iuDWK7deubUNjp48ejLzWTB5mbxMI0AWJguTjYIHuQ9yH1z5Y2VZblluWd6mTmcXnl141hoqvSu9q6NBppQpZS4gL5YXyzXQ\/G3zt825wCpWkfjwhwY\/vBp\/om0\/zF8ttPwPDXPEETVIVpKVdBzUMeqYTrNBf0J\/4t6Jh\/mBV8Bik8Umi+MQ9nHYxyFfgG2MbYxtiBBitBgtRrc2fb0fAo5hjmGOftBxTMcxHWPh1MpTK0+veIJtcGNGY0bjm3D\/0\/uf3n8D5J5yT7kc7o65O6buDHTd23Wvu7d8dklUSdQNpxcs7uvu6+5vAouZFjPln4FwES5iL0hISE3QrGnWNCvA\/or9FfsUKN9evr0iHVbMWjHrrelwo+uNrkUfgSnTlGnKaB04Ld+Clb+Vv7UN2M+2n91+DEwePXn05GhYMG\/BvIVRcNP\/pv9Nf6jaVrXt9nYgn3wKAA0aKQlsNbYaW7fW70AOXse9jntth6rTVacrVeBe6F7ovhzqnOqc6uQgi5HFyGJ+B6voS69eevXSq3Bi3Yl1J9ZJkra\/tr82RJJcVrms6miWpEV9FvWZ\/3Lz3zJ7ZPY4NiNAeWT9kfWf34Zyh3KHil2ABx54QLePun3U7RxMsp9kPzEHhjgPcfZbaCp2l7vLu8XbzsgZljPsQjchbq28tbKsVghdqC5Uf1KIwi2FW24+EOJDiw8tdmQJ0dult0uvciFKh5YO1WQLMWr6qOkjLQ7WTJk1ZVakJeT75ftdzQPzOfO5loG0JuyUg26rbqtuPpz3Oe9zvgKmvjr11enrJcn+tP1pRxdJuma8Zrx2XJLuxtyNubtakm7n386\/nWeX8sQTrChSFLUzQED3gO7D3YSQD5UPlfsb1hYuKFxQuAC62nW16+oA1SnVKbd3gWyubK4sHggmWEqG+qT6pLubYejOoTsHT4QzoWdCsycN7tR4s\/GmsbPNU93WdFvjFmP4qLGoscgwFISn8BSegBNOP9fFXSwQC8QC0Cfrk\/W7wD3GPcY9Mtx1lGyUbJRciPVD1g9ZPwSmHZh2YOoB6ODYwbGDI1joLHQWWri1\/db20gJwzXbNdpVDUlxSXNIRaKxurG4ogr7efb37PrPwkq\/SV+nr0hD9xC+yfgnO3zl\/1+GYJHkaPY2eF2BLjy09tn0FplxTrnEBqNap1rlWwpCqIVX+H8BTp5469dSpcTuFQiiE4u+vSLOl2VI81K2tW1s3Bz478tmRI2+AZ4xnTI8rIFpECxqoMlYZq4xw+OLhi4cvwCDFIMUgM2g3aDdoE0EMF8PFiIc2uQWU6cp0ZSaETwqfNHmfJEXMjZj7ghpCfEJ8wnYAG9jACFAdVR1VHQWflT4rfc\/DILtBdgNmRs1z2e6yXbl2zwZnD2cPZzvYHLA5YMs\/nmAbPEVMEZESfJn2ZVr28lzbe7J7Mp1uQMM112uu1yTQxGviS7pAk7ZJaxoO7GUvCtCatWZtERjtjHZGBWyu2ly1uVbu2xzZHNn843ylAAKYCjq5Tl4nh0uxl2IvNIBdk12T3VbI9s72PtsXBsUPih9UAGSSyX5wkbvIXRTAIQ5x8eHiqwVkKplK1hd6xvaMfXop5CblJuW2wIvxL8a\/dARMCpPClAfVVtVW1VaQ55rnetUVBhcMLhh0KnW93Cg3Flemrn932LvD3vmHEA87wz25Ghz3VdxXr33S0zFrTNaYrFeu3632q\/arXgDrxq4bu24s+G322+wXAbplumX6XBBmYRaZoPJSealCYOS9kfcCbsDA8oHlA9V7hndUdFQoo6POiibRJFpA0kgaqRicgpyCnDbB4ZbDLYd0YJpmmmZaCzq9Tq\/TQ4Q8Qh5hBYOtB1sPfg7Ov3D+hW96g+1+2\/22u+DB\/AfzHywFO+ywM8AB8wHz\/nGStLhkccnrg1vLi\/qoQOiFnq2ADTbYQIdFHRZ1OA4HPQ56HNgAyQeSDyRbgnmpeanUpSy45M8lf9acdzvyxNpgQxdDF0P3Qp3zMudlzrFC9A3sG9h3lBBWwVbB1gX2vUZPHT11dDdomNAwoTEcSCONVKheWr20ahfkjM0Zm+MDX8R\/EX\/a7aXsG3k38gp9cw5Hro9c\/6IJjqYdTcs8ASU1JTW3loF8rnyuRfDD5onJP\/qQL\/mSo1DxVsVbFX+C5ZeWX1p2DyzjLeOtRkN4XHhcWI6l\/x7VHtVulSSNU49Tj4uHXuN6jeudCrJXZK+I\/qBWqBUqFwj4MODD4T7w4t0X74ZPgut7ru+58X3Pjv2a+jX11Qjh6OXo5ej12xH7f0awU4NTg3MY+Af5Bw05BH4Zfhl+x+GT7z\/5PnnkyRkd8jrkdbgCbpVulW6VQCSRRLfaOuENpXWldeUZcNL2pG3WPQg\/GH4w\/Lx\/SLR9tH20tSS1P93+tOPx24et0q3SrZROyVK6lE7qDxr2qBZVZpAZZAZwHeQ6SBUAhwMPBx5W3hiyr\/++\/qkTJCliQMSAyK+acnJ25Ow4HwpR16OuT2kHMkeZo8zq4bYpHyr0FfoKI8xPmZ8yTwHNa5rXtHwL7Ye3H+4w8Ia2w\/4O+53ng0+yT7LP3t+BJ8un3qd+wLEfjbBSWamsEvTl+nL9KUkyp5pTHwS32kB5InSM7RjbUQ\/qteq1ndZCXGhcaNzLYOlr6WupbS17k9aCFCVFmQPBZYLLBJc60GZrs+9+BIc2Htp4qB\/kR+RHXNsFJq1Ja1z2cNX7NYzcOXLniE9gYs3Emok1UOZU5lSWAeJL8aW8GKQaqUZaBbYjbEfYRoPWqDVqfeFGw42GGx5wtfPVzt\/thoKigqKCc6BN06ZpZ0OgLlD37KqkBap9qn2uk199\/5Ena2nS0qSlv+Fm6TdfZHnN9ZrbS\/aD605ykpwkFYwLGBcwfqEQlzMvZ15+F06OOznueCF0Xt15tWoOWJutzdb719WG3w6\/HbZmntPlpstNV2qh7M2yN0uVIPaKvbLhULe4bnH9arCos6izyIfw18JfC88H6Qvpi8mfAd\/zfaszm64Me6jRwVBaWFpYcRGETugsdCBVS9VSDVhprbRW1TDvL\/P+Mu8IFEUXRReezPBs79jesb3V8zfNEeYIcyIEGYOMQf7w+dDPh2Z6Qb1nvaduAbQEtQQ1G\/hfq8\/4f0\/wfwv6+LWOOnQgV8gVFqmQtydvz\/ePaq7+9ujm+c6Of3L8k0OHedLbB98++Nco+ObZb579BijPKs8qPwbWk6yft54MNnqbIuvvYHqn6X1iJ8OoMaPG\/GErNEc3RzcBzepmdXMXmDZy2shpg8Fka7I1WUJLWEtYSwh43vG841kGC3cs3LFwB1ytvVr7XTjMSpmVMiti0WWjv9Hf6I9Dp2OdjnU6BoXGQmNhA0g6SYcO8MPvZ+X8ve6Df7WjpExRZjNZkpYMWDLgje9gkO8g30HVYEgzpBkOgTglTold0C62XWy7akiuSL6R\/B7kyi4PvOQIJEjjpFUPtzd1rf2ND1hAVf+q\/lWBIIVL4eZwUNgp7BR24LbdbXu37TBm35h9zzlDWGZYZujbnw916+zW2a1HUA6OOOJEay17OYggESQiQZJLcmkbmNVmtdnrB4IXRS2KWpzyBBM844sZX8zI+pkR\/VjU5RGkNClNSoMymzKb0uGZH1yXXZcVvDkx\/tOsT7N2zwLtNu027SignHLKH5spWkBlp7LrFA+h40PHP\/9XcM11zVUOhfAPwj8Inwe9db11fWQgIkWk+Lk47td8TTaUqcvUpXNha++tvbfsABeFi0IZKESTscnYdOpnghi\/ENy48NyF5y688wRP0W5xbnFu8349we3ebvd2u0S57IjFEYsjL02Mf\/\/T9z997wHUDqwdWNsf0KNH\/6P7rLDCCswys8z8DOy7tO9S6l\/BVmYrUyRA0ISgCUHKkA82RmyM2Dgw\/Y+fyz+XH7OFquqq6qpqkNSSWlL\/6HmBBBIIvdf1Xtf7KFjYW9hbqEFUikrpzFn34LjguKA\/DyuRPCVPyeNXyFVHHU8ywaYDpgPGAb\/iR5RTjgZOpJ1IO37deNAzwTPhqUXg4uTipGyE+93vd79\/EWiggR\/XWHrjLZZDR3NHs\/Mo2B2wO2D3X2BM+pj0McuevVWbWJtYm3g6wc3bzdvNjT9uYhOb1BA+Nnxs+EsPw42rfrqZvCe7J2tIhzUr1qxY6wtT109d\/\/KxocXjT48\/PeFGz6cNUw1TG+sLC5EhE4\/JJT2US\/webLDvPN95A3f8a4KtjdZG6ybLZ0rSStJKljdd2\/333X\/fnQMN+gZ9gwoqHCocKh3g7py7c+rmQM+knklPJ4GllaWVpQNsXbl15ZZhoM3X5ms18LzP8z7PdxXC4GpwvT+51RXa1P0Z4+683Xkpudesdw\/ZPST1c9Ar9Ip7y8HJ18nXMR\/em\/7e9PemwLIty7Ysuw1lNWU1ZXr4ePLHkz+2AE2sJlaz3xTdNLtpdtMcm92yaFm0LOoxuR6ZDKDgTsGdwmNPsAbLL8ovWoT8E4JTSRXJUK+qV9Un3Ht1WtO0pmkXYE6\/Of3mCLi9+fbm28Ngp7RTSp4DSyYvmby4vvWEvpXp0Glmp5mdZkJufW597mmIr4+vj9crjzQENgQ2+IL9SvuV9nfAYanDUofX8m28hnsN9\/rbg8NLEpYkLHnNImRr7dbabV9C6P3Q+8FV0F\/bX9tPXI4KrQitCDU\/PbcloyWjZZfCb2PKxpSNJkh4OeHlhOnWKT3Se6T3GNenW7N\/s39T9tVVOOEkXP6FbX4SNXih9ULrhba\/THCtslZZG7m+OVeZq\/wmca5ce1x7vPYclHcs71j5omOVtFpaLb1ZrxaLxWLxNmQFZwWfbBo4dNblWZdn9bh01jnEOcQ5CESMiBHT\/rHGtbtrd9fuI14XKSJFpIAh0hBpiKC1XXsiWC+3Xm69HK4lXku8lihJymRlsjIZdAW6Al0R9IruFd1rnBDtvm73dbu9UBxeHF48G9yj3KPcgyKsLvhf8L+QsM8kIkSEMMBLF1+6OKWnEIYwQ5gh5Kcz0\/t73t\/z\/qdPMMGPTpj7JTw6ee71D1\/\/cNF52Htv7709f\/jh8F3UqKUGkBwkhwd1IApEgdwN4sbGjX3N50yHLHWWOssQUNc7und0n1eEMBlMBtOZ1lQgkQB3vr7zdY0nSHpJLxX9yEcdQQQRn9ysOlF1ompajMeM6TOmz14ihG6FbsXdAWBTblNu0xPO5Z\/LP1sK7vPd53usAY2dxk5TBD1ie8Q+HQ9Xo69GXz3emiBgPvdT+X7pUOC2fXAb\/jOCDW1oI7gNbQS3oY3gNrQR3EZwG\/7j8V\/snX1YVNXe9z97ZhiG4Z0QRkAkMvJdUiQiUkMlQkQjNFNTQjMyUjRTIyPrVkRTMiI1UyIjD5kJIhIioiIqIRkakqIRIiICDsjLAPO2nz+g9K7T6Tz3c13d5zG+\/6zr2sxs9trfWb+1fu+9alLvCu5FL8G96CW4F70E96KX4F70EtyLXoJ7Ce5FL8G96CW4F70E96KX4F70EtyLXoL\/tvjri5HazrCdbs0fp1XKkCGH4pXFK4vDoHJx5eKqD+\/8OW5Z3LK1CjjQ50CfA+OBNNLENDD1NvVWbIQ+7n3cHWtf9\/3B4QeH0sL3Trk1uzW7ecF3ed\/lfVcNk+Mmx02eAw2hDaENkXQX4XAAs9Vmqy02JvZ3P+t+tr\/Doqu6Y7pjOjmIW8QtJEFFcEXwJRkYYgwxBj8o9S31LfUA7xTvFO9scKxyrHKs5A9zrH65vj19e\/qO\/fcwwb80i\/6fFue0nm0926oaXop\/KX7BdJB+Lf1a+gNsPr75+GZN56QamxqbaxWmWab+pv6mJcsy5EHyILmF49OiUTSKQ0G0EW1Em+7kMSrlCy7kXMgpP9v1sfK88rwyEpodmh3UQWefMEYYI4zRKcdku2W7ZZuhZm\/N3muZ0O9sv7P9jL0r+I\/xZ9VX\/4T45ujm6OZYyHov672sdaD\/Xv+9vhpupdxKuVVkmrXFsMWwRYDw6vDq8B0OU2VOMifZTFFUzlTOVE6YOlcTo4nRrJnw+ZXwK+E\/jYn62KTIpMjECXydfJ184yHXLdctb\/mnR1dKV0pXPp0itJxuOd3yDnxc+nHp1vt7ns\/tX8znfzive2YPFuKFeCH+X4ydQqfQCcJQYajwu86MtomK6YrpilAIXhy8OHgnqOPV8ep4UVRIFBKFBFyDXYNdk6HYpNjkzNsQYBdgFxAPukRdos4t47Pjnsc9Cy5GGZ85\/8z5Z4Ig0zHT8cCH8Pazbz+7+gKoc9W5tzZDckNyw86xKeNNVaYqk+kgUUvUEjsQQoQQIQTwxVf0AWKIIYY\/rlzwd8vw\/7NywpLtku2S7dBh32Hf4SCKV+KvxF\/xBdNtpttMt4Fqh2qHqgYcUx1THdPgesT1iJoISH4q+alPJ4JJoUmh3AMkMolMugeM9kZ7owoUMoVMIYeOto62jhaQtEhaJG1AHnnkgt5T72nwgqLSotJTUT3tfftA8JjgMcFjLgTn+eT55PmAvExeJi8bkmWwN9gbbMAhySHJYXupjfMM5xnO0x++\/Wd7cOqI1BG7H76HRbQ2ThunXQkmvia+JnbdOUZiAFBHHbUg1og1Yg0YVxtXG1dD3IW4C3HtYHLU5KjJbbgReCPwhjdcL7teVlMGTl5OXk4uYFdnV2cnQlt1W7Wms6c6TgEIp4RTQjF0Dega0DUAJDWSGkkNMJKRjASaaaYZZDKZTKaH6bHTY6cthfVN65vix0JeWF5Y3pghWa4DXAe4WsEgt0Fug9zgu87vOr\/TQnNWc1ZzsYlfV1RXVNdCDv46USVKlCCWiWViOYgbxY3ihr\/BHrxh3oZ5G\/8BUSuiVkSNhf4W\/S361YDGqDFqPEB2UXZRdgW66rvqu+pA+YDyAeUPMCx+WPyITBBcBBfhPEitpFbSrSAsFBZyDdr2t+3X7KO7ftUvs2oEPPBgAL\/m5+KKKy50Z9o3cid\/t5BCsQBqrWqt6oLhdNHpoqKDYBhlGGUwgsZP49dhAsYNxg3GJXDxuYvPXXoSbpXfKr+VjawjrSOtIw2M44zjjONAMUAxQOEOinxFvmIXKJOUScp9wGM8xuP3MMGtka2RrV5gKDeUG0rhVuit0EYrGLR60OrBCqjbVretLhCELCFLOAX6W\/pb+sMgKAWlJAQEuSCnEIxao9YoARJIoAi4yEVsemp6zAFHD0cPRyMYXA2uBhdoP9t+tr0UpFqpVtIJ1jXWNdb1oA5WBzcVQaemU9OpprtGpTs0Zjdm31Lz3xO4s8GkzaTNRAKmmaaZinro6uzq7LKHhuyG7IbMnuqyHuC623W3awpUFFQUVBwDYbowXQj7Oxg6ftmjtGjpBMlwyXCJJyhLlaXKcqhT1anq8ieVKpwUTopT0D6hfUJbGVBGmVh71wuXIcMCDNGGaMNF6B\/YP7D\/Hvhq9Fej95iD\/wr\/FWM3gc+XPl+OPgyPtz\/e\/pgUHr\/\/8fv9RsHoT0Z\/4nUEog5HHY56Cm4Pvz28JQEs4y3jreqBPezBoptYIbqH4DYQQ8VQMRRMo02jTZdCu2e7Z5vW6Dtp1aRVk06B9VDroVZOoJ+un66fQXfjd\/u7nvteF9GSNZI1kjUg+1T2qfQDEDSCRpK768OTxSeLTzY\/H9U0sGng7Rxwt3C3GKCEwB8DfwxWQEdQR5DGC8QJ4gRxT0+5pG3QFNQU1BgPQyYOmTjpv0C3TbdNHw0vbHxhY0TAt5r5P87\/cf6PRxKdhjkNc2q\/+XRzanNqc6posVC7ULvQGxpWN6y+GRL38uLZi2e\/ctAi09rD2sPGHdJfSn8pfRtcPXb1WFUCCN6Ct8ls0Bfpi\/TF0PeRvo\/0fRBMUkxS5MeGLT+jOqM64yIuV+1S7VKFpO+xLbItspu+5LAQJUQRfnUHJZRQ+7\/A8C+n6L9qXHZs2bFlx2x9XSWukn7NojikZkjNoGOiuPqz1Z\/FJovizzd\/vvnz46JY9I+ifxR9IYqFXxV+Vfi1KBaeLDxZeEIUCzYVbCrYJIrbpdulH98URRe5i7xvoyhOCpsU9tSEV51++T\/tU9qntE+Ctkttl9ouQYNtg22DLVRJq6RVUpjoOtF1ohWMLRhb8Pga8I7yjvKKcAgbkj8kf1CuKNo02zRbqUXx2rxr865aimLhrcJbJx8XxcKGwobCBlE889aZt868KYrl75S\/Uz5WFN9Qv6F+I1MUHVc6rnSwEMXBFYMrBl4RxUHDBw1\/aKB+ybC4YXFD1vz17\/svF9G6HF2O7lTTKYVKoTJz18eaeZt5K7whzD7MPuw+uF51vep6Jehd9a56F2AgA\/EDcZ+4z+gC5i7mLuY7IPbl2JdjO2Cq71TfpzfOa8iakjXl4PUPa9tS2lJa68F4ynjKeAqEMcIYYcyd07KoF\/Wi\/q6t4ixnOQtaG62N1qF+7\/iS8SXjcwSh7+y+s\/vOhik7p+wM+QQsPS09LUYCmWSSCdpt2m3a7aD2VHuql0KgZaBl4FNQ\/Vb1W9UfQt2qulV1MTBCNUI1wuVNMTAkMCQw5G+wB0tVUpVkAISGh4Y\/HWP\/VV1uXe7NQrhUeKnwUgEYvA3eBp+7nq6eemE42HnYedjOhjDHMMfQTaCfqZ+puwgfHv3w6Efrkh0a6xrr6nNBKBFKhOq7TKK\/GQWZIBNkd\/RU3SrdKu0qcLZztnO2g6bCpsKmMrg\/+v7o+6MF4Vb1rWp1FdQk1yRfTwaWs5zlIGaIGWIGMJShDAXJu5J3JWtg4e2Ftxe2gn20fbT9UuiT3Ce5T\/L6zeo96j3qPX8Dgg3+Bn\/9WdC16Fq0cbcvOmQ4ZDgUXQmJPBB5IPIguAxwGeA84C5iKqkUK+F24O3A21NBM0YzRhMIbz391tNvTev3ZOzbsW+vegIMKw0rDeVgmmCaoMjs\/mGI9f9CkpToSnTFMMRviN+QwTD9zPQz0w+D\/zn\/c\/7HuyvTz2robotj7W2QvDP3nbmr3wCll9JL6ced8sRuuOEGbg5uDm728NWur3Z9lQLuI91Hunsun9QY3hjeGA4aL42XxutvQPDmYZuHJa6DjR9u\/DDhFjyy6pFV3vP3jDFWGiuNlXB77+29LXt7DB91wBWuUAn79u\/bv28\/2A+2H2w\/EPa9su+Vfa\/V5OZr8jX5I2HypMmTQj6EGf1n9J9+HSz0FnpLwOhidDG68GuJfvLIIw\/GPTPumXFvQ+j60PXTvoH7vO\/z7jMY+izts9QxCqxzrHNsM+GFCy9cmP9yks9PST8lXXYB64vWF6186K6wpwaJQqKQKGBVv1X9VvUHlYPKQeUAtsG2wbah72UrQhWhZp3gvNd5r\/OEv8EpujC5MLmwEC4XXC64HD8nLkuWJcv6OGbZutZ1retaoc2uza41EiQ5khypA5g4mTiZqOBi9MXoH6PBNs42zrYCVqWvSl+VDjq9Tq\/T3zFkSG9Kb0oPw1bFVkXSKAitDK2cZg+miaaJpvugNag1qDUQhowcMnKIJ7TMaZnTsvKP3XxuoW6hbu8evqmT6WS6bxbTnNuce\/t7ussQ+4NRYVQYFTD71dmvzn4Fcj\/L\/ezQ5J757d17c9zAcQP9N4Q5jh0\/dvzYL3tuGnEPE7zg3IJzL\/4I0i+kX8g6PntjfMH4ggnh4FnpWen5BGg1Wo3uyq86MxIbiY3UFTTRmmjNQVAsUCxQRIHtN7bf2B4GXZ2uTld3l0gfzGA84GH9w\/qRSXA5+nL0JRVcCLgQcGEH+K\/2Xz1RAs6ezp7Oq0CIE+KEjXet8F\/u0wOTbSbb5ClkiIPEQca3QfeI7hHtz8BSltIJlFBCCchT5CnyFPjg4w8+\/mADLNEu0UbbPuNwvep61fUx6VuZwhS+ffrle99dWEyxuEwUZUqZUsiH+MPxh997Bq7UX6m\/vLVbJEtWA400ihagi9ZFa7XQd1rfaS5aqPCq8PpRAjucdjh9chjEF8QXCP39ypMskCyQLAB9lj5LXwo7K3dWJmeC32y\/2Y89D36n\/E6NMYGGRxsebRjRUzgt8vf3MWkwaZDP7lIK1UK1pBqsPrH6xCqg29LZdP7O6VzqLfWW+oBquWq5ahvE28TbxJfAmw1vNsTsmRr5kPdD3gO\/+3RfMMEEz3jh8D27B8unyqfKo5L3dMo6ZV3BEHAo4ND4WeBW4FbgugH00fpobSYwgAG4gWGfYZ8hH8YeGHtg7GRobGtsa6wCRYgiROkPeiu9laH6zmhIM6QZFoHOS+el08LZ2rO1Z5vBqtiq2NIO7CPtI+2rQPmq8lVTU+ib1DdJNRja57fPb18NMhuZjWwAyNbI1si2wdWMqxlVeyLmWtlY2VjagbxAXiAvuOvttdFGCxiqDFWGSnCb6Taz\/0xYeW3ltZXXwWyG2QxlMez5YM8HX7697sw9f8iyL7QvtM+d96x1iHWItdJxmugn+rERBp0cdHLQW3Dd\/rr9dQkY6431xjoQFIJCcIEn9z2570kPuBV1K0o9FeoT6hPq12w4Km4QN4gjwdLH0seqHGpm1sysLQPNIs2ijlUgBAlBQtDd7iy0aMHgZnAzvgXWX1t\/bXUYpo2eNnpaX\/hh1w+7zvlDq12r3e1yKE8pTyn3eq5wsmSyJGQX1BXWFdY1ghAhRAhzum3Sci+4VnKtpDoMhv047MdhItiE2YTZFsG0gmkFYbGWj3fFdsV2vVvRfO\/bonv2uvbO9s62ivq9IQEhAVMWCIJXrVetV3ZV8ZpNazat3QTWG603WieAsFRYKuTA1dSrqT9Xw6ySWSWzBsOJhBMJBfWvj5s1ataomd+a+NwceXNkbS002DfYNywCFrFIXPRvRJTsYQ\/ZPcTXw6KORR2LTaBqYNXAqqDT6fWx9bF13vDGoTcOrTrZLZKF5WD0NHoaPeCI6ogqbyG8u+LdFe\/cAMfZjrNVyvQi54HOA102CkJLY0tjS1lbIfXUC\/V\/AzVJGaeMM++EES4jXDyr4GzY2bASJdQH1gfWL3fzDtAGaAM6oVXeKm+VgZggJpAI0gxphmQ7LL+x\/Mby76BD0iHpqILnW59vfb6f9vR9MffF2EfKZ4jDxeGi57+IoPhNhIW4SlwlxoBVpVWllQYyv8r8av8b3zlX5VTlVKX5TN25fuf6HSvg56KfiyoLeyxZGSBEC9FCNIyYOWLmiPlwO\/92\/u1CmHtk7pHnu0IfdfV19XVJButo62ibveCU55TX9+\/gTXpQ9qDswcaeX7o3jNKP0o+qlkxt2te0rykL\/Gf5z3piFpBMMimAHXZiPohpYprkPNQE1QTVDoDSc6Xnzm+FrpSulK4YODTn0JxDa7r+oc3SZmlrY4IU4Ypws5ie+yTfkRxivBgvxoOyTlmnvAmKHEWOosIvZPGzi5999X1RzHPLcztSOrLmtedfe\/71UeBa51rnZg\/SMGmYVMGvFeVZwAIWgMdyj+Uey0G3TLdMtwy+H\/396NLW2auMWqNWXAY1ATUBNSvBw8LD4sGCv57gvz5kZ8jDQ0YMuiMixXAxXAzvJ6\/SVGmqNNVddR\/VfXTzJlTsq9h3eSZ01HTUdNT22KZdewwfFcC7vMsicN7ovLFvDGx4Z8M7G\/4BX1R8UZGaCA4ODg4Og0Hpr\/Q3n6Hf1ljUWNRYf2ibqlnVrGr029Hu1u7W7mLtpd6t3q3OAMVexV7Fbvh67Ndj0z8CbZA2SNvWowadBTFbzBaze9QoCQiFQqGQBTYeNh5W9hBxIOJAxA8gLhQXkn1+i2O2Y7Zq5YhXhBQhRUi+4y7MNM80zxTuYYJ\/2xhLv0+\/T5924CHBQXAQOoMv1lXWVdbvA5Wbyq2vDPr69vXt6wf9V\/Vf5RoLkeMjx0eaQLtLu0t7DQgBQoCxAkR\/0V9cBP3U\/dT9Z8JB+4P22QVw\/JXjrxw\/AzdH3hx5IxrkNnIb+UwYkjckb0guhM4Lnff0PLD3s\/ez9+129KuDQUgUEiUzwFBtqDaUQ5+EPgl9JPBDwA8BP\/hA2c6ynRfegwvxF+LPq+Ba6rXUa8XQMLthdmMmLDFbYrY0XRDarrRdabsrXjomJSYlZvc9rAc\/HPBwwEi7OxPWuenc9LmTLz3c9HDTw5sS3Q4MOzBsfyqUppSmfF8BlkMth5rZh8\/OKsgq+L7ccs1L37303YIv6Y5mDAQxX8yX7gWqqCIOrrlcc6m5AsMDhgcM9wDPWM9Yz+sgPyM\/Y3q5u0mk4RZoM7QZuus9InwGqOeo59wOByFVSJVsBCFDyBA2Q3\/3\/u7948Gtya3JrQ889MJDLzw4HUwiTSJlhaDP0GcYbFpXWYyzGGfh+2PqwKCBQYMC93xdlVqVWjUVtK9oX9Eu4X8tbPYvJ7hjaMfQjpY7E+5y7XLVqsFlrctalzmLrpofNz9ubgpqvVp\/OwxCnwt9Luy7RWu37NmyJ8ldXPPN8W+O5xTBmDFjxozJAEmzpFloBmOIMcQYAmaNZmqz2dAR0hHcEQRGo9FotIFOq06rjmQgkUQAtrGNWhB8BB8hCoyxxlhjDQilQqmwF8REMVFMgAZNg6YxGFwtXS1dxkFjbmNuo1IQntr11K4gVziWeCzx6CoYmTEyY2Qm6IJ1wfpgvAznDecNMWBMMCYYE+8ieDSjGX0vq0l\/FC9sgQUW0OHU4dRhD3Pb5rY9HwyXJl+a\/OOD3d1W7JWwf8T+ERk\/gfky82XmneAS4hLiXAY1Q2uG1mTCXNu54+fMhX7J\/Tb3CwSjhdFCnNrd+JndPepTS3fLPCcrSNiasHWTMxjzjHmGcdBX0lfSN647ZUV0gRNJJ5IKZMAEJjAD1o9aP2r9eOgf1j\/MdQwY7Ax2Bhv+Y+Oi\/3pT5W8RQQQRoL6gvqA2wFq3tW7rPgZvc29z7wPAQzwEkP5D+g\/7Phx9Kfp09OnFyWceyojJiNm3EpLykvKSBDCxMLEwuQoWaRbZFlNhxIsjVgyrgPJXy1+59BFUJlYmXk4C5zTnNOdimGAywcT\/DAjFQrHEAsKSwpKeSeqJEfu220AxrQCuPnb1sauDwbHGscYRtf+lNy+9eWn+nfBbzxrPGs+LPRJhGxBAANv5j8FfvwebPWz2cEeP2mKE9ufan2sPggWFCwoXTOoWZaK+58MOPV4bI0yJmRIzJTpn69LTS08vWcjmpMSkxKTNMCVqStSUOfB8n+f7PN8HrMZZjbP5FiY6TVRNfBlGrB3x1hAz+Lnh59tVFjAlfcr+KV+CJk4T17EIPh\/7+djP3wNNqiZVsxPSgtKC0j6FvRl7M\/amgHWsdaxVCVh6WHpY+V8PLCgrKCso46hEJpFJZD2myjZ+Dc\/VLtQu1HeCbYRthJ0PdCV3JWtL\/vf24P9vipG+b\/W+1abE\/Y+9d\/S9oxtfDik8MfnE5BPX4NzSc0vPLwVBIkgEGRinGqeK5dDPo99A5xIIMgQ9HPQlmMebBypzQbpZul2aD7FdsV2xpmARbxFvNR+k8dJ4yQKglFKhFFTjVOMcx0BGekb6fgN8teyrZV86QMzYmLExHwlCc35zfnN+j+NfDuIMcYY4A2SZskzZKtBGaCO0ASBUCVVC1R2Cl89ePnvl7nuY4CWHlxxefPrf\/7xptGm06ULYm7o3de\/CVssHxj0wbkCRRUvUiagTr74K+kp9pb7qjn76yzoxeBg8DB5g22LbYucPL6a\/mB7Rt+d0HQ8vjH1hbMTTYIw3xospdIfe3B3i03MmsK62rrb2hhkrZqyY9jN4V3tXP7Ld6R3DZsNm\/eYbq\/9v5\/\/Na9+8livcwyK6Td4m13Typ3m0v1yXdko7TbxBG64N7wqwaAkeFTwq2ACGkYaRhpFACinsukPIr2e55ZLlkpVwqv5U\/clasEy3TLf8CIr8ivyKImHFRys+WpELdUPrhtb\/Erdc3mOT\/sUvLO\/2LpnYg1m1WbXyk25vlrpkZYehzFBmcFuMMFOYKcz8nb37nx9hf7m+\/h4muN8z\/Z7p99S\/T3DXka4j2r4v7tKEaEI0ETDqwKgDXilQn1ufW78N6KSTTsAKK6zumCQVngpPhRPkHs49\/M1nYFNqU2ozFBo2N2xuSIBG90b3Rncgl1zK6I6tujtvuacV\/K2yW2WNZeB3zu+c3zQo8ynzKZu+KH7ujbk35r61eL12knZS1+Q\/fv7fXe8OK7h31SRBJaiEgX8+StukbVIJFHgVeB0fE\/62KkmV1DcJOsI7wjXhd63Y37xIIUaIEWLALsYuxi4GLrpfdL+0BUaPGz1utFfwIHOtudZcC0d2Htl5ZCeIF8WL4kV+ddz\/ih6CxYXiQiIh6JOgT576BOrkdfI6HzC6G92NETKJzkJnoQ+Cf3e850\/R5WfKz1x4\/M9\/6WZxZnGKnVBfWV9ZP9O3MrA2sDbgFNzOvp3dsgkk0ZJoSTPggw8+d74u5og54nz4yeknpyu7wPia8TWjJzx2+7HbjzV9tz3HKccpZ3ChQ54yT5lX61c\/ZeeUnU+nQfPZ5rPNRn4Ni\/31B3NKOEUmuNu72z8Q250bJbwJhSMKRxTuXZCtPKo8anZ8SyCuuOL6b6zge53gB6oeqHqg7c9fhHKJconyjIdH5vHM45lAwLyAeYFrQfuU9intMhADxUCx5J98P4QQYwBkr81ee\/Bodws6ty2wZ8OeDV9q68b4ePt4+zy2es7+5P3J+8vzkK2VrZXtBHazm0zgPOc5f9f98sknFppjmmNa\/OGB+gfqB0TDLeMt4605iR1DnYY6jTVugcEMFnpMsP+0newv1+91d+FpzWnNt\/o\/H\/d\/vf\/rzMmTauVZ8iyTTLD1t\/W3ndrzws+DECqECpFAGWXU96grrmAfax\/bZyOcPHby2MliMFeaKy0cPk\/Q1ehq9Ho43Hm487DyyC67NLs0uwQoLSwtPFfdY5rcTHder4ruNNTGHv9vEXTQQYcFBJoGmgaaQZWmSlN1RTrV2mBtsDUlR3ASnCQtIDgJTtKeUfKbUdryN9CDvV7zem3kzj9ewcYIY4QxAkQL0QIbUXTJd8l3joX5L85\/cf5BcHZwdnC2gLc\/fPvD1U\/A8jPLz7zeH9QR6oimCLCqsKqwzIbnPnvus+feh5dyX8p9KWfYi4Kv4CsEle3AHXdhOqS7pLtkJOhvOKud1X2RqhY+u\/DZV38CQ4AhQFsE5XHlceVquM\/pPqf7nMAp2SnZKRms1FZqqyKY9eKsF2c9C7bRttG2abIjeoleotcbJvy2X\/B\/k0zAxVsXb93T\/YMnXZl0ZVL2HxNsa2ZrZjsR4mPiY+ID4UXLFy3nXwLbRNtE21AIXBG4InAF9CvuV9yvA7ILswuz22D09NHTR+dBwZMFTxaMAKt1VuusauCq9qr2qrZsh85D56HzAi9bL1vvKTD87PCzw0vWl+cPzh98eHWMysHbwbvPXBAjxAjjcIicFTkr8jpYBloGWgaBX4VfhV85vLb+tfWvre+J13aAQT6DfAbpy655bPHY4rFjEIKv4Cv4\/jHB9\/wefKj5UHPOdv55b\/tGkB2SHTJ5Z1gMYYQxE+zP2Z+zvwwz3pjxxrOOYFFiUWKxDEbUj6gfMR3SktKS0nxhWsm0kmkl8N6699a9txacy5zLnMsq2lSpqlRVKuh99b76CaBv1bfqVsKjGx7d4JPy2cs5jTmNByNjLt0YfmP4jc1wo+VGS20ByFPlqfJUcN3rutd1dkBTsaZYUxyUazsta1rWtL0wa8asGbNmQKZ\/pn+m\/\/3qa1zj2u4ep4T6j\/XgNaz5XQf5e4rguY\/OfTTiq98TLFaJVWINHNIc0uRUnpW2D28f3j4UlmYvzV4yAZ5494l3J86ELx764qHU\/SeUFU0VTRV7v5+fcyznWM72RYldrV2tXfdB9fvV71e\/D4qliqWKpdNWXJJfkl+SQ5\/aPrV9SuCpwKcCAydCm6JN0TKxoqJPUZ8iBxcoCi8KP1kFh7489GXuaXAJcglyWWXYZRFgEWAZeHiu2wy3GaYW0pSfbH6yqcw0zN2j2qPaowKNncZOk2u69M3n3nzurUmOL6kj1ZHqb25a\/Kecov\/6DuBmr5u9bvl7gs2KzYrNzsLu+N3xXwwVRdFP9DPugEgxUow0PPvt6wtfX7gi\/HQamWRy5dpm7QLtAm049HPs5+i0XhTdLNws7l8K9dp6bb0RHjE+YnzEKAgduR25Hbl0d\/xeDZrpmumaUBDChXAhHJpVzapmVf5jxBDDyicKmyyaLJpsYNCpQacG5Q+9ppuvm6+LvODasqNlR0sUzF07d+2c12Hr11u\/3nZZFMUsMUtcCZ42njYj0zbr77ty35X7ti8x+SOCN3256ctNX9zDK7iwrbDtpOb316WJ0kRJPtgV2BXYqW6sUWWoMhwGu12wfdL2SdsPtGksZCHhIJaKpcaNIFfL1TJ7iFPGKdddv7ksaWnS0qRIx43m9eb15t7gGO8Y7zgUdGqdWlcL0mRpsjQJBs0aNGvQs2C8YbxhvAHaedp52nlph7cP3j54++AnMKYZ04xyCOwT2Cew6YJr687Wna3vQVZnVmeWBtRR6qim5TBSNVI1cq4gmG4z3SbPuvDgSauTVkWxn0w2SzNLM1v6N3YXSnZJdgm7\/okoCRPChAAY5TPKx6vM6a3LLZdbLiUA6aTT9y5Dho\/oYxzXbYGiE+a5z3N\/cbpq05ITS04sOSluHLZ72O7hKz8v\/Mn3J9\/KOuAiF4X5IG4Xt4sDofjz4s+L14FwUDgoHARTmanMVLZdKdkn2SfJ+FgcPmH4BM89xxqvZF7JrMwGIUfIEbLgAckDkgdPgGGWYZbBEgyZhkxDFvi0+rT6pg+5fPTC0QsFn5NgHmAeYD7wX7yAJppouIcJ\/n+GFVa4g2SOZI5kDLz5X2\/+1xv9wVPiKfHUftQ8vmN8x4RTy2xtzGzMbN4BPuVT7qe7fNIIkIyVjBXsgdOc5iQonZROShfYun3r9q0Jab5yK7mVLPu501drr9b+vKPHy2QEoUwoE0JA66x11lYCt7n930yb\/6HobU55j6O3XnQvwb3oJbgXvQT3opfgXvQS3ItegnvRS3Avwb3oJbgXvQT3opfgXvQS3Iv\/J\/wf9t4\/Lqo67f9\/nplhGIZhQEAkRERDQiRSQkIjQyIlQiRyyVUzlyUzl4xcIzI1MnPJiIyMWJfMNWKNNTNDQjMlJEQkUiMkRURE5PePAYZhmJnz\/WOm8t777nO39+79+D7snuc\/85gRz5kz57ze1\/W+rvd1va3ZJCtWrCO0FStWrAK2YsWKVcBWrFgFbMWKFauArVixYhWwFStWrAK2YsUqYCtWrFgFbMWKFauArVixCtiKFStWAVuxYsUqYCtWrFgFbMXKrx7Zr\/0CF9sttkuw5aeNlX5oTP0Ld+K64ZeSIQdbP1s\/W084EX8i\/sRsmC2fLZ+tgfwn858s+OvPf49MTabmtSVw1O6o3VFbmLB4wmLPlSBqRI04CEKsECuJAVm9rF5aA9+t+25dXcbTy640X2m+Mmf7+2q9Wq+eDAovhZdie2XCyPSR6cOboy6PNo42GmT91V4KL4VXB+gD9YH6BKgNrA2sDYC7\/O\/yv0sGbkvclrgthpamlqYWwG6N3RpFEng3eTdNOgffzftu3ncrnuxoD2gP6NC\/PLfbt9u3O8Wl1meTz6ZbPa96zQqfFT7rjNfV4drh2uEqEOPFePGGLd6EZqFZqLP8Pquh2r\/av1oPDT0NPQ15EGAIMAS4wkDRQNHAAbiUcSnjUhr0y\/pl\/W5w\/877d96\/CyalTkqdtA60q7Wrtat\/wX35bz7f+cnOT\/I+tVrgmxclSpT\/4Yp\/2cbNv3Rj51+40bOpwFRgTILOrM6sDglcKb5SfGUONOub9c3p0JHakdpugm+XfLvk245XR9oy2jKuK7e\/75DtkK06BqMdox36LmiLbYu93hhaOHph9ILBve\/0aMloyWilKOrn6efpEz5\/QX9Gf0ZfHbxXMAkmwQSSQkmhsBeUF5QXlLUgCZYES0IeXNysadY068+9fKj+UP0hiShecrrkdMk3Z2yPrkfXHe5S69jg2KCuh66mrqaupgnNHyV\/lPzxkaYXBnoGeobSQYwQIySrYCR2JNaQBsY+Yx\/pUNtX2\/ddGrQ2tza3RoMiUZGoWP8Lfqd\/1335\/3kDbquAbxaqqaYKhC3CL9o1RbdFt0X3Cjhsc9imyoZ7hu4ZmmMLS79Y+sXSw0K+vE5eJ7\/wypirPVd7rmpS5Z3rO9d3psG9Sfcm3bsKKjorOis+gZPSk9KKD2BD94buDe\/CuKJxReNWw9c1X9dU50du6ajpqOnIPv3IuNRxqeOmi2Lz+ub1Vxe1\/PFYx7GOY7WieGH1hdUXgor+djnycmST6vYNvrt9d\/sugrxX8l7JuxMaHm14tMEesj\/K\/ujNpaAr0ZUMLwf9dP10vefELaczTmdUbxFFXZOuSdc3MXVo9tDswX2gKFAU2LqCg9JBqToC4ipxlVgJ7GIXu6yPy\/8Wv\/qOHL9d8NsFjzz4z7te\/2kP0wKhQCgAoU6oE2p8nb5p+ablm8aMd1VqlVqFfPMc7RztvYXjltjvsN+hzA5OdbFxsXFxbAuetHrS6skrt3x\/ZOORjYevNZVf8r\/kf8kTFj6w8IGFr8JHf\/joDx\/NjXm6Vler+7ZlValWr9UPS+CxsMfCHpsNz415bkzqZ9CY05hzZQ0IXUKXRA2mIFOQsRIcFjssdlgOrqGuoa6z4XTL6ZbTzbDj\/I7zO87DKedTzqecYFrstNhpcZD6eOrjqb+HWemz0mdthusZ1zOuZ8BQzVCNtgYklZJKoRIcQx1DncJAG6uNHdoPKz9Y+cHj70FnSGdIuxxsM20zFbWQNpQ2lHZqga1vn2+f76Iiffab2W9mH4fac7XnakvApDApTEqYUjGlYkrlPZ4D7gPuA67qosbGxsbGGuhL7kvu2wRRsihZlOJs3pRNUzZN2dCyYzBhMGEw4V93oXNcclxyx1oFfNPi+7Hvxz7vAnnksROEICFICAVptbRaegFoppkmoI022v4fB5rHPOaB6aDpoOngmq2yQlmhbN+bzyuKFEWKgzBcP1w\/XP\/jHsPoV+pX6lfCyL6RfSP7MO\/kEQBispgsrgZDnCHOEAt20XbRdrHQvqF9Q+cmeFbxrOKPckj5OuXrlK\/h0qZLmxr8QeIh8ZBVAJlkSrabLZs4B4gnnsUgRAgRQgQYq4xVxiqwy7bLtssGJ4OTwckAmhhNjCYGBtMH0wfTQbpculy6HPDBBx9+3CxZiBVihVgQQ8QQMRRsA20DbTeAMlIZabcLVm1ctXHlC3Bx0cVFDfvAPsk+yT4ROlM6UzpTQL1SvVK9EqRLpEukS2B0cHRwdBD0Sr1SrwQxXUwX08Fd7i53V4CkTdImaQX5Ovk6+dqmyjEbxmwYs2nSLEOpodRQ+q\/f\/+Mnj5\/88pRVwDct2xZtW\/SqAZTBymD7aGia1DSpSYAjq4+sLnEHoVAoFCJBkiBJkKSARC1RS5QgZolZ4vYbfqiDwkHhIJjKTGWmsqdaR9JH0kfSs2\/pWdezrmcdvH7n63e+fhcsDFkYsjAQrgdcD7juBXKZXCaXgXGycbLRB0bVo+pRFZjOmM6YzoGuRdeiawZFg6JB0QhaX62v1heGcodyh3IsQa3NIJaJZRLLXFJwMlsYcZcluKb4LyySZVv7H9\/LkCG7wVL9o+X6x\/cSJMiBUkpRA0tYIhaAY4djh7oJarJqsmraoLOis6KzAryivKK85oFTrlOuYy6ofdW+jn6g8lZ5q7xBnahOVCeCmCfmiTvh8W8e\/+bxs3Bu57md5wph7Kaxm8Zu+i7O1t\/W39Y\/4BOTv8nf5H\/DdcmRIwchQ8gQMkC\/V79XXwiSeEm8ZBHINss2yzaBGCAGiAFAIIEEwte3fH3LN+OtUeibFmeZs8xlGaiWqZap8qDzk85POr+Hnsqeyj5\/8Cv3K\/ctgKG8obyhaBDPiedED7DdabvTdjuMTh+dPqoGqb\/UXxpssSh6TLoiXZGuCNjLXvZD3+G+w30LoPNI55HOQmh3a3frCgbBS\/CiDHDFVQgCGmgQGywWT2V50JaBNkQbMqIAWmkVW0FaKa2UF4JYJVaJS8yWUsgBqqiiDkgkkT1ABBFEgiRJkiRNBGmWNEuSBYKr4Cq4\/SRIUS7KRRkYA42BxmAwVZuqTRVABRVsADazmTQQlgvLhSQQt4hbxC1AKKEEAmWUCdGgWa5ZPpgGt0bdGjUlHG7tubVnignwx59UoIYawQMMLYYWUwv0yfvkGhlos7XZuh0ghAvhQglIX5W+amMHMrlMLtOArkfXM1yFob+yv7LfD6Rh0jBpGIx4jXiNTAa88cYbxqwes3rMaggoDSgNKIIrRVeKrqSD\/qD+oL4cxtaPrR\/bAHofvY\/ex5pG+jWE6X6yMADuuOMBklZJq+QMmKJN0aZY0Bq0Bq0ajHuNew3RMMlnks+kVdCT35PflwADXgNe\/YvBpsKmQlbXGyCRSWSSJfSaOkwdJg0YHjY8bPC3RL11FqHmAcEEC41mV10stFiSGsAPvxsCYgjLheX4gLHcWG6SAEUUsR5cCl0KXY6Aaq1qrb0rXJdcl7QqoDahNuG7Kri48eLGi3Mt0el26D7QfaDnIOjn6OeM3GlJn6lBfkx+zPYYONc41zg\/Bbc8fMvDtyTClA+mfHBbDATUBdQFKMAj2iPaYx4MRA9ED0RBT0RPRE8EsIENbAC66KIQ82b3dZbvH\/5DpA7QohWPmgcsGn6y7MY8Y54xCZRlyjJlG9jp7HR2Vy0WdD0Mew9765pNuwY8BjwGljDOodmh2aEFJlRPqJ6wGzzOeZzzaIDhxcOLh9eCUWPUGLvAVGWqMh0AtrKVbDCpTWpTIIgyUfZ\/odmqjP9r6NChAzFMDBPngLRKWiUtA+l26XZpMlBJpVjl79wV3hXedfDpk9253bk9MfMrtXKtXNs3cbkpy5RlqoHe\/N78PgUMbhrcNBgN9mX2ZaoTYFxpXCn6WyxSk\/mB5twNA4kePU7AClYQBuIF8YLpDNxSdkuZRwZo0jXpmuXw3tz35r53L3z68acfH4yG3pd6X+r7M0gXSBdIk0BXqCvU7QJpjjRHWg7Osc6xzsXgHO0c7XwAHNWOascDFkvsCv1+\/X5d5+DK7Cuzm8Ph661fb62JAO0s7ay\/d8BIx0jHyEUYeHzg8YFnwDXPNc\/1TxD7aOyjsbPgseWPLX9stuW4HdAa0hrS6gyCr+CLL7Cb3cIa8wAl7LRc76DZIrObHzdqli6RLpGmg6HV0GpoheGC4YLhAnDNdM10jfDN92nxafFR1D44LBuWDfcViNRQIxbnJph2m3abjvWskKXIUmQZQAghTAeccMLJMmXQW6PQvzpy63Prc+vBMd8x3zFfJjn91emvTne\/+LsPF3246EP36BhHiaPEYXJQnGASTEIt9OT25PaUgG6DboMuDbyKvIq81sFdsXfFhjbDXNu5thFSmFE+o3xGCthii60E2va17WsrBEOMIcYQC5LVktWSFMsDprYEwSItc7j94L3Ne5t3DBzMO5h34Byk26bbpp8yR5kFD4tHUA5jUsakOCkq5CsHVg6sumP\/75c2L21eFlkSPbFvYt\/E1u87zFdpSPrH69a6al21TqDT6XQ6LZiSTcmmNVCxuGJxxXrIWZqzNGcqKC4oLsgVMOA64Ko55lFo7DB2GN2eOtwT0RPRG\/\/kKlOUKcoU6xjcqe\/Ud+pAKBVKhWOQ\/nb62+lvQ2xSbFJsEjSlNqU2eYOYJqaJqUAxxdLlgCeeVINYKBaa9oLtftv9tnWWNFw2HN90fNMXOVAhVAgVX0Pt9NrptfHQ7dnt2e0N8n3yffJ94LTZabPTVrBR2ihtVKA8qjyqLDHkDpQOlA4U7Dyg8lX5qvyyJ7rtcdvjVvb9Tr1Kr9Ir4PNXP3\/1i9esAr5pyVudtzpvFbjsctnlssumdd+kfZP2PbBv6rFFxxYd84zto4QSUz1ErY1aGxUOGS9lvJTxPoxsHtk8kg59GX0ZvZEw0DDQMJQKop\/oRwAIR4WjQqLFRZRYotgNlpP6mF1kIRGMUcYoQxhMWDZh2YRlcCb4TPDZJHjy9JOnV70ANn02fdJc6Nzeub3Dn8EkjySPx8si7Hac2HEi59PjP3pImnmaef2zQbJFskVmAFaxStRZ9sNONEenyQTbJtsm2yboVfYqe5Wg0+q0Oi0YFUaFUQGVuyp3VZbCuxvf3fjugyAJkYSwDHRhujBdGzgUOxQ7NELL\/pb9LaUgWydbJ1sD4xTjFONMH7\/T0NPQ0yCPW6U1aU1aHehL9aX6Mnjn7Dtn33kephdNL5pRDFd3XN3RMtschJNtA\/GoeFQ8YnGtnYAWWuiwzMV1IIuQRdhEgWOMY4w6CtTR6mh1DHQHdQf1bICGgIaAC6vh0IJDCz6dCcc0xzTH40ChU+gUOnCQOcgcZMZA7wTvBO9FTs\/pNXqNXjO47JPDnxz+9HOrC33Tcvjhww8f+TuYrpmuGd8d9XA94nrEtWMhd4bdGXZn7Guh9Y31jXXb11V+mvdp3qc5IJwVzgqN8OLDLz784kMwMDgwOBBmdhGle0DwF\/wFP\/McUJxtie5iCS4Fg1AtVLMPTFqTdjQVJrtOdp20Al776LWPXnsDdn2+6\/N3G8AOO5SLYVr4tPDpuWciSy6VXCoZN+MLAJ6F7vju+I5VYKe10yobQbpOuk7WATjjLLiB2Ca2iW03RI\/\/1ZE8TogT4ix520YYiBiIGIgAY7Wx2lAOgccCjwUefOhJ9yXuS9xTefLImiNrjqws\/MY+xD7EPvQ3Xss\/Xf7p8kM4J\/Yk9vy+B55NfDYxNQmaSptKm+pAkifJk+TdECUOJphgkCRLkiVzQPQX\/U3e0Ovb69urhe7t3du7V4D7HPc57o0gD5eHy\/fAscZjjcfHgxguhosBoApRhaiC+xvuWnTXorsWeSzQL9Mv0y\/TLhNrxVqx9tfvQv\/qV2IFfRL0yR32EDwpeFLQRpj47cRvJ4xC9NjosVHvPXtqXvi88HnOr7WplWqlejZ8cvSTo58chWefffbZZ5+F8e7j3ce7gSRfki\/kW4JQihuEo0OH3hxNFnzAtMa0RtwEEw9MPDCxAzImZkzMeAjeK3mv5L0OcFzluMqpEhI2JGxIiCnR775n9z3vfTPji+st11uux8BA4UBhfym47HfZ73YUlHXKOmWPWbCmWnOUmtYb0kS\/8FU0iAbxxrRSLrnshNHdo7sNu6HHqcepRwkB0QHRAfHw5qE3D735OWR+mvnp68fh3m\/u\/ebedphzcc7FOd\/Cnpl7Zu65K2FGbFxsXGzcoQb7dPt05SbYPXn35N2TIePLjC8zvgSv7V7bvbLAlGhKNCVa5q4hN3yPGmqoAfGgeFA8aImWy2Fs0tiksUlwoelC04VmWDNrzaw1s8DUZ+oz9YGrr6uvq19XRcj2kO0h213\/pvPWeeu8tVuNxcZiYzGYWk2tplbrHPim56jnUc\/Pwy1BlRsQy8VyKkDpofRQzoGPL398+aN3py3OX5W\/Kj+29m\/00IMJ\/Ir8ivzWwpvtb7a\/9TLoZXrZqAz0bfq2kWxLlFcBoqfoySa4JfKWyHGz4fiB4weOKSD90fRH0z8GRZ4iT7ELJsgmyCbI3vHw2u2122v36uvDycPJw6tBNIkm0QDSGmmNtAa0Gq1G2wUTuiZ0TdgLb9m9Zff27SBZI1kj2QmDawbXDKaApEpSJam0uKQt\/70LfTL7ZPbJYsh9Kvepd2aCR7lH+S0X4I7f3fG7wPEwNH9ovvZpGNWN6kYHQagSqoRqi6dxQ77YFGeKM8WBy3WX6y7tUPVl1ZenHj\/5emVJZUlVXeha0Uv0ohXSO9M7X\/ozzJ09d3a4H1w\/ev3o9QOW4oe2G467kpWshDHJY5LHJMPl1sutl9sg5WzK2ZSxoFfpVSMpML56fPUtZ3qzpuVMywloGydo07XpQ8Gja0djRmMMETCqHdWOqsBQbCgeLYRPT316qvhXvBLrV+9CR7ZEttxf+vP\/\/ubON3e+0fDx4Z2\/2fmbnWfi5jnLnGXOHmBcZVxljIGnpjw1JXkKKOQKuW04DOwZ2DO4BwRPwRNXy0FMIF0mXSZZAvo8fd7oJih9tPTR4ydhaP3Q+qFp4HHU46jHUfCr9av1qz34uHGNcY1xDZvlTfImefMNFskVV9xBXaYuU1fCaPlo+agBFuxZsOfBieA14DXg1Q3zV81fFRUMkdWR1fdXgqpF1aJqAeM54znjOfMAJZbx0wIOiyUe8B3wHfCCexbfs3jOAnA57nLc5UnLApPd4PC4w+NOpy3RcgPwB\/6A3Q0\/mAHDjwtDDoNtnm2efBfccfsdt98Z8\/z7lyIvRV5+5fjaxoTGhIZYKP1D6R+OLoKwc2Hn7n4BJC2SFmkiiE6ikykL0KBBB1JnqbPUGeSJ8kR5Irz91ttvvf02tOxs2XktF\/xMfibfLOh163XrK9x\/4Hzw+eDzZaMnJsRNiJuYCJPKJ5XfmgG+j\/g+4vsZeJ\/yPjXpgZ\/SdFYLfJNy32v3vXbfR2BbYltiuw+0aq1aGzhtT21zbXPt7spDTqudVqs3q\/Z2e3V7dffAU15PeT0VDitHV46uHIbmDc0bmsNAPCIeIR4ooURSYrbo4v4fH2psi22Lbd3AqDKqDHJ4YfSF0fUPQ1V9VX2VP5hdPcgYyhjKGIo5y172svfQ9NGW0ZbRFn75Wt8wwpgDkhxJjmQ39Df1N\/Wlg7hCXEE6eC3xWjIxGqZqpmr83WGwZLBk0BcqMyszK0NB7iR3kruBPEoeJY8CsU\/sE\/v4H68Vt\/Gw8bDxAJawRNj\/4Jm0O9LueO6OojuqNlVtqqyDEEWIIkQGr\/S+0rv1L2ahytxhJHIkcqTFchwFMJnJTAajv9Hf6A8T3Se6T3SH+m312+qr4Ylbn7h15eswGjgaOKIEVbgq3KEKJkROiJzo\/XHlPS\/f8\/I9X8XPcst1y3VTgKfGU+MZAwtWL1i9IMU6B75pmbhm4poJTUL8+SXnl3yXvq\/9WtO1ppa9tY8qohRRtkGqvbf53ebnFwanXj\/1etVFePizhz9bdBkuT748+UqM2VKwDNjLXkFlji5j4Mf6YJQoUYNpumm6yQCyOFmcTRUoihXFdljyo\/tAv1u\/W78N+iL6IvoCkfTX99f3l0O\/sl\/Zr\/0nXmv6a\/pLoLent6e3BsRgMZh14BjhGOG4DE5En4guywRhljBL+C04vOTwksOdcH7n+Z11lWBUG9XGROjy6fLpWgGaek29phr6Jf2Sfgn0d\/V39XdBf0d\/R3\/HDe9\/7vPS\/tL+Y9Cr69X16pDoC\/WFI4UgOAlOghPY9tn22WpAppapZWowxZvixfgbYgk\/DBDVVFMN0h5pj7QHWva07GnJB6VWqVXq4ORfT\/715Huw5fyW86+0Q7drt2u3Ei4subDk+4iHQnPH5o7N+YsoXpx2cdqFD\/a1j1eMV4yfI8T\/2p\/vX70LXTtYO1i7+PTjsn2yfbKVd7rJkmRJ0nAYkzUmy6kCJuVNyps8HXqP9x7vH4DxyeOTPZpAu0+7bzgIDEWGImMeSPokfTSDECPEUA3iWnEtTfy4MGS0drR2tBZcGlwaXELBr8yvbGoJVKmr1KdCoCu\/K7\/LGbY5bnPcNsZG5jTqNOrUCfrz+vP6S5aBQPEzw6rJkibKAolWopX0gd5Gb6N3gMYNjRsa15uDZ6Y10PVq16tdb4Cz1lnrVAx6D72HPgaOZxzPOPYUnL5y+sqp5eD+nvt7tzwFl3Zf2n35KRgOHw4f7gHTetN60z1g52\/nb6cGU5OpydT2X1hgy3XLVXKVXAl9H\/V91BdqI+vc1rmtazHIo+XRNkfBP8s\/y38bjFk4ZuGYfLhedr2sLRnIIAP9DRbYE088zQMley1LOhOBfPJpgSvLryy\/shwe0D6gfcAAnuM8x3mOgWc1z2qe9QbdbN3sYV\/4NPDTwE8LH3bb37G\/40DS6cebaOLyQPB+qwW+Sbn9wO0Hbs8LfmDy7MmzJ3sKgkuDS4NL25JbRlePrh5N6K8+nn48\/YtQePjQw4cWXoc7HO9wDHgddt63875cAZR7lXttnWDChgkbPEvAeMR4xOT+U1WNsEHYIGwC1rKWJNDEamIHUiDu2bhn486CV6pXqtc60MRp4jRd0J7UntQRtvtDxyTHJOck1zA3g5vB\/Qy4ZLtkuy0Hlx0uO9yWg8sZlzNj8+AWt1vcPHtAnapOddKBtEvaZRMPtjm2ObbxYCw1lhpTwWGrw1aHzaBwV7grXMG037Tf1GF2bUkCwSSYBBnYVNtUy4NB1avqVRng9ujbo6dlw8KZC2fGjIenb3v6tjUDMBw5HKnLAk2rplUDjK4YXWFYb1kLroJR31Hf0VDQBemCdAny0o6ijqIOn90fDhUNFQ3VwMQ5E+dMrIOF7y58N\/Ze6D\/af1SzByimWDgGdNBBlyUtthzEveJe0QRkkUUDTFgxYcWE\/SBfJF9kWwKZEzMnZtrAbRNvm3jbp\/D4xMcnPn4etLXaWm0ZTNk3Zd+UPU21yt3K3cqd45+Wl8pLbcqCH7CmkW5yxEKxUCwE42bjZsNWsG20bbRt+FubalA1qMp0mqnYp9inCBEE+\/X269Vdj9jKo+RRdrvb5p0uPl1ctQ0emPvA3AdehHseu+exOX8EXZmuTHcE1JHqSHUEiF6il+hmjkYL6TBUNlQ2UARj48bGuayEF7968asXPwJpsDRYWg0ajUbT7+2YXraqbNUxn9a7h2cPzx5ss0\/xedHnRe+Z4POiz4veD4I+TB82rIFKVaWqfB18vfzr5dURwCCDQjgoTAqTosM8gLAV8xrlrv\/nnf6PnSo88cTJUnW1H4YMQ4ahKAiICYgJOAjPnX3ubOprEBIXEheSASEhISFBPXD\/G\/e\/EXEaxq8fv95dZ59y5diVY5eXjNw74Dbg1lfomI4Jk+gFLx5\/8fjmW2EsY3GXw1DPUM9QlTltJGYBChToQBYiC6EEHCscK1RyKJ5VPKvobxB0Pej69AWwcHjhcMxnUOdW51bXA5OSJiX5yEe8pximGG6bfs\/CkLUha0M2C8KkoElBkxon3S6RSCQSeWu2aa1prbjWmge++aN0CFAFI9tGtukXgdRT6iltg9vO3Xbuth6ISYlJiZHBxm82fvPCy4X6nJdzXn7rznm2LgddDrq6DcQMFg0WDZZAUElQyYwScC90LxxXCENuQ25DrhYXL9+SzywDIUlIkmyCDrcOt45EmHhs4rGJZbDv7n1377sd1JvVm9Xboe9c37n+MJuMsqCyoBPnBt9ondA64frHp5eG1oXWzUqw9ZdIJBJpBvSu713fJwG7FXYr7DaD2Cq2inX8VHj87yKQQCEQJOGScCEENLM1szVBIK4UV4o7YPrt02+fccXWv3GgceDyzNNLjzQfaf48bvCN9pj2mPbtoIpURTrsgI9e+OiFfW+Dd6t3q\/d26Njcsbkj2LIAxtXyvQ2WYgM5jNs9brd7ExyqPFR5SA1\/Lv1z6Z8loFitWK0ogojaiNqIwIYNSx5Z8siStwQhSB2knpGguCL2iX3iufKDA8oB5YACjE3GJmMtDO8d3jt8FLT+Wv+h1b9+Af\/q58BinVgnUYH\/oP9ggCcYs4xZxiwQN4ubxc3QUtdS19oMvaW9pf33QOvp1tOtL\/2+u6WmpaYl0qHCOc45zjkawm8Nv3Xu62AfZh9mHwZ9+X35fZtAskuyS7ILiCIKP4uQq0FikpgkbjBQOVA5cAxM2aZsUwYUrypeVbwMPr7n43s+ngEb7t5w94b74ED5gfIDlcH5JW0lbSX9Opwfc37M+ZEqL3WAOsBh+rxx0kJpoSy7v5pggllsyTsXA2mkEfkLfoh\/bOb3Q5WQq9HV6Aq2BluDrc6cZ52wXbL7m03fbDqbusq9alHVoqoXU2bmK\/OV74dOcZY0SZqEWBjUDGoG2+Dlr17+6uWTEP9k\/JPxj0HjxsaNl6tBX6OvMe4BSZ2kThJ3Qx5egQJvS5GFO7TFt8W3rYUHjzx4JGYlfDX81XBFBpxce3LtyRSoz6rPqt\/hnu2y1GWpy7OBq1XTVdOVjedyAjIDMqcWgqRWUivNt+TPmyG2NbZ1gc5c581sq4Bv\/jnw27e\/Pe0VywMkAzrp5ArwBE+wFIRMIVPIBKW\/0l\/5zdTVtQm1Cec6kt\/pXtS9qNsDAtsC2wLLYfZnsz+blW2J\/uaC5JzknOQc5qqiJEteOA3EBrFB0ABttEkPAh54UAZSlVQldYLL2ZezrxyFoN1Bu4NLLd0jg6AiuiK6QgEvZ7+c\/XI+nD94\/uD5gyHN7g3uDe6ufegydZl6DYiLxEWmI9ok9QX1BbXz4XlShVQh83\/jdclyyXKJc3OgSWVSmbyv5Bk0Bo2hD0aTR5NHk0F+QH5AfsBtkdAoNApN42v65vfN7wtb+nZ3eXd5954HZh\/58MiHh0f81euH1g+tfwhUR1RH7DNhaMPQhiEZTAicEOg9CBsf2\/jYxt\/C7NbZrbOfhOby5vKr5XC58HLhlSKQbpBukCWZg1xiK4hNYhOtgBtuuIHgLrgL4ZirtTRg2GPYY9gLdnV2dXb5sKBgQcGCvXBm3Zl1Z9aAJkeTo4lTaa42Xm1s2fJsxvj48fGeUY8ywABDmyxzZqcbgmEAocB0pv\/Yi2ujNQ9805JwJeHKoqs\/n89UBCgCFAHQXtBe0F7wyP6LERcjLkbsfcigM+gMWoiMi4y7Tw0xT8U8FSuAYdAwaNSA2lPtqa4Eh2SHZIdksAuzC7MLA5tjNsdsjoEqVBWqCoW+sL6wvjDQRGoiNfNA5iZzs5mDeS11LqBGbQoHY64x17gEXApcClxqQOWucle5Qc22mm01WfD58OfDn1+DUyWnSk4dgJaYlpiWWDAtNy03rgBhs7BZkg7yVfJV8jUg08l0MgUIeUKekAuaVE3qQJq5HawpHljHOtaBTYtNi00LeDZ4Nng2wF0+d\/nc5QP3291vd78tBKUGpc7wg8G2wTZtJnQv6V7SswSkq6SrpM782IqH2cxmtiVq3QQ2e2322uSD3TG7Y3bHQL5VvlW+FWSlslJZm+V1KxhlRtmoH+iD9cF6Cdjk2+TbVMDzzz\/\/\/PPPw9Hco7mfx4O3wlsxeS8kfJnw5eJLd0kdNjtsVk2vMun36ffp9\/38\/f1j7R9r\/3jQKuCblrlvzH0j\/A\/\/jyDAesl6YS0YzxjPmFqezWpf0b6ifde2Z3RRuihdlKW8TwPSRmmjtMDSUcITSCaZVNDs0OzQ5IB+l36Xfg8olAqlQg7Xa67XtGngD6v+sGq1Kzx3\/rnzz52C5trm2qtpmAv2V5kfNDHEHJyi3pymEpab57q0guguuhs7gEQSJVEWYeeDWqVWqS+Yv4eQDDqFTqELNWd3hlNhVDWq0k+3XKQP2AzaDMoHzR6sAksVjxbYwQ4xBzSDmkGNxizUwQ7M3SR3gtAmtAlVIHgIHkINiPvF\/XiCsExYJoSAOCgOilqwD7EPsV9prt7q00Lm7zN\/v+0ZaHRvdL8cCQZ3g7vBE4aChoKGIkCn0ql0GpBPlk+2WQQSpUQp0cKA94D3QCA4+zr7OvuAY5tjm2MB9Pn3+feXwfSA6QEzAjf+zjnSOdK5Z8tu\/Xb9dn32zwv4g\/YP2j9otwr4pmXp75f+fsnnP3+DxS6xS6yFEc2IZiQMljyy5JGl10B9Rn1GfRCOP3\/8+dLj8P2c7+fUFUB9ZH1kfTQ0lDWUNUjg4UUPL3o4FoyJxkRjlEPGV7u+2vVVbdbf7UvtS+2PJVWbIk2RJi28eterd712EaYaphr89dAj6ZF0F5qj1yhvyAP\/sMDhhzriHxrSa9CgxdyEzhdzM75mfipu+KGoQo4ciSVYpLnhepUof2xsb\/gpjyusElYJq\/hJ2ZbjiRVihVhhOd9koIEGmoELXKABhEXCImERsJrVrAK3OW5zxuXAls+2fLb5MzgUcSiiaA+MixoXNS530Hk4fDh82C\/zIfsD9gfsj\/Rs9iv2K\/ZrhK+Tvk76OvKAu95N76Z36stcOXPlzJV3wZXeK71XegfSTspOyipKYMbsGbPvvGBuHSRbDWMMYwxOe2B0z+ie0YKfv785r+e8nvO6NQr968XP3NxGCBfCJXNgyHPIc8gb+nf17+rPh+Gg4SBtKBjiDfHGOBhxH3EfcQeDyqAy7ACjj9HHGA+hY0LHzBo3kPYb39\/4JmQV\/IVjHCMHujy6PLpUsP\/k\/pP7h0CeJE+yOWoWmhBv6QK5C0wNpgZTIMjmyebJcsBtu9t2t2YYGzM2fux2sFluE27TBGM2j0l0dgfZalmKLB9MlaZK0xkgnHA8La6sD6BHLywzu+jCCsAXXyEVc2eMM5ZeW57gpHRSOi0D9xXuK9wPgruzu7N7EqjSVemqc5YumqUgbhe3i40g7BH2CD1m191UCE5ZTlljGqDuQN2BOgVUplamntoLTruddjtmglQmlUl1p\/aPjR4bPXbZS7uUycpkZepbnsYQY4gx6C1Pm1KbUpvSqzJBKSgF5UDawIMDDw48OJA27DTsNOyEuUyzCvT5+nx9PgjxQjzxP82p\/6\/z62+p83P1sj8TlRV2CDuEbHPDdmEL9Hb3dvfeAy2zW2a39ECUR5RH1D64d9q908LvBWO0MdoY\/VP\/44l3Trxz4v3Hg3rm9Mzpznjj28Oth1sPn3kmoLSrtOuLJjjz5JknFz4Isctily2oh\/L68vqvaqDKt8r3VBN8+cqXr5QNwbcrv135rQBDtUMHhp4A+Wy5v2wlDPx1cPfgVEgRnx595g5I3pa8bc3TcCX4SnBzI4w2jTbpPc29pogDDnAAORi2GbYZDoLPPJ95PqVwIulE0gkfiNsYt3HBQtA+qH1w+CtwGHUYdbgE7q3ure4nYEbPjJ4ZPTDzrzP\/OvOvcIfuDt0dcvDa7LXZazO4primuOogd2Puxrdfg\/b69vrrgzDeebzz+DQIrgquCl6We9010jXSNQKM84zzjJFg0Bl0hjq4Vnqt9Fop6A\/oD+gP3lAG+HNrsH\/u9Zfed6sLfXNxn+N9jhFP\/4y\/YTLXl4p1oKvT1ekCIHZc7LiFZ2Fu2dyy8OkQPC94XnA8yFQylSzsl5+3NaU15drK9\/4YZR9lP\/\/6iswR+Yh8ZLo5vaI\/A\/3l\/eX95WCrslXZqsCUZcoyZYEiXhGviIfbam+rva0Wov8c\/Zfox+Ha0msPtj4D+ep89w+OgsJTMdm2EHrDe8N7ZJA+kN750gL47f7f7vptMFzIvlD4\/X5wjXWNcU0BbYO2QdsAj596\/NTjp+C6+rr6uhokGyQbJBtg5uDMwZmDMFk9WT1ZBScKThSc2Gu+jtYUMLYYW4wtIGgEjaCBkaqRqpEqsFtrt9ZuLbgUuxS7FMOIekQ9orZ4ENur6yfsmLBjwo6ZU3X1unpd\/Q1Tgi1sYQtI66X10noY0gxphvrAz9fP188XWvxb\/Fv8oSa0JrSmA+5surMpeDMo9ij22O0FpxKnEqflMJo5mjm6\/f+uC\/2rF\/C\/BcM\/669IzlRXV1efzj7z8kN\/euhPcS\/evk\/qLfWWJsC4lnEt4y7A\/Nb5rfM7YLrDdIfpDuDh6+Hr4QujsaOxo7Hmdqx9EtD56Hx0RaBap1qnVoDrGdczrtsgZzRnNOdWOOR\/SP7pNrCNUzjJs8BUZZIZN8Nb17OH3r4IJ0ZPjD3xJezq2NW1qw3ULeoWdas5TaQqgT9d\/NPFP50ClxqXGpdqaK9or2ivAlWHqkPVAWqtWqvWgugj+oiT4brzdefrznA+7Xza+TQ4+\/TZp88+A9\/N\/m72dyEgZogZpmxzlRP6kayFOQtzFubEnPcUPAVP4Wie1k3rpnXjP1U1CfVCvVAPowmjCaMJIN8v3y\/fD0KD0CAUQd\/CvoX9s8D+Gftn7KWgNClNymowNBuajS0\/L+B1inWKda1WAd+0rJ24dmLKAv7lrVX+u89NHiYPUxwo0hRpiuVQ2VTZVLn341cuHLlw5PuIuPVjiscUu+RA2vi08c\/PgvGTx08eXwb9c\/rn9Ieb56j4WIJFDfzYmBwffIQgoIUWMROMYcYwYzCoG9QNahMonZVu9sGQ9WrWU1lToTqsOuy0OzikOGQq14Eh2bDKeMwyl6yGJ0afGH3iW7i39N7Sew3QtLVpa3OueecH6TLz3FJsMwfRBCdzdFwcxNw\/+oeglg+Yyk3lpnJwTXVNHbsOrjVea7w2B7Ys3LJw850w4jPiMxwPDn4OfurUw26eCZ4JnvOiOg0qg8qg5sfqo\/\/t+1LyXMlzR96wzoFvWsY9OO5B94X8tJDjxhts+Pd9bp9kn6R6Fa6+cPWF5vyXp1zTXdNduxC3Xi\/RS\/S1cJ\/3fd736cH3Sd8nfQPg2vJry68FWVzSQeAYxziGuVeUh+XYNeZos5j30+mku6S7pCUw5D7kPuQOpm2mJJMPPLr40cXL\/gYtrS2mZin0xPXEdEda6oY1YJ9on2ifBON\/M\/43438HXbVdtV1yy9YmlUAbbWKhOehFqeX9ActJj1oGFCzR7UpzNFgSAN0+3T5dPTB5cPLgZAPcl3Vf1n2robC0sPRDT7DpsemRe87vuOh60bWhbM4XNi02LTbuZZHienG9KfqfDK3+Tz5\/juesQaybGKctTluc9\/7vjfQynUwn04EkThInVLpOPvXdqe9Ovbq+ui+6L7r3IPgG+QbdFgERQoQQ8SH0ruld07fG3JlCkgVisVgsFgPOOOP8Cy4onHAW\/xR1dix0LFTnQsHTBU9\/cDdcHbw62JwDjmcczzjuA3ayk0BoC2oLaguGoq1FW4sSYXXL6pbV7TAUNRQ1vMI8kEgCzGki8QD8bAjoh+1aj3CEIyCRS+QSGfTu6N3Rkw33pdyXEvkYfB3\/dXx1FjToGnQNPnBr3a11Ppv2PvBw58OdDz\/qHyeZJZklyew7YNAYNAbN\/54FBuA1q4BvWl6f9PqkzNP\/\/uOKy8Rl4jKQucpcZU7A3\/m78NBvfU0dpg5js0Rt42bjJneF+fbz7eevhHHKcUr3FGhLa0trSwMhVAgVqvlx0zOaaKLpv4ie\/pAuOcMZakD0Fr3FKHBNck1yXQFfq75WVc+BE3kn8sqyQVYjq5G1wdQzU89MdcpbQjDBDEL1vOp51fOSCsq15dpyHYQmhiaGroCAfQH7AjOhZ1HPop5QoJFG5gCVVFLJT0UT\/ygQX3zxtZQB7gVtuDZ8eCWM9xjvcctkiEqOSo7Kgdy\/5f4td9Dco6tHfYs+ryiv6C8LHn2Ai1zk7FsY9Aa9Qf\/T7o\/\/bgGnkvqrNsG\/egGveHDFgyv+9O+3wJLfSX4nTQFJpCRSCA9N3V+7v\/bjmuxXG3Ibci9Gw8yCmQVB8RD2ctjLd78FXTFdMZ1xINkv2S8pAHGJuERcZhGI7j+4ff+x7G8DG0gBoUQokWhANkc2R+IDhlhDrCEBit8rfq\/4LzB0bOjY4FYYlzYuzT0PgmcFzwqeueVd\/TP6Z\/R\/GMi\/UH6h\/ELlYueukq6SrlxVz6FHDj1yKBn8y\/zLAsosSxtLwRRlijLNMbfFNWkxb1my9b9P10jqJHWSJugwdZg6lHB38d3Fs38PJ1edXHXyQzgdejr09FqYUjmlcsq57M\/iF8QviH\/o9HPiZnGzuLVym\/GE8YTx1P+SBbYK+OZFkaxIlsv+fQ+EsERYwjJQH1QfVEdJ4g5fOXzlyBevPXq19Gpp03FzuaDDAXhw7oNzF\/aCPF2ebpcJmv2a\/UPpwDKW4WSxqOcw79XkfsPrPz54K1hBFZhkJplhK4xVjlWO7YEv4r6IOyaF7+Z+N\/e7PebGA\/ZzYKJkomTivPQ\/Dn0\/9L12wpWsprSmtCZfcPFw8XA1ZD+vT9Yn6yevp3Zt7draVDjx6IlHT8yCiNSI1PsOQMfBjoPt1SCUCWVC2S8JuFtiAhVUiMvB6GZ0E4tBniZPs0uAmISYhFgJfG\/\/vf33ntC8tXlr8wo4HXw6+HTma4\/OV89Xz\/e+94Jmi2aLJtd0QMwXzeWZ\/04B91gFfNOSP5I\/8sH9\/74HQvKh5EOJCCOqEdWIo1+Qfp5+3sj+sABTvaneuA3u7ri7425nCDofdD7oRWgvai9q227Zl3iypQ5W9l8I9h+F+8M7PXr6QBGliLJdDT26Hl1PD3z22GePfbYURkJHQkdmg7fGW+NtGKgPeSTkkZlO70hMD5geEH3A73G\/x29LgmniNNH\/tjdHi\/OL8w9NWbHsUsOlhsYkj\/zPpn429bNpMF02XTbjLCgSFAmKBBhZObJyZCU\/dbX8OW7cvlQFQovQIpyDLnmXvKsaZmTPyJ6RAGHfh31\/zx3wecXnFYcr4Nusb7O+XRwWcLb5bPO5nsmVhumG6YboBnid13nv35iFeH7t83+0WuCbF595PvOmLP\/XBSymiWlimnlDbmW0bO+lkkslDWkffn219WrrlSZwTXNNc10NDyx8YGHUKGjLteVD31qit3VgzDRmGtNgzJoxa8Ykg2K2YrbCGUYWjyweyYbelb0re1daLO4KEI4Jx4RSELeKW8VMcO1z7XMNhvf\/9v7f3v8zNLQ0tDQsBtd613rXc3Br1q1Zt25Pvavrna53ujUdGl2KLkXXAH1RfVF9zSB5WvK0sLoj022e27xxioym3pjemL7MbBrSG9IbtsLnnZ93fu4Ey3Yu27m0AK6FXwu\/Nv2GtdK55LLX3P1STIYxJWNKxhy0bMO6AnSpulRdAfRW91b3NpnLBiUe5k4c2giIiomKiXoOvjn9zemaSGgvbC9s18Gs+Fnxd8\/59v25S+cunfuMs03fe33v9W0cDieHHHKsLvR\/x68+D\/x89\/Pdzx3ipwbiP3Bjf+Nf8LnDBw4fOHwA3z393dO1TyVeKN9Xvu+rA3+5qIvSRek2SKKXli0tW3oOfnPoN4d+85ale+MxcO5w7nAehCPKI8ojSnjX8V3Hdx3hWvO15mtrYVLXpC7vZfCne\/90b8a94ODp4OngCYPqQfWgGhz8HfwdvKElqCWoZQW8Num1Sa\/dY+4x1X8QfGQ+Mh\/ZubZpy6Ytm7bsjlv6Pfs9+3UgPyI\/IteDz3mf874nQOYt87ZZDmOcxzg7ucNn3332XcnftdPKastqj++0qx1XNq7MzQmeO\/TcoTRb8Aj3CPd0h4HQgdCBYLAftB9UesFQ8lDyQBw89\/1z36fdDZc1lzVN6eDZ7Nk8Ph4SryZeTbwK89Xz1fNV0JPck9ydBI6rHVc75cLf3\/v7e38\/Dvkp+Sn5K8Bu0G7QrsxUfM+ye5bds+jxKQFzA+ZOm7\/Ld+DhgYcHH\/7XBfzKO6+886dvrAK+aZn+5fQvAz\/+F36gGCGGKHOdq9gCw17DXsMB3y\/VVemqdDW++V4KL4WXHHa8seONHW9Ai65F16KD1w+9fuj1Q1DXWtd6vgPkznJnGzWMeo566kvBuci5yEUHgx6DHkOzYYpuis6nD9Z3ru9c3wnaddp12nXgMsdljssc2HFox6Edh+Bo49HGo43g3ODc4HwBxseOjx0fN32iXC\/Xy\/Vnm0W9qBfbwOhh9DCGQce8jnmd8WB0N7obwyyNCGpAtkG2QZbo4z68d3ivdufF6z1berZ06yDCKcLpvmBYc3zN8ZQ\/QKe+U9+lBdVk1WS79bDVbqvdK3ZwQX9BfzEeVAmqBFUMsJ\/97MNcSB8GHdUd1R2VEFAfUB9QD8\/e9+x9z95n+b4xkPxe8nvJf4Xm7c3bm7eDokBRoCi4sEzRomhR1N72gWASTILeHA0X\/4XG7GeHzw7X2lld6JuWWZpZmtlZ\/wPXy1KlpDygPKDcD9\/1fdf3XdHW9gtpF9K+X+7r5hThFOEUAePk4+Tj5LD0zNIzS3fCgHxAPpgH7ePbx7eXwu1pt6fdfgDeX\/r+0vcnwdQdU3f4z4CPCz8u\/NgLHv39o79fqoCzpWdLh0rh\/Y73O96Xw4bQDaEbQqHIr8ivyA9Ozj85\/+R8GFM6pnRMKSj8FH6KgIfust9sv9k+\/WyzMc2YZkyzNHI\/Ard63up5qxIeO\/XYqcfaYTR4NNgwDsS3xLdMCeB4yfGS47eNoQdfPPjiwYdOhh\/tOtr1ecGs0pMrTq442QF39d\/VH3oBYjpiOmIOwJbDWw5vuRvOac5pvk0G+y77LvsCCIoNir0za8W4zqzOrM7Ev3YMuA+4a1pmBLg0uDS4dBU6XFlzZc2VTT4VT\/z+id8\/8QQ4ejt6O3rC1BemvjB1I\/TL+mX9chgKGQoZ8vTNH584PnH8zq1Z03Kn5U6TrR+nzdRmDvsC9dSL9VYX+v+cgJ2ynbLHeP3zN16+Wr5anmQpJF911\/YrVVeqrkQ+72YbYBtgqwHpSulKaRJ80\/dN3zd6S0F9Gzx9+OnDKbcM1j330nMvpU1VHAFg6jv7iCWW2DVfAbAYvAu9CycugdvKbyu\/Tcy9vyOkI6Q95okjR6uOVh09B1M2Ttk45QU473Le5bwLmCaZJpkmgT5CH6GPuBjUm9+b35t\/4JuOpI6kjkQQO8QOseunKqo6fZ2+zgRloWWhZWEgf0L+hPwhME01TTWNBfF78XvxlOmAsFXYKuyZjUOpQ6l6emvGUOtQ69DiW9Kq766++\/TdMBQxFDEYCUfvP3r\/53Fg62frZ6sE\/xr\/Gv+sXYrJsZNjJx3964g6TB3msAj6N\/dv7i\/8praxqLGosWAKk\/Mm503ej+Af5R\/lryoUDmsPaw\/7\/Mb0dfnX5V9Xg9Nip8VOi8A20DZQfg6uBFwJaF7\/vJt\/iX9JgO6T7e5L3Zfe8vdTKfoCfYF+8f9QwB\/\/ep\/vX70L7b3Qe6H3w\/\/8\/xPXievENJDmSHOkDflv6TP1mSMlS5OJIsoUC06hTqFjjlZ5TQufFj6t6sk746bETYn7sObAb0N+G7LU54YDZZBBMbCd7aIeWM5yNgPb2CbU\/PBHYRkPfP7A5\/MPn3iuuqy6rLoYnFOcU5w3WDqBdIBxt3G3cQV4JXolei1+4RGPao9qj8athSMFIwUj+TfcUL2gF7RgmmOaY4qEgbqBugEs7yNAMAgG4Yad7OVB8iB5ELQ3tTe1N6VM747uju6OfuMb2y22W2y3gKHJ0GToAn2VvmpkC0zYPmG7V8alnNCjoUdDG\/1fG\/Ab8Bvw0TdJvaReUj+wrbCtsM2CE94nvE8EWDqYrIPYy7GXYz+DlltabmmZaGm5szso7gvDF4Yvwt75us+9z703J6SZCiqEUpCmSlPlUR\/sMC03LTd6LHuKAgrY88\/fx6v3Xb3v6r1WAd+03H357st3X\/vn\/580UBoonQ6dZzrPdLbCgs0LNi8IkRfNuXvO3fdc1sdsF7eLb0wCeYY8wyYb4h+If+DhTyEpJyln5bYbDuSPP0pzo3VDBwgJQoLgBWK+mC9uBkmgJFCWDL3aXm1v5IzJcz+b+9m9809f0TRoGjR6qUG2SbZJ6gkuvi6+Yz2aGm5Puj3pjoJJU0YiRyJHzgFb2Spm\/nQ64xHjEWMz2DTaNMp3QMD1gOtTvwT5BfkF+Q4wHjUeNbbc4IJpZBqZ5oegnVNcwZsFbxa8de6Zdud253b1hDm2cbZxco250YBtxLB3qCJUMcvtlj\/ZJNsky1r7lxiaDc3GLhDWCGtIBjsfOx\/lBvhy3ZfrSl3Btsy2zGYyLPxy4ZcLBWgQGoSGMTAaOho6GgLXiq4VtayHlAkpE54RoWxs2djyP8qLDhYfLD5o0se4erp6ukosvbaa\/\/n7WPFJxScVH1ld6JuXUkop\/R9Y4DqxTqyz1MtmwMDqgdUDc\/QxPTN6ZvRMAL7kSxyBaqqFamDjz\/Q+1KNHj7nn1QXLsZtAUAtq4chPf1YkL5J\/uuibRs\/pntM9b7u7sT6hPuF8eCXGcGO4yQfu3HPnnju3vNQ\/1m6s3dg80C3QLdAFWlzHNTecL4AAXIF5zKMVOvd27u0cAiYykZmYdxtc8J9dTbs\/2\/3ZbmffgaC1QWuDUjZtKF5UvKh40XvoE\/WJowdgpmSm5C63iAcdnB2c7Zf0LxnxG\/HTxYHNMptlUlfLcTaZ2\/aO7oM7VXeqZrhDV09XT5cH6Jx0Tro84CAHqTFvhC5UA954CwHQ81TPU72TYGB4YHjgQX2MECgECgmYO4is4KelnVb+b1lgK1Z+zVh7YlmxYhWwFStWrAK2YsWKVcBWrFgFbMWKFauArVixYhWwFStWrAK2YsUqYCtWrFgFbMWKFauArVixCtiKFStWAVuxYsUqYCtWrPwy\/r8BAGFwmBPzd92GAAAAAElFTkSuQmCC&quot;,&quot;nombre&quot;:&quot;CertCreador1&quot;}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba1Flujo3" enabled="true">
        <stringProp name="TestPlan.comments">request dashboard</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">10</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="request dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance GET" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1_f3.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get iniciativas" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/listar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance get" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios pidiendo iniciativas simultaneamente</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get procesos" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcionAlcance&quot; : &quot;18&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;pepe@gmail&quot;,&#xd;
	&quot;fase&quot;:&quot;fase inicial&quot;&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/proceso/listar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance get" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">30 usuarios pidiendo procesos simultaneamente</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba2Flujo1" enabled="true">
        <stringProp name="TestPlan.comments">altasIniciativas</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativa user" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcion&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;colo@gmail&quot;	&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/alta</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios dando de alta 2 iniciativa</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativas organizacion" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8785/proponer</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios dando de alta 2 iniciativa</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba2Flujo2" enabled="true">
        <stringProp name="TestPlan.comments">altasIniciativas</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativa user" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcion&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;colo@gmail&quot;	&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/alta</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios dando de alta 2 iniciativa</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get listar Certificados usuario" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/usuario/listarCertificados?user=colo@gmail</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.[0]</stringProp>
            <stringProp name="EXPECTED_VALUE">{&quot;fecha&quot;:&quot;2022-06-14&quot;,&quot;insignia&quot;:&quot;iVBORw0KGgoAAAANSUhEUgAAAHgAAACWEAYAAAEyvaD1AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5JfxUYAAIe+SURBVHja7JVbaJN3GMafL8myGdovNm1kodo0GwtZnSVY+5UusGpPgqYHu5KJFDpTKUhX6RJktoRqkUEaEPQmww0XenA36pfSkq71AIV8TSE0oLbaiqvRmorQiabVHPRz7668GlmgHe6mz8179X9+\/B\/eA0NERIT3Lgn+J22A\/6GD6oNqSzbQdL7p\/KHDwIWrF67+0g\/oRnQj2j6LvGahZmH\/HV+8uqi6qKoFUMwp5j6aAVoPtB44Uvcvxu+aK1UtVBQqvsgAdDm6HK2KqEKsEPdEiASv4BW8RMK4MC6ME6lFtZgdIdKxOlarICrtKu0q6Urtm\/bHbDfbzX73DW+32+3HZwBPyBPy9AFLT5aeLFX27rMt25Y7Lo4mhs4MnRmqAsIr4ZVHMQC7sRuqdURtcpvcXzYM24yVxkrjIjB2c+zm2F2GMSfMCfPPJ36XLkoXpZ\/s3zTPzrPzlh03hClhSpgCClwFroLRdYBbiluKW8OxMOSQIwMIRUPR0CvgdPvp9p49gL5aX\/35r0AwGUxOK2cr370LbAlsCQRSb4i04M7VztUfVhkGecjDx4Bvl2+X7xiRl\/NyvArQ3tbe3soD\/CA\/eNlFpHQr3ZmDAMdxHOdmmDU3l\/W19bW1AyheKV4pOnsnKtwSbk1uJxIWhAXhPpGf\/CQ0E\/nr\/HX+GiJDoaFQb3gTbgu2BduCqX3Tgl2TrsneNwC9pbeUBey07rQa9xHlRfIWt\/5GxOVwOUUiUdbLrJfKP4hKLaWWkkagOdIc+far1L6ydFHHa+O1iQzAyTk5pxFwnHKc6j4JyB7LliTDgDRXmvuBDkgOJAeSJ4B73nveu98DuIIr+AuACHFNUZdPl09XNAF6US9+JiPie\/ge\/ieibfJt8lwJUT6bz+ZvJuLjfNybSVRvrjfXO3+84XA6nI4X65jjxkuNl742AVBBRSrAVmYr6\/j0RSJpSBqSBQyzd3bvbFX\/0Wu+Tl\/nyHHZs4exh7EH17vKNRqNRjOT2pdJdxZNHpPHdBFQmpXmzKfAqHpUPWYHzjWcazh7DJAYJUZmMzARnghPfAhEDVFDdBCIOWPOxJ9A4HngeWB5DeCNs\/hf6W8AAAD\/\/+xWT0jTARh9s8l0GzHdLGlKThmNQhrkgsRgWZlmBKFTlzIP5aCojRitLgVuDJ1\/kGiQUbpQstilw1IZgjmba8qQH7lEIaRw1sLQTbItbH0dQjqtRV6C+i7f8X3v4\/He+\/\/qfxi4TlgnrMn4WX02R5orzc0fJDplOGU4eQQo2FewL2+YSFovrS9QAdoqbdX5M8mBE3r1TNtM24wRYDvYDvYoYAlZQmaGyN5l73rQArAYFrNNSRR3xV3fmgHbF9uXW51EgZuBmwHbL+IwGWNDhiHj6h5gNWc1Z+UikXJWOVu6AtTyank1PYBkVDIqydEtVRZWFp64Bug5es4VCbC2fW37Wmj9XFLKiUxcz+iZy0agx9xjvneY6KDyoLKohChijphXLcDixuLG4gbQG+mN3J8HvMve5RccoqaPTR+1cqJk4ZOQsb\/YX+zvsx+Xdcg69p4G5uRz8rmTgDHVmGqcBHa3727PvQ343vveTxFgi9qityxA40jjiGbkN9SV6KKzRWeL6joA0bRoOrOVyG132581E+UP5Q\/l1QD8TH4mVwBYFVaFdZ4TmhBOCCeyiMq8Zd5j\/qn5ZIwTiisd6eAWA+Wvy19X9t3OM10wXWheuPymP94ff7ifiPOU8zQtHYiFY+GYEmiwNljVLoC3wlvhd\/vKAAB3\/0BcMoVMIVsG+lX9qr47urdfdV91cTnAFrAFLBnAT+OnpQ8AnnHPuLsYkOgkuvyXLFbKQspCCqN7+8eq\/vz48+NoNWASmUSmNEDsF\/t3XQeWupe6QwJAK9QKtVk\/6q1MAzAmxsS0EqkNakNd1xYMxO1yu8ZVP3eVukpd8xwgH\/moCAiWBkuDchYLfPDBBZxSp3SwE1i3rFtihVsA3qw82gptRVPuzk\/lJeUlFSbAN+mb9NYD1ZpqTfUOIGsgayBTCWicGmfD0Se+7Gh2NHtwC7G4WXnCY+Gx8ALwyv3KHbgBKCKKyIEPjw5pVBpVY4v6hSPVkeqI2lbFXDFXLLiUEQwEA+9mAc+wZ9jj\/J\/HfwHwdwAAAP\/\/7FlrTNNXFP\/9eYi4UmZBBqUBQQGB0BafA8wYw0CJokPDm1VAXIC4GkSeDnBbzCRRxABDSAOKQHGpBeS1TIEANYJBM4glbBpAJkUgVlFWiKOcfdBEssUsIxl+kPPlfrj3nJzfuSfn3N+57yzU712kVwCvAP5\/xGCpiuEl4SWhxQD0oLc4bMYVxhWrY4GyrrKuS4ZAzs2cm1m3TH7znvWe9R5+7mA5ajlqdRwIKQ8pD74MNO1o2tG0BSiUFcoKswDWE9YTVj7DVFZVVlUqgLH0sfSxVCCKH8WPEgJYwAIWgNLa0lpp\/TIWLWmENEIaAciuyq5WlgN6NXo1Bp8B\/Zx+Tt9pIoWRwqhOf1Ee+cEPIQA3nhtvNQRooIEGAFvNVptGAVO9U71T\/QBdpIskBaCFFlogYjpiOox5NUWZn2EY673We63tgdv6t\/V73Zbxhu9G3o28mwDcT7qf9GCIqOpc1bmqXwE9iZ7EwBAwEZmIWN3ATu+d3l7h2DWxeWLzhDnTSuZkzuQBhhJDySoJEBcZFxm7FlAXqAvUp4DJ1snWyXYi+Zh8TDEOVLOr2TUsYJV4ldiogih4Y\/DG\/YYAhjGMh\/\/OVf7znOlta0dxR3HHLWBd7LpYMxGR2lRt+nsPkbJH2aO8SWTKM+WZcImatzVva3QHmgOaAxr9gWb3ZvfGcGA8aDxoPACQtcpaZQ3AFcEVwRUnQG4nt5N\/BOzh7+EHDLy210Pktt1tu1smkfi0+LQ4del+L1kxxiLGQvwScNG6aJ0NfmTcpe5SQRiRUqfUKf8kSlhIWIhnEWVOZk5mcoFUXiovxQ9wEjoJN468YSBZmizN1zbAgeoD1UH9gJfIS+TxLKZ7NHc0d6SdqNO507mjgYg\/yB\/kf0vkm+6b7hOXH7zsgIWbhJv4joAwWhjNFwOSQcngkXyi3vbe9t52oi7TLtMuUyKlmdKs05mIN8ebs15N5CZ0E7raEFmOWI5YDDUKuNHcaMv9RAn8BP6XD4iUdko7pR2R0lZpq7QlUvYp+zqHX5+XEgXOBM4ELizd7yW3JRdPF0\/XQsDZwtnCJQzQV+grDD9lmIbIhsi6EoYJqg2q3fc9wNrF2mVSB4j8RNtFA0BZQlnCxcOAXCVXKcJ3\/5JTnlP+jQBIEaQI0vQBy0TLRMtJoFJVqarouxwdlBuUG5TBMJz1nPVrzRmGl83L5h1\/B0\/LpOtJ14\/eevu+bEg2JMsjKp4uni7ZAsARjnAE2Fq2lj0DHFQdVH2hAgoMCwyL\/gCwFVvhBxhcMLhg8ANwYt+JfRkeMxzr59bPudkmT\/9uvyW5JflnZhmr9GPPx54Tlf\/sw9o6bZ2WlfiTIlARWNsHTNybuDd5GEA1qnEDODp1dOqrYcC+077Tvp9htGnaNO1uojULaxbWAJiPm4+bjwd8MnwyfD5gaV7kvch7EQJmLn8uf7b0TR9GMpJhtoyAHcMcwxzUiwC3oQ1tQMWjikcVQ0X+pWdKz5ToAS1tLW0tOUC9bb1tvR3AvcG9wa07ZuIT4xPjWwyk5ablpuQA5x3OOxRwgFNep7y+awHydfm6\/AkgtCa0JtSD6NDAoYFDQoZ5DfeVPFzGlPbQeeg89Rf9z2TPZmuvuRyzGbQZtP5kIO+a4JqgSQUgG9n4+EOx6x3XO87tTy95s73Z3uYM48Q4MU5GgDHHmGPMAYo2FG0oNCMK7wrvirjOMPKz8rPyHMAq0SrR6vNVYZqTmpPPul\/W6CQ6ie4I0O3f7d\/tu0IPV8jDCuD3DfBf7JprVFNXFsf\/l0BeQhIJBgWKqEiNUlCI42Moy6VIKY1UBRmlkVHEB1C1y1HHyqMWFCoDvnBEaARlKAREhgrtUKLWKgSx0IqB+GI0ojwNiICQEHLPfKhWVztfxunCmbW4X\/aHs9Y993f32Xvts\/97NIZHgUeBR4FHgUeBR4H\/D9u0P08mPLuusdxYbixn4NS3p7792\/dAAjOBuacGmKCfoLebKm7Ye2\/vvb2lmhnOXs5ezlsoiqViqVgVQFNxU3HTLkLEJ8UnpwdQlEFkEBkygT52H7vXAZBkSbIkOcBA5EDkQOSL\/TPPZJ6R\/30EgalEKpFKfAHMcGG4MOyer0r039R9U1fRWsvWTtBO0Eo1M\/Ib8xsVEUBweXB5sDchVAAVgLtAPpVP5UcBa8+uPbvOSMhM\/5n+brcpqv9m\/83e6wA60QnN\/0Cl5WpwNUyvAxgBjADGLsC01LTUtHTzw+S05LTkvxyxLztTdqYsG5DVyGpk3wNERERmyQC60U0OAVQYFUaFAURBFEQBaD\/TfvZPEXAw+2D2IQMQUBBQEKAAlC3KFuUwRZn0Jr1JD9Bz6bn0XODK5iubr24dwRgOLAssW8EGYA5zUgjwhnhDPD2CxU3iJvEB4IO+D\/pWcwDiQTwoX4CtYquYN4ExjmMcx+QCQpFQZH0MoAPoADoAcCpyKpriABzuO9yXxgGWVCypeN8ANMQ3xDfsBGxP2p60PQbw\/Hh+POlrSFrsGnYNuwbQz9XPNWQS0hzaHNricaSq3bLdsjMHIBfJRdIDbH2w9cHmfcCq\/av2hxh7tHY6O519Zay7qkHVcEW7pWXDig0r1j0FdDm6nM5no7nkQ8BqgdUCKx9AIBPIBBJC+qR90r7lG1yfKxIjnrQ0czRzNO9wRdnV2dXZqQBRE7XZHwD6AH2AXgNsvbf13tYPgLr36t77oYuinqqfqgd+B7Cd2E4sHcBVcBWcq3Bw7nXuneqVBrlRbpT\/sbj6U82nmviqZXM7pB3SjsnAF\/QXdH4UUMYp45wtzVCzjCwjS59JjbiHhTZCm7HxA52hhlBDqAkgh8gh+hDAPcs9y\/EA+lP6U3r1jz4qCSoJKhYBJJfk0mU\/hQDMAcqP8jPzB1bzV\/NXc4DA7MDswITl83y7fLt8HwBoQhNuAjRN0zQNFPIKeYU84FbHrY5b7a\/hSIfuCN2xxgLozurO6s4EKBklo0IAoiIqUgmkmdJMaca161jNrGaWA1BeXl7+9TSAYc4wZ5gDTBVTZZEL4C7umvUCXAFXYOkETI+cHjljMmBRYlFiwQP4A\/wB\/gDAkDPkZruBt1e9vcrb9BqOdPD+4P1BpYQUlRaVFt941r3MAjhyjnzMMaBUXCrOyjdwjcXGYqMCIDqiIxxgXdS6qHUbgci8yLzINUC3tlvbUwOgFa1oBQYbBhsG\/QCT1qQ1aYHe7b3be0OAC4ILgm83APMN8w3zawiJQAQi8Z+Laa\/s4UnHJx2fJKKoTQc3HdzwZ4Afwg\/hXwS6XLpcdLVAeV553jfblFOGaodqjQuBFkGLoE0OWAVbBVutBDqvdF7pZAMpsSmxyacBbZg27O4e4I7uju72FYAOpUPpIGAScxJz0gHA+773fe9PgHG142rH9VMjH8PWQdZBwpuAbZxtnO2Gd8VsGVvGlgFUO9VOLQD2Kfcp91oAVj5WPpbMOnu2iC3ieP36PT3JPclPjgPqEHWIupKQa2nX0n40Pov1JsD3qe9TnyjA39zf3P8kRdmk2KSM+\/A1xPDtPbf33HIAupndzG7VP26YBCaBSQAwLjEuMXYC9oX2hY46QOYuc5e5ezxU+ap8L\/sSYl5oXmieWeauLlIXqc8SMn399PXiNwlR2avsazqAFr8Wv7ZigPamvWlvQC6UC+VC4NHVR1e7JEwnpivTlVX0Giqt8Dnhc9bVAG9Vv1XtfuZPtemP0h8dPTEx0Hy3+W5G8yZR9sTsiTldFleHPIY8jB4AXOFKKgBmEDOImQgMy4flpiaA7qF76G4AwxgmB4Dzluctzy0FFGqFOn824JDnkOdg2RfjsMBhgWMmbx9XypVyB4Cjnkc9j3qOYNIadBt0G+wHxn499mtBSKqktbG1sSUa2ByzOWaLIGmtocBQYHinFTbHbY4LK4ATbSd+f2IOsHTiUsdlpwGSRbLoBUC1rlpXrQN8HHwcfByAjPqM+oz3gJ01O2t23KOo1oLWgtYvgPYt7Vs68wC6n+6n9QA84YmRBJ7FmcWZNQg4uTm5OV0DeqW90qe+zxaNurmToyZHOd0Adkh3SHe0AINWg1aGq8D1N68X\/HgCiEuIm\/fJLUApU8qUYiA8IzwjfCtgXWldKSgDCnoKegpoYGzW2KyxcoAtY8vGVAJUOBX+39xpf3O51Ohv9B8SiYuWpy5PXcHSBD5xfuL85BoAZzjDBUiNSo1KUQKpi1MXp9QDrdNap7X7A9BDDz2Qfj79\/DEhwOhl9FJsioIEEvybZPeqcukrAz+f8P1ZvnymIp4WnxYXJpGuhMMJh\/f9FdbkIXlIH\/ipwIAlEOUe5R7xHTBFOkU6eROwLWlb0o7TAJzgBCfAdqXtSlERcC7xXKKyZeMgcztzu8WnmdxfyrK7hnYNRc8fwSN948GNB5r1LwE3oxnNgC5Zl6wbhjV+wA+kHIANbNAA8Hfzd\/MagEWnFp1a5DYcVx1aHVodYh5P3aXuUu4AcSSOxBFoX9m+sn0vkLskd0luVwZH8pXkK0\/HzF\/p0CNeaXVqOjW6nhfAFjEWMRYXgcjzkecjIgBSQ2pIOIASlKAEaOxv7G8oBrht3Daul0XCkMuQy1DnxxOEHcIOoWdihO6S7pKuFqD8KX8za6C\/or+i\/11gis8UH5eXdejX1dPyiveKnzfwwvI8eB5jPryRvUyyTLJsD7CtbVvbR\/XA+MrxlaJiIHF94vrEy4AuRBeicwOi34h+I+5G0uRz98\/dV0YD1UnVSZXjgPAvw78MywBiqmKqYt4H+LP5s63qAXKEHDG5vrAjDjxePF5st\/iFrWJWMauKpq2Z9fGsjz2mAvce33t8\/\/FXMyO6IroiugCRVqQVaft5SlpJK92AWy23WjRW8Es\/mn702FUgT5OnyZ8M+Gp9tYuPUlTynOQ5yW8Dl4SXhJe\/M8baJdklOeQDz+2IZ+lfTgDMvD7z+lvHGqemz0qflbFxxh0iIILhJoCbwc0Yc5iQ0AuhF0IFi0qpMqqMOnYhwLXLtcu1D\/g8+vPoz6MJWZi4MHFh4f69LotdFruQXbF19nX2dXzguuK6Qt3UmmCmMFMwFHaxz\/d71QmAV45hsxyzHCrnpR+wat6q+fkz7gAANgKwgx2sAbcetx43HkVJLksuz34MDPAH+AOLARJBIsg0INAm0CbQmtNYH1MfUx+nj9VKtVLtQkBYJCwShgGeTZ5NEpldbL1zvXP9ypc+4DEe49EIeni0ET8KPAo8CjwKPAr82z\/\/Yu\/c46Is0z7+vYfh4HAQAYdxVBRCw8QjiHhAWTOPSIBEhIRaeEhYVl01tZZcTTMzT6lrWkiGeEIlJHVVrFwMNcVSJESEkbM44DDCOAM4z\/sH+tZrtdtnP++n913j98\/z13O4nt993dd9X6f7d2eW2kZ0G9oIbkMbwW1oI7gNbQS3oY3gNvxzyH\/rF0Y+Hfl0RA9AixYtP4QSHgtOWXtbe1t7wIPIB5EPvCFlVsqs1J0\/PKfrxK4Tu9g\/DBynglwpV1pUgrHUWNp8ZuWsZzTPaHrlvvFuTs+cnmczcOzcv3P\/zv5gG2kbaTsQmvOb85sboLNbZ7fOBijLKMuoyHdf3C2vW163JOHkkO2Qbb+1eJFYLVazBuy72Hex94PtdtvttgeDR6VHpYcZctfmrs1dBzOdZjrNdPlpMujjcv27yaH\/ORpcQw01P\/MD\/tX1MXT16urVZRRYyi3l8kC4c+XOlTvDK6YY1UZ1Y+rSbd09unu4ZUvt9en6dP05SdIka5I16U05FFNMsY1Bk6fJ09RJ0iHDIcMhX0ma6TPTJ3ZS8TsZhgxDuuHmwroJdRN0jlvGKt9RvqNyhXzPfM\/8dWDrZ+tnG\/Yzcv2bcjxxjo4BGwds7PcrGkC17G3Z27J3aZLJyeRkUq+cXpJekl4SA+3D2oc5BLe2TfNwArOD2cFsAw19G\/o29IVDKw6tONQPdCqd6t63rX2hzAmgnqaepo6BY6pjqmNqGO833m+8L1QmViZWLgOhFEqhBPcN7hvcy6HXwV4He9aCT6lPqe9ow\/6mhKaEpvklu7QXtBe02WB10eqi1cXemboRuhG6QBifPT57fLYQjWcazzSe+WUNTumT0ie13xNM8J7UPal7iuDWK7deubUNjp48ejLzWTB5mbxMI0AWJguTjYIHuQ9yH1z5Y2VZblluWd6mTmcXnl141hoqvSu9q6NBppQpZS4gL5YXyzXQ\/G3zt825wCpWkfjwhwY\/vBp\/om0\/zF8ttPwPDXPEETVIVpKVdBzUMeqYTrNBf0J\/4t6Jh\/mBV8Bik8Umi+MQ9nHYxyFfgG2MbYxtiBBitBgtRrc2fb0fAo5hjmGOftBxTMcxHWPh1MpTK0+veIJtcGNGY0bjm3D\/0\/uf3n8D5J5yT7kc7o65O6buDHTd23Wvu7d8dklUSdQNpxcs7uvu6+5vAouZFjPln4FwES5iL0hISE3QrGnWNCvA\/or9FfsUKN9evr0iHVbMWjHrrelwo+uNrkUfgSnTlGnKaB04Ld+Clb+Vv7UN2M+2n91+DEwePXn05GhYMG\/BvIVRcNP\/pv9Nf6jaVrXt9nYgn3wKAA0aKQlsNbYaW7fW70AOXse9jntth6rTVacrVeBe6F7ovhzqnOqc6uQgi5HFyGJ+B6voS69eevXSq3Bi3Yl1J9ZJkra\/tr82RJJcVrms6miWpEV9FvWZ\/3Lz3zJ7ZPY4NiNAeWT9kfWf34Zyh3KHil2ABx54QLePun3U7RxMsp9kPzEHhjgPcfZbaCp2l7vLu8XbzsgZljPsQjchbq28tbKsVghdqC5Uf1KIwi2FW24+EOJDiw8tdmQJ0dult0uvciFKh5YO1WQLMWr6qOkjLQ7WTJk1ZVakJeT75ftdzQPzOfO5loG0JuyUg26rbqtuPpz3Oe9zvgKmvjr11enrJcn+tP1pRxdJuma8Zrx2XJLuxtyNubtakm7n386\/nWeX8sQTrChSFLUzQED3gO7D3YSQD5UPlfsb1hYuKFxQuAC62nW16+oA1SnVKbd3gWyubK4sHggmWEqG+qT6pLubYejOoTsHT4QzoWdCsycN7tR4s\/GmsbPNU93WdFvjFmP4qLGoscgwFISn8BSegBNOP9fFXSwQC8QC0Cfrk\/W7wD3GPcY9Mtx1lGyUbJRciPVD1g9ZPwSmHZh2YOoB6ODYwbGDI1joLHQWWri1\/db20gJwzXbNdpVDUlxSXNIRaKxurG4ogr7efb37PrPwkq\/SV+nr0hD9xC+yfgnO3zl\/1+GYJHkaPY2eF2BLjy09tn0FplxTrnEBqNap1rlWwpCqIVX+H8BTp5469dSpcTuFQiiE4u+vSLOl2VI81K2tW1s3Bz478tmRI2+AZ4xnTI8rIFpECxqoMlYZq4xw+OLhi4cvwCDFIMUgM2g3aDdoE0EMF8PFiIc2uQWU6cp0ZSaETwqfNHmfJEXMjZj7ghpCfEJ8wnYAG9jACFAdVR1VHQWflT4rfc\/DILtBdgNmRs1z2e6yXbl2zwZnD2cPZzvYHLA5YMs\/nmAbPEVMEZESfJn2ZVr28lzbe7J7Mp1uQMM112uu1yTQxGviS7pAk7ZJaxoO7GUvCtCatWZtERjtjHZGBWyu2ly1uVbu2xzZHNn843ylAAKYCjq5Tl4nh0uxl2IvNIBdk12T3VbI9s72PtsXBsUPih9UAGSSyX5wkbvIXRTAIQ5x8eHiqwVkKplK1hd6xvaMfXop5CblJuW2wIvxL8a\/dARMCpPClAfVVtVW1VaQ55rnetUVBhcMLhh0KnW93Cg3Flemrn932LvD3vmHEA87wz25Ghz3VdxXr33S0zFrTNaYrFeu3632q\/arXgDrxq4bu24s+G322+wXAbplumX6XBBmYRaZoPJSealCYOS9kfcCbsDA8oHlA9V7hndUdFQoo6POiibRJFpA0kgaqRicgpyCnDbB4ZbDLYd0YJpmmmZaCzq9Tq\/TQ4Q8Qh5hBYOtB1sPfg7Ov3D+hW96g+1+2\/22u+DB\/AfzHywFO+ywM8AB8wHz\/nGStLhkccnrg1vLi\/qoQOiFnq2ADTbYQIdFHRZ1OA4HPQ56HNgAyQeSDyRbgnmpeanUpSy45M8lf9acdzvyxNpgQxdDF0P3Qp3zMudlzrFC9A3sG9h3lBBWwVbB1gX2vUZPHT11dDdomNAwoTEcSCONVKheWr20ahfkjM0Zm+MDX8R\/EX\/a7aXsG3k38gp9cw5Hro9c\/6IJjqYdTcs8ASU1JTW3loF8rnyuRfDD5onJP\/qQL\/mSo1DxVsVbFX+C5ZeWX1p2DyzjLeOtRkN4XHhcWI6l\/x7VHtVulSSNU49Tj4uHXuN6jeudCrJXZK+I\/qBWqBUqFwj4MODD4T7w4t0X74ZPgut7ru+58X3Pjv2a+jX11Qjh6OXo5ej12xH7f0awU4NTg3MY+Af5Bw05BH4Zfhl+x+GT7z\/5PnnkyRkd8jrkdbgCbpVulW6VQCSRRLfaOuENpXWldeUZcNL2pG3WPQg\/GH4w\/Lx\/SLR9tH20tSS1P93+tOPx24et0q3SrZROyVK6lE7qDxr2qBZVZpAZZAZwHeQ6SBUAhwMPBx5W3hiyr\/++\/qkTJCliQMSAyK+acnJ25Ow4HwpR16OuT2kHMkeZo8zq4bYpHyr0FfoKI8xPmZ8yTwHNa5rXtHwL7Ye3H+4w8Ia2w\/4O+53ng0+yT7LP3t+BJ8un3qd+wLEfjbBSWamsEvTl+nL9KUkyp5pTHwS32kB5InSM7RjbUQ\/qteq1ndZCXGhcaNzLYOlr6WupbS17k9aCFCVFmQPBZYLLBJc60GZrs+9+BIc2Htp4qB\/kR+RHXNsFJq1Ja1z2cNX7NYzcOXLniE9gYs3Emok1UOZU5lSWAeJL8aW8GKQaqUZaBbYjbEfYRoPWqDVqfeFGw42GGx5wtfPVzt\/thoKigqKCc6BN06ZpZ0OgLlD37KqkBap9qn2uk199\/5Ena2nS0qSlv+Fm6TdfZHnN9ZrbS\/aD605ykpwkFYwLGBcwfqEQlzMvZ15+F06OOznueCF0Xt15tWoOWJutzdb719WG3w6\/HbZmntPlpstNV2qh7M2yN0uVIPaKvbLhULe4bnH9arCos6izyIfw18JfC88H6Qvpi8mfAd\/zfaszm64Me6jRwVBaWFpYcRGETugsdCBVS9VSDVhprbRW1TDvL\/P+Mu8IFEUXRReezPBs79jesb3V8zfNEeYIcyIEGYOMQf7w+dDPh2Z6Qb1nvaduAbQEtQQ1G\/hfq8\/4f0\/wfwv6+LWOOnQgV8gVFqmQtydvz\/ePaq7+9ujm+c6Of3L8k0OHedLbB98++Nco+ObZb579BijPKs8qPwbWk6yft54MNnqbIuvvYHqn6X1iJ8OoMaPG\/GErNEc3RzcBzepmdXMXmDZy2shpg8Fka7I1WUJLWEtYSwh43vG841kGC3cs3LFwB1ytvVr7XTjMSpmVMiti0WWjv9Hf6I9Dp2OdjnU6BoXGQmNhA0g6SYcO8MPvZ+X8ve6Df7WjpExRZjNZkpYMWDLgje9gkO8g30HVYEgzpBkOgTglTold0C62XWy7akiuSL6R\/B7kyi4PvOQIJEjjpFUPtzd1rf2ND1hAVf+q\/lWBIIVL4eZwUNgp7BR24LbdbXu37TBm35h9zzlDWGZYZujbnw916+zW2a1HUA6OOOJEay17OYggESQiQZJLcmkbmNVmtdnrB4IXRS2KWpzyBBM844sZX8zI+pkR\/VjU5RGkNClNSoMymzKb0uGZH1yXXZcVvDkx\/tOsT7N2zwLtNu027SignHLKH5spWkBlp7LrFA+h40PHP\/9XcM11zVUOhfAPwj8Inwe9db11fWQgIkWk+Lk47td8TTaUqcvUpXNha++tvbfsABeFi0IZKESTscnYdOpnghi\/ENy48NyF5y688wRP0W5xbnFu8349we3ebvd2u0S57IjFEYsjL02Mf\/\/T9z997wHUDqwdWNsf0KNH\/6P7rLDCCswys8z8DOy7tO9S6l\/BVmYrUyRA0ISgCUHKkA82RmyM2Dgw\/Y+fyz+XH7OFquqq6qpqkNSSWlL\/6HmBBBIIvdf1Xtf7KFjYW9hbqEFUikrpzFn34LjguKA\/DyuRPCVPyeNXyFVHHU8ywaYDpgPGAb\/iR5RTjgZOpJ1IO37deNAzwTPhqUXg4uTipGyE+93vd79\/EWiggR\/XWHrjLZZDR3NHs\/Mo2B2wO2D3X2BM+pj0McuevVWbWJtYm3g6wc3bzdvNjT9uYhOb1BA+Nnxs+EsPw42rfrqZvCe7J2tIhzUr1qxY6wtT109d\/\/KxocXjT48\/PeFGz6cNUw1TG+sLC5EhE4\/JJT2US\/webLDvPN95A3f8a4KtjdZG6ybLZ0rSStJKljdd2\/333X\/fnQMN+gZ9gwoqHCocKh3g7py7c+rmQM+knklPJ4GllaWVpQNsXbl15ZZhoM3X5ms18LzP8z7PdxXC4GpwvT+51RXa1P0Z4+683Xkpudesdw\/ZPST1c9Ar9Ip7y8HJ18nXMR\/em\/7e9PemwLIty7Ysuw1lNWU1ZXr4ePLHkz+2AE2sJlaz3xTdNLtpdtMcm92yaFm0LOoxuR6ZDKDgTsGdwmNPsAbLL8ovWoT8E4JTSRXJUK+qV9Un3Ht1WtO0pmkXYE6\/Of3mCLi9+fbm28Ngp7RTSp4DSyYvmby4vvWEvpXp0Glmp5mdZkJufW597mmIr4+vj9crjzQENgQ2+IL9SvuV9nfAYanDUofX8m28hnsN9\/rbg8NLEpYkLHnNImRr7dbabV9C6P3Q+8FV0F\/bX9tPXI4KrQitCDU\/PbcloyWjZZfCb2PKxpSNJkh4OeHlhOnWKT3Se6T3GNenW7N\/s39T9tVVOOEkXP6FbX4SNXih9ULrhba\/THCtslZZG7m+OVeZq\/wmca5ce1x7vPYclHcs71j5omOVtFpaLb1ZrxaLxWLxNmQFZwWfbBo4dNblWZdn9bh01jnEOcQ5CESMiBHT\/rHGtbtrd9fuI14XKSJFpIAh0hBpiKC1XXsiWC+3Xm69HK4lXku8lihJymRlsjIZdAW6Al0R9IruFd1rnBDtvm73dbu9UBxeHF48G9yj3KPcgyKsLvhf8L+QsM8kIkSEMMBLF1+6OKWnEIYwQ5gh5Kcz0\/t73t\/z\/qdPMMGPTpj7JTw6ee71D1\/\/cNF52Htv7709f\/jh8F3UqKUGkBwkhwd1IApEgdwN4sbGjX3N50yHLHWWOssQUNc7und0n1eEMBlMBtOZ1lQgkQB3vr7zdY0nSHpJLxX9yEcdQQQRn9ysOlF1ompajMeM6TOmz14ihG6FbsXdAWBTblNu0xPO5Z\/LP1sK7vPd53usAY2dxk5TBD1ie8Q+HQ9Xo69GXz3emiBgPvdT+X7pUOC2fXAb\/jOCDW1oI7gNbQS3oY3gNrQR3EZwG\/7j8V\/snX1YVNXe9z97ZhiG4Z0QRkAkMvJdUiQiUkMlQkQjNFNTQjMyUjRTIyPrVkRTMiI1UyIjD5kJIhIioiIqIRkakqIRIiICDsjLAPO2nz+g9K7T6Tz3c13d5zG+\/6zr2sxs9trfWb+1fu+9alLvCu5FL8G96CW4F70E96KX4F70EtyLXoJ7Ce5FL8G96CW4F70E96KX4F70EtyLXoL\/tvjri5HazrCdbs0fp1XKkCGH4pXFK4vDoHJx5eKqD+\/8OW5Z3LK1CjjQ50CfA+OBNNLENDD1NvVWbIQ+7n3cHWtf9\/3B4QeH0sL3Trk1uzW7ecF3ed\/lfVcNk+Mmx02eAw2hDaENkXQX4XAAs9Vmqy02JvZ3P+t+tr\/Doqu6Y7pjOjmIW8QtJEFFcEXwJRkYYgwxBj8o9S31LfUA7xTvFO9scKxyrHKs5A9zrH65vj19e\/qO\/fcwwb80i\/6fFue0nm0926oaXop\/KX7BdJB+Lf1a+gNsPr75+GZN56QamxqbaxWmWab+pv6mJcsy5EHyILmF49OiUTSKQ0G0EW1Em+7kMSrlCy7kXMgpP9v1sfK88rwyEpodmh3UQWefMEYYI4zRKcdku2W7ZZuhZm\/N3muZ0O9sv7P9jL0r+I\/xZ9VX\/4T45ujm6OZYyHov672sdaD\/Xv+9vhpupdxKuVVkmrXFsMWwRYDw6vDq8B0OU2VOMifZTFFUzlTOVE6YOlcTo4nRrJnw+ZXwK+E\/jYn62KTIpMjECXydfJ184yHXLdctb\/mnR1dKV0pXPp0itJxuOd3yDnxc+nHp1vt7ns\/tX8znfzive2YPFuKFeCH+X4ydQqfQCcJQYajwu86MtomK6YrpilAIXhy8OHgnqOPV8ep4UVRIFBKFBFyDXYNdk6HYpNjkzNsQYBdgFxAPukRdos4t47Pjnsc9Cy5GGZ85\/8z5Z4Ig0zHT8cCH8Pazbz+7+gKoc9W5tzZDckNyw86xKeNNVaYqk+kgUUvUEjsQQoQQIQTwxVf0AWKIIYY\/rlzwd8vw\/7NywpLtku2S7dBh32Hf4SCKV+KvxF\/xBdNtpttMt4Fqh2qHqgYcUx1THdPgesT1iJoISH4q+alPJ4JJoUmh3AMkMolMugeM9kZ7owoUMoVMIYeOto62jhaQtEhaJG1AHnnkgt5T72nwgqLSotJTUT3tfftA8JjgMcFjLgTn+eT55PmAvExeJi8bkmWwN9gbbMAhySHJYXupjfMM5xnO0x++\/Wd7cOqI1BG7H76HRbQ2ThunXQkmvia+JnbdOUZiAFBHHbUg1og1Yg0YVxtXG1dD3IW4C3HtYHLU5KjJbbgReCPwhjdcL7teVlMGTl5OXk4uYFdnV2cnQlt1W7Wms6c6TgEIp4RTQjF0Dega0DUAJDWSGkkNMJKRjASaaaYZZDKZTKaH6bHTY6cthfVN65vix0JeWF5Y3pghWa4DXAe4WsEgt0Fug9zgu87vOr\/TQnNWc1ZzsYlfV1RXVNdCDv46USVKlCCWiWViOYgbxY3ihr\/BHrxh3oZ5G\/8BUSuiVkSNhf4W\/S361YDGqDFqPEB2UXZRdgW66rvqu+pA+YDyAeUPMCx+WPyITBBcBBfhPEitpFbSrSAsFBZyDdr2t+3X7KO7ftUvs2oEPPBgAL\/m5+KKKy50Z9o3cid\/t5BCsQBqrWqt6oLhdNHpoqKDYBhlGGUwgsZP49dhAsYNxg3GJXDxuYvPXXoSbpXfKr+VjawjrSOtIw2M44zjjONAMUAxQOEOinxFvmIXKJOUScp9wGM8xuP3MMGtka2RrV5gKDeUG0rhVuit0EYrGLR60OrBCqjbVretLhCELCFLOAX6W\/pb+sMgKAWlJAQEuSCnEIxao9YoARJIoAi4yEVsemp6zAFHD0cPRyMYXA2uBhdoP9t+tr0UpFqpVtIJ1jXWNdb1oA5WBzcVQaemU9OpprtGpTs0Zjdm31Lz3xO4s8GkzaTNRAKmmaaZinro6uzq7LKHhuyG7IbMnuqyHuC623W3awpUFFQUVBwDYbowXQj7Oxg6ftmjtGjpBMlwyXCJJyhLlaXKcqhT1anq8ieVKpwUTopT0D6hfUJbGVBGmVh71wuXIcMCDNGGaMNF6B\/YP7D\/Hvhq9Fej95iD\/wr\/FWM3gc+XPl+OPgyPtz\/e\/pgUHr\/\/8fv9RsHoT0Z\/4nUEog5HHY56Cm4Pvz28JQEs4y3jreqBPezBoptYIbqH4DYQQ8VQMRRMo02jTZdCu2e7Z5vW6Dtp1aRVk06B9VDroVZOoJ+un66fQXfjd\/u7nvteF9GSNZI1kjUg+1T2qfQDEDSCRpK768OTxSeLTzY\/H9U0sGng7Rxwt3C3GKCEwB8DfwxWQEdQR5DGC8QJ4gRxT0+5pG3QFNQU1BgPQyYOmTjpv0C3TbdNHw0vbHxhY0TAt5r5P87\/cf6PRxKdhjkNc2q\/+XRzanNqc6posVC7ULvQGxpWN6y+GRL38uLZi2e\/ctAi09rD2sPGHdJfSn8pfRtcPXb1WFUCCN6Ct8ls0Bfpi\/TF0PeRvo\/0fRBMUkxS5MeGLT+jOqM64yIuV+1S7VKFpO+xLbItspu+5LAQJUQRfnUHJZRQ+7\/A8C+n6L9qXHZs2bFlx2x9XSWukn7NojikZkjNoGOiuPqz1Z\/FJovizzd\/vvnz46JY9I+ifxR9IYqFXxV+Vfi1KBaeLDxZeEIUCzYVbCrYJIrbpdulH98URRe5i7xvoyhOCpsU9tSEV51++T\/tU9qntE+Ctkttl9ouQYNtg22DLVRJq6RVUpjoOtF1ohWMLRhb8Pga8I7yjvKKcAgbkj8kf1CuKNo02zRbqUXx2rxr865aimLhrcJbJx8XxcKGwobCBlE889aZt868KYrl75S\/Uz5WFN9Qv6F+I1MUHVc6rnSwEMXBFYMrBl4RxUHDBw1\/aKB+ybC4YXFD1vz17\/svF9G6HF2O7lTTKYVKoTJz18eaeZt5K7whzD7MPuw+uF51vep6Jehd9a56F2AgA\/EDcZ+4z+gC5i7mLuY7IPbl2JdjO2Cq71TfpzfOa8iakjXl4PUPa9tS2lJa68F4ynjKeAqEMcIYYcyd07KoF\/Wi\/q6t4ixnOQtaG62N1qF+7\/iS8SXjcwSh7+y+s\/vOhik7p+wM+QQsPS09LUYCmWSSCdpt2m3a7aD2VHuql0KgZaBl4FNQ\/Vb1W9UfQt2qulV1MTBCNUI1wuVNMTAkMCQw5G+wB0tVUpVkAISGh4Y\/HWP\/VV1uXe7NQrhUeKnwUgEYvA3eBp+7nq6eemE42HnYedjOhjDHMMfQTaCfqZ+puwgfHv3w6Efrkh0a6xrr6nNBKBFKhOq7TKK\/GQWZIBNkd\/RU3SrdKu0qcLZztnO2g6bCpsKmMrg\/+v7o+6MF4Vb1rWp1FdQk1yRfTwaWs5zlIGaIGWIGMJShDAXJu5J3JWtg4e2Ftxe2gn20fbT9UuiT3Ce5T\/L6zeo96j3qPX8Dgg3+Bn\/9WdC16Fq0cbcvOmQ4ZDgUXQmJPBB5IPIguAxwGeA84C5iKqkUK+F24O3A21NBM0YzRhMIbz391tNvTev3ZOzbsW+vegIMKw0rDeVgmmCaoMjs\/mGI9f9CkpToSnTFMMRviN+QwTD9zPQz0w+D\/zn\/c\/7HuyvTz2robotj7W2QvDP3nbmr3wCll9JL6ced8sRuuOEGbg5uDm728NWur3Z9lQLuI91Hunsun9QY3hjeGA4aL42XxutvQPDmYZuHJa6DjR9u\/DDhFjyy6pFV3vP3jDFWGiuNlXB77+29LXt7DB91wBWuUAn79u\/bv28\/2A+2H2w\/EPa9su+Vfa\/V5OZr8jX5I2HypMmTQj6EGf1n9J9+HSz0FnpLwOhidDG68GuJfvLIIw\/GPTPumXFvQ+j60PXTvoH7vO\/z7jMY+izts9QxCqxzrHNsM+GFCy9cmP9yks9PST8lXXYB64vWF6186K6wpwaJQqKQKGBVv1X9VvUHlYPKQeUAtsG2wbah72UrQhWhZp3gvNd5r\/OEv8EpujC5MLmwEC4XXC64HD8nLkuWJcv6OGbZutZ1retaoc2uza41EiQ5khypA5g4mTiZqOBi9MXoH6PBNs42zrYCVqWvSl+VDjq9Tq\/T3zFkSG9Kb0oPw1bFVkXSKAitDK2cZg+miaaJpvugNag1qDUQhowcMnKIJ7TMaZnTsvKP3XxuoW6hbu8evqmT6WS6bxbTnNuce\/t7ussQ+4NRYVQYFTD71dmvzn4Fcj\/L\/ezQ5J757d17c9zAcQP9N4Q5jh0\/dvzYL3tuGnEPE7zg3IJzL\/4I0i+kX8g6PntjfMH4ggnh4FnpWen5BGg1Wo3uyq86MxIbiY3UFTTRmmjNQVAsUCxQRIHtN7bf2B4GXZ2uTld3l0gfzGA84GH9w\/qRSXA5+nL0JRVcCLgQcGEH+K\/2Xz1RAs6ezp7Oq0CIE+KEjXet8F\/u0wOTbSbb5ClkiIPEQca3QfeI7hHtz8BSltIJlFBCCchT5CnyFPjg4w8+\/mADLNEu0UbbPuNwvep61fUx6VuZwhS+ffrle99dWEyxuEwUZUqZUsiH+MPxh997Bq7UX6m\/vLVbJEtWA400ihagi9ZFa7XQd1rfaS5aqPCq8PpRAjucdjh9chjEF8QXCP39ypMskCyQLAB9lj5LXwo7K3dWJmeC32y\/2Y89D36n\/E6NMYGGRxsebRjRUzgt8vf3MWkwaZDP7lIK1UK1pBqsPrH6xCqg29LZdP7O6VzqLfWW+oBquWq5ahvE28TbxJfAmw1vNsTsmRr5kPdD3gO\/+3RfMMEEz3jh8D27B8unyqfKo5L3dMo6ZV3BEHAo4ND4WeBW4FbgugH00fpobSYwgAG4gWGfYZ8hH8YeGHtg7GRobGtsa6wCRYgiROkPeiu9laH6zmhIM6QZFoHOS+el08LZ2rO1Z5vBqtiq2NIO7CPtI+2rQPmq8lVTU+ib1DdJNRja57fPb18NMhuZjWwAyNbI1si2wdWMqxlVeyLmWtlY2VjagbxAXiAvuOvttdFGCxiqDFWGSnCb6Taz\/0xYeW3ltZXXwWyG2QxlMez5YM8HX7697sw9f8iyL7QvtM+d96x1iHWItdJxmugn+rERBp0cdHLQW3Dd\/rr9dQkY6431xjoQFIJCcIEn9z2570kPuBV1K0o9FeoT6hPq12w4Km4QN4gjwdLH0seqHGpm1sysLQPNIs2ijlUgBAlBQtDd7iy0aMHgZnAzvgXWX1t\/bXUYpo2eNnpaX\/hh1w+7zvlDq12r3e1yKE8pTyn3eq5wsmSyJGQX1BXWFdY1ghAhRAhzum3Sci+4VnKtpDoMhv047MdhItiE2YTZFsG0gmkFYbGWj3fFdsV2vVvRfO\/bonv2uvbO9s62ivq9IQEhAVMWCIJXrVetV3ZV8ZpNazat3QTWG603WieAsFRYKuTA1dSrqT9Xw6ySWSWzBsOJhBMJBfWvj5s1ataomd+a+NwceXNkbS002DfYNywCFrFIXPRvRJTsYQ\/ZPcTXw6KORR2LTaBqYNXAqqDT6fWx9bF13vDGoTcOrTrZLZKF5WD0NHoaPeCI6ogqbyG8u+LdFe\/cAMfZjrNVyvQi54HOA102CkJLY0tjS1lbIfXUC\/V\/AzVJGaeMM++EES4jXDyr4GzY2bASJdQH1gfWL3fzDtAGaAM6oVXeKm+VgZggJpAI0gxphmQ7LL+x\/Mby76BD0iHpqILnW59vfb6f9vR9MffF2EfKZ4jDxeGi57+IoPhNhIW4SlwlxoBVpVWllQYyv8r8av8b3zlX5VTlVKX5TN25fuf6HSvg56KfiyoLeyxZGSBEC9FCNIyYOWLmiPlwO\/92\/u1CmHtk7pHnu0IfdfV19XVJButo62ibveCU55TX9+\/gTXpQ9qDswcaeX7o3jNKP0o+qlkxt2te0rykL\/Gf5z3piFpBMMimAHXZiPohpYprkPNQE1QTVDoDSc6Xnzm+FrpSulK4YODTn0JxDa7r+oc3SZmlrY4IU4Ypws5ie+yTfkRxivBgvxoOyTlmnvAmKHEWOosIvZPGzi5999X1RzHPLcztSOrLmtedfe\/71UeBa51rnZg\/SMGmYVMGvFeVZwAIWgMdyj+Uey0G3TLdMtwy+H\/396NLW2auMWqNWXAY1ATUBNSvBw8LD4sGCv57gvz5kZ8jDQ0YMuiMixXAxXAzvJ6\/SVGmqNNVddR\/VfXTzJlTsq9h3eSZ01HTUdNT22KZdewwfFcC7vMsicN7ovLFvDGx4Z8M7G\/4BX1R8UZGaCA4ODg4Og0Hpr\/Q3n6Hf1ljUWNRYf2ibqlnVrGr029Hu1u7W7mLtpd6t3q3OAMVexV7Fbvh67Ndj0z8CbZA2SNvWowadBTFbzBaze9QoCQiFQqGQBTYeNh5W9hBxIOJAxA8gLhQXkn1+i2O2Y7Zq5YhXhBQhRUi+4y7MNM80zxTuYYJ\/2xhLv0+\/T5924CHBQXAQOoMv1lXWVdbvA5Wbyq2vDPr69vXt6wf9V\/Vf5RoLkeMjx0eaQLtLu0t7DQgBQoCxAkR\/0V9cBP3U\/dT9Z8JB+4P22QVw\/JXjrxw\/AzdH3hx5IxrkNnIb+UwYkjckb0guhM4Lnff0PLD3s\/ez9+129KuDQUgUEiUzwFBtqDaUQ5+EPgl9JPBDwA8BP\/hA2c6ynRfegwvxF+LPq+Ba6rXUa8XQMLthdmMmLDFbYrY0XRDarrRdabsrXjomJSYlZvc9rAc\/HPBwwEi7OxPWuenc9LmTLz3c9HDTw5sS3Q4MOzBsfyqUppSmfF8BlkMth5rZh8\/OKsgq+L7ccs1L37303YIv6Y5mDAQxX8yX7gWqqCIOrrlcc6m5AsMDhgcM9wDPWM9Yz+sgPyM\/Y3q5u0mk4RZoM7QZuus9InwGqOeo59wOByFVSJVsBCFDyBA2Q3\/3\/u7948Gtya3JrQ889MJDLzw4HUwiTSJlhaDP0GcYbFpXWYyzGGfh+2PqwKCBQYMC93xdlVqVWjUVtK9oX9Eu4X8tbPYvJ7hjaMfQjpY7E+5y7XLVqsFlrctalzmLrpofNz9ubgpqvVp\/OwxCnwt9Luy7RWu37NmyJ8ldXPPN8W+O5xTBmDFjxozJAEmzpFloBmOIMcQYAmaNZmqz2dAR0hHcEQRGo9FotIFOq06rjmQgkUQAtrGNWhB8BB8hCoyxxlhjDQilQqmwF8REMVFMgAZNg6YxGFwtXS1dxkFjbmNuo1IQntr11K4gVziWeCzx6CoYmTEyY2Qm6IJ1wfpgvAznDecNMWBMMCYYE+8ieDSjGX0vq0l\/FC9sgQUW0OHU4dRhD3Pb5rY9HwyXJl+a\/OOD3d1W7JWwf8T+ERk\/gfky82XmneAS4hLiXAY1Q2uG1mTCXNu54+fMhX7J\/Tb3CwSjhdFCnNrd+JndPepTS3fLPCcrSNiasHWTMxjzjHmGcdBX0lfSN647ZUV0gRNJJ5IKZMAEJjAD1o9aP2r9eOgf1j\/MdQwY7Ax2Bhv+Y+Oi\/3pT5W8RQQQRoL6gvqA2wFq3tW7rPgZvc29z7wPAQzwEkP5D+g\/7Phx9Kfp09OnFyWceyojJiNm3EpLykvKSBDCxMLEwuQoWaRbZFlNhxIsjVgyrgPJXy1+59BFUJlYmXk4C5zTnNOdimGAywcT\/DAjFQrHEAsKSwpKeSeqJEfu220AxrQCuPnb1sauDwbHGscYRtf+lNy+9eWn+nfBbzxrPGs+LPRJhGxBAANv5j8FfvwebPWz2cEeP2mKE9ufan2sPggWFCwoXTOoWZaK+58MOPV4bI0yJmRIzJTpn69LTS08vWcjmpMSkxKTNMCVqStSUOfB8n+f7PN8HrMZZjbP5FiY6TVRNfBlGrB3x1hAz+Lnh59tVFjAlfcr+KV+CJk4T17EIPh\/7+djP3wNNqiZVsxPSgtKC0j6FvRl7M\/amgHWsdaxVCVh6WHpY+V8PLCgrKCso46hEJpFJZD2myjZ+Dc\/VLtQu1HeCbYRthJ0PdCV3JWtL\/vf24P9vipG+b\/W+1abE\/Y+9d\/S9oxtfDik8MfnE5BPX4NzSc0vPLwVBIkgEGRinGqeK5dDPo99A5xIIMgQ9HPQlmMebBypzQbpZul2aD7FdsV2xpmARbxFvNR+k8dJ4yQKglFKhFFTjVOMcx0BGekb6fgN8teyrZV86QMzYmLExHwlCc35zfnN+j+NfDuIMcYY4A2SZskzZKtBGaCO0ASBUCVVC1R2Cl89ePnvl7nuY4CWHlxxefPrf\/7xptGm06ULYm7o3de\/CVssHxj0wbkCRRUvUiagTr74K+kp9pb7qjn76yzoxeBg8DB5g22LbYucPL6a\/mB7Rt+d0HQ8vjH1hbMTTYIw3xospdIfe3B3i03MmsK62rrb2hhkrZqyY9jN4V3tXP7Ld6R3DZsNm\/eYbq\/9v5\/\/Na9+8livcwyK6Td4m13Typ3m0v1yXdko7TbxBG64N7wqwaAkeFTwq2ACGkYaRhpFACinsukPIr2e55ZLlkpVwqv5U\/clasEy3TLf8CIr8ivyKImHFRys+WpELdUPrhtb\/Erdc3mOT\/sUvLO\/2LpnYg1m1WbXyk25vlrpkZYehzFBmcFuMMFOYKcz8nb37nx9hf7m+\/h4muN8z\/Z7p99S\/T3DXka4j2r4v7tKEaEI0ETDqwKgDXilQn1ufW78N6KSTTsAKK6zumCQVngpPhRPkHs49\/M1nYFNqU2ozFBo2N2xuSIBG90b3Rncgl1zK6I6tujtvuacV\/K2yW2WNZeB3zu+c3zQo8ynzKZu+KH7ujbk35r61eL12knZS1+Q\/fv7fXe8OK7h31SRBJaiEgX8+StukbVIJFHgVeB0fE\/62KkmV1DcJOsI7wjXhd63Y37xIIUaIEWLALsYuxi4GLrpfdL+0BUaPGz1utFfwIHOtudZcC0d2Htl5ZCeIF8WL4kV+ddz\/ih6CxYXiQiIh6JOgT576BOrkdfI6HzC6G92NETKJzkJnoQ+Cf3e850\/R5WfKz1x4\/M9\/6WZxZnGKnVBfWV9ZP9O3MrA2sDbgFNzOvp3dsgkk0ZJoSTPggw8+d74u5og54nz4yeknpyu7wPia8TWjJzx2+7HbjzV9tz3HKccpZ3ChQ54yT5lX61c\/ZeeUnU+nQfPZ5rPNRn4Ni\/31B3NKOEUmuNu72z8Q250bJbwJhSMKRxTuXZCtPKo8anZ8SyCuuOL6b6zge53gB6oeqHqg7c9fhHKJconyjIdH5vHM45lAwLyAeYFrQfuU9intMhADxUCx5J98P4QQYwBkr81ee\/Bodws6ty2wZ8OeDV9q68b4ePt4+zy2es7+5P3J+8vzkK2VrZXtBHazm0zgPOc5f9f98sknFppjmmNa\/OGB+gfqB0TDLeMt4605iR1DnYY6jTVugcEMFnpMsP+0newv1+91d+FpzWnNt\/o\/H\/d\/vf\/rzMmTauVZ8iyTTLD1t\/W3ndrzws+DECqECpFAGWXU96grrmAfax\/bZyOcPHby2MliMFeaKy0cPk\/Q1ehq9Ho43Hm487DyyC67NLs0uwQoLSwtPFfdY5rcTHder4ruNNTGHv9vEXTQQYcFBJoGmgaaQZWmSlN1RTrV2mBtsDUlR3ASnCQtIDgJTtKeUfKbUdryN9CDvV7zem3kzj9ewcYIY4QxAkQL0QIbUXTJd8l3joX5L85\/cf5BcHZwdnC2gLc\/fPvD1U\/A8jPLz7zeH9QR6oimCLCqsKqwzIbnPnvus+feh5dyX8p9KWfYi4Kv4CsEle3AHXdhOqS7pLtkJOhvOKud1X2RqhY+u\/DZV38CQ4AhQFsE5XHlceVquM\/pPqf7nMAp2SnZKRms1FZqqyKY9eKsF2c9C7bRttG2abIjeoleotcbJvy2X\/B\/k0zAxVsXb93T\/YMnXZl0ZVL2HxNsa2ZrZjsR4mPiY+ID4UXLFy3nXwLbRNtE21AIXBG4InAF9CvuV9yvA7ILswuz22D09NHTR+dBwZMFTxaMAKt1VuusauCq9qr2qrZsh85D56HzAi9bL1vvKTD87PCzw0vWl+cPzh98eHWMysHbwbvPXBAjxAjjcIicFTkr8jpYBloGWgaBX4VfhV85vLb+tfWvre+J13aAQT6DfAbpy655bPHY4rFjEIKv4Cv4\/jHB9\/wefKj5UHPOdv55b\/tGkB2SHTJ5Z1gMYYQxE+zP2Z+zvwwz3pjxxrOOYFFiUWKxDEbUj6gfMR3SktKS0nxhWsm0kmkl8N6699a9txacy5zLnMsq2lSpqlRVKuh99b76CaBv1bfqVsKjGx7d4JPy2cs5jTmNByNjLt0YfmP4jc1wo+VGS20ByFPlqfJUcN3rutd1dkBTsaZYUxyUazsta1rWtL0wa8asGbNmQKZ\/pn+m\/\/3qa1zj2u4ep4T6j\/XgNaz5XQf5e4rguY\/OfTTiq98TLFaJVWINHNIc0uRUnpW2D28f3j4UlmYvzV4yAZ5494l3J86ELx764qHU\/SeUFU0VTRV7v5+fcyznWM72RYldrV2tXfdB9fvV71e\/D4qliqWKpdNWXJJfkl+SQ5\/aPrV9SuCpwKcCAydCm6JN0TKxoqJPUZ8iBxcoCi8KP1kFh7489GXuaXAJcglyWWXYZRFgEWAZeHiu2wy3GaYW0pSfbH6yqcw0zN2j2qPaowKNncZOk2u69M3n3nzurUmOL6kj1ZHqb25a\/Kecov\/6DuBmr5u9bvl7gs2KzYrNzsLu+N3xXwwVRdFP9DPugEgxUow0PPvt6wtfX7gi\/HQamWRy5dpm7QLtAm049HPs5+i0XhTdLNws7l8K9dp6bb0RHjE+YnzEKAgduR25Hbl0d\/xeDZrpmumaUBDChXAhHJpVzapmVf5jxBDDyicKmyyaLJpsYNCpQacG5Q+9ppuvm6+LvODasqNlR0sUzF07d+2c12Hr11u\/3nZZFMUsMUtcCZ42njYj0zbr77ty35X7ti8x+SOCN3256ctNX9zDK7iwrbDtpOb316WJ0kRJPtgV2BXYqW6sUWWoMhwGu12wfdL2SdsPtGksZCHhIJaKpcaNIFfL1TJ7iFPGKdddv7ksaWnS0qRIx43m9eb15t7gGO8Y7zgUdGqdWlcL0mRpsjQJBs0aNGvQs2C8YbxhvAHaedp52nlph7cP3j54++AnMKYZ04xyCOwT2Cew6YJr687Wna3vQVZnVmeWBtRR6qim5TBSNVI1cq4gmG4z3SbPuvDgSauTVkWxn0w2SzNLM1v6N3YXSnZJdgm7\/okoCRPChAAY5TPKx6vM6a3LLZdbLiUA6aTT9y5Dho\/oYxzXbYGiE+a5z3N\/cbpq05ITS04sOSluHLZ72O7hKz8v\/Mn3J9\/KOuAiF4X5IG4Xt4sDofjz4s+L14FwUDgoHARTmanMVLZdKdkn2SfJ+FgcPmH4BM89xxqvZF7JrMwGIUfIEbLgAckDkgdPgGGWYZbBEgyZhkxDFvi0+rT6pg+5fPTC0QsFn5NgHmAeYD7wX7yAJppouIcJ\/n+GFVa4g2SOZI5kDLz5X2\/+1xv9wVPiKfHUftQ8vmN8x4RTy2xtzGzMbN4BPuVT7qe7fNIIkIyVjBXsgdOc5iQonZROShfYun3r9q0Jab5yK7mVLPu501drr9b+vKPHy2QEoUwoE0JA66x11lYCt7n930yb\/6HobU55j6O3XnQvwb3oJbgXvQT3opfgXvQS3ItegnvRS3Avwb3oJbgXvQT3opfgXvQS3Iv\/J\/wf9t4\/Lqo67f9\/nplhGIZhQEAkRERDQiRSQkIjQyIlQiRyyVUzlyUzl4xcIzI1MnPJiIyMWJfMNWKNNTNDQjMlJEQkUiMkRURE5PePAYZhmJnz\/WOm8t777nO39+79+D7snuc\/85gRz5kz57ze1\/W+rvd1va3ZJCtWrCO0FStWrAK2YsWKVcBWrFgFbMWKFauArVixYhWwFStWrAK2YsUqYCtWrFgFbMWKFauArVixCtiKFStWAVuxYsUqYCtWrFgFbMXKrx7Zr\/0CF9sttkuw5aeNlX5oTP0Ld+K64ZeSIQdbP1s\/W084EX8i\/sRsmC2fLZ+tgfwn858s+OvPf49MTabmtSVw1O6o3VFbmLB4wmLPlSBqRI04CEKsECuJAVm9rF5aA9+t+25dXcbTy640X2m+Mmf7+2q9Wq+eDAovhZdie2XCyPSR6cOboy6PNo42GmT91V4KL4VXB+gD9YH6BKgNrA2sDYC7\/O\/yv0sGbkvclrgthpamlqYWwG6N3RpFEng3eTdNOgffzftu3ncrnuxoD2gP6NC\/PLfbt9u3O8Wl1meTz6ZbPa96zQqfFT7rjNfV4drh2uEqEOPFePGGLd6EZqFZqLP8Pquh2r\/av1oPDT0NPQ15EGAIMAS4wkDRQNHAAbiUcSnjUhr0y\/pl\/W5w\/877d96\/CyalTkqdtA60q7Wrtat\/wX35bz7f+cnOT\/I+tVrgmxclSpT\/4Yp\/2cbNv3Rj51+40bOpwFRgTILOrM6sDglcKb5SfGUONOub9c3p0JHakdpugm+XfLvk245XR9oy2jKuK7e\/75DtkK06BqMdox36LmiLbYu93hhaOHph9ILBve\/0aMloyWilKOrn6efpEz5\/QX9Gf0ZfHbxXMAkmwQSSQkmhsBeUF5QXlLUgCZYES0IeXNysadY068+9fKj+UP0hiShecrrkdMk3Z2yPrkfXHe5S69jg2KCuh66mrqaupgnNHyV\/lPzxkaYXBnoGeobSQYwQIySrYCR2JNaQBsY+Yx\/pUNtX2\/ddGrQ2tza3RoMiUZGoWP8Lfqd\/1335\/3kDbquAbxaqqaYKhC3CL9o1RbdFt0X3Cjhsc9imyoZ7hu4ZmmMLS79Y+sXSw0K+vE5eJ7\/wypirPVd7rmpS5Z3rO9d3psG9Sfcm3bsKKjorOis+gZPSk9KKD2BD94buDe\/CuKJxReNWw9c1X9dU50du6ajpqOnIPv3IuNRxqeOmi2Lz+ub1Vxe1\/PFYx7GOY7WieGH1hdUXgor+djnycmST6vYNvrt9d\/sugrxX8l7JuxMaHm14tMEesj\/K\/ujNpaAr0ZUMLwf9dP10vefELaczTmdUbxFFXZOuSdc3MXVo9tDswX2gKFAU2LqCg9JBqToC4ipxlVgJ7GIXu6yPy\/8Wv\/qOHL9d8NsFjzz4z7te\/2kP0wKhQCgAoU6oE2p8nb5p+ablm8aMd1VqlVqFfPMc7RztvYXjltjvsN+hzA5OdbFxsXFxbAuetHrS6skrt3x\/ZOORjYevNZVf8r\/kf8kTFj6w8IGFr8JHf\/joDx\/NjXm6Vler+7ZlValWr9UPS+CxsMfCHpsNz415bkzqZ9CY05hzZQ0IXUKXRA2mIFOQsRIcFjssdlgOrqGuoa6z4XTL6ZbTzbDj\/I7zO87DKedTzqecYFrstNhpcZD6eOrjqb+HWemz0mdthusZ1zOuZ8BQzVCNtgYklZJKoRIcQx1DncJAG6uNHdoPKz9Y+cHj70FnSGdIuxxsM20zFbWQNpQ2lHZqga1vn2+f76Iiffab2W9mH4fac7XnakvApDApTEqYUjGlYkrlPZ4D7gPuA67qosbGxsbGGuhL7kvu2wRRsihZlOJs3pRNUzZN2dCyYzBhMGEw4V93oXNcclxyx1oFfNPi+7Hvxz7vAnnksROEICFICAVptbRaegFoppkmoI022v4fB5rHPOaB6aDpoOngmq2yQlmhbN+bzyuKFEWKgzBcP1w\/XP\/jHsPoV+pX6lfCyL6RfSP7MO\/kEQBispgsrgZDnCHOEAt20XbRdrHQvqF9Q+cmeFbxrOKPckj5OuXrlK\/h0qZLmxr8QeIh8ZBVAJlkSrabLZs4B4gnnsUgRAgRQgQYq4xVxiqwy7bLtssGJ4OTwckAmhhNjCYGBtMH0wfTQbpculy6HPDBBx9+3CxZiBVihVgQQ8QQMRRsA20DbTeAMlIZabcLVm1ctXHlC3Bx0cVFDfvAPsk+yT4ROlM6UzpTQL1SvVK9EqRLpEukS2B0cHRwdBD0Sr1SrwQxXUwX08Fd7i53V4CkTdImaQX5Ovk6+dqmyjEbxmwYs2nSLEOpodRQ+q\/f\/+Mnj5\/88pRVwDct2xZtW\/SqAZTBymD7aGia1DSpSYAjq4+sLnEHoVAoFCJBkiBJkKSARC1RS5QgZolZ4vYbfqiDwkHhIJjKTGWmsqdaR9JH0kfSs2\/pWdezrmcdvH7n63e+fhcsDFkYsjAQrgdcD7juBXKZXCaXgXGycbLRB0bVo+pRFZjOmM6YzoGuRdeiawZFg6JB0QhaX62v1heGcodyh3IsQa3NIJaJZRLLXFJwMlsYcZcluKb4LyySZVv7H9\/LkCG7wVL9o+X6x\/cSJMiBUkpRA0tYIhaAY4djh7oJarJqsmraoLOis6KzAryivKK85oFTrlOuYy6ofdW+jn6g8lZ5q7xBnahOVCeCmCfmiTvh8W8e\/+bxs3Bu57md5wph7Kaxm8Zu+i7O1t\/W39Y\/4BOTv8nf5H\/DdcmRIwchQ8gQMkC\/V79XXwiSeEm8ZBHINss2yzaBGCAGiAFAIIEEwte3fH3LN+OtUeibFmeZs8xlGaiWqZap8qDzk85POr+Hnsqeyj5\/8Cv3K\/ctgKG8obyhaBDPiedED7DdabvTdjuMTh+dPqoGqb\/UXxpssSh6TLoiXZGuCNjLXvZD3+G+w30LoPNI55HOQmh3a3frCgbBS\/CiDHDFVQgCGmgQGywWT2V50JaBNkQbMqIAWmkVW0FaKa2UF4JYJVaJS8yWUsgBqqiiDkgkkT1ABBFEgiRJkiRNBGmWNEuSBYKr4Cq4\/SRIUS7KRRkYA42BxmAwVZuqTRVABRVsADazmTQQlgvLhSQQt4hbxC1AKKEEAmWUCdGgWa5ZPpgGt0bdGjUlHG7tubVnignwx59UoIYawQMMLYYWUwv0yfvkGhlos7XZuh0ghAvhQglIX5W+amMHMrlMLtOArkfXM1yFob+yv7LfD6Rh0jBpGIx4jXiNTAa88cYbxqwes3rMaggoDSgNKIIrRVeKrqSD\/qD+oL4cxtaPrR\/bAHofvY\/ex5pG+jWE6X6yMADuuOMBklZJq+QMmKJN0aZY0Bq0Bq0ajHuNew3RMMlnks+kVdCT35PflwADXgNe\/YvBpsKmQlbXGyCRSWSSJfSaOkwdJg0YHjY8bPC3RL11FqHmAcEEC41mV10stFiSGsAPvxsCYgjLheX4gLHcWG6SAEUUsR5cCl0KXY6Aaq1qrb0rXJdcl7QqoDahNuG7Kri48eLGi3Mt0el26D7QfaDnIOjn6OeM3GlJn6lBfkx+zPYYONc41zg\/Bbc8fMvDtyTClA+mfHBbDATUBdQFKMAj2iPaYx4MRA9ED0RBT0RPRE8EsIENbAC66KIQ82b3dZbvH\/5DpA7QohWPmgcsGn6y7MY8Y54xCZRlyjJlG9jp7HR2Vy0WdD0Mew9765pNuwY8BjwGljDOodmh2aEFJlRPqJ6wGzzOeZzzaIDhxcOLh9eCUWPUGLvAVGWqMh0AtrKVbDCpTWpTIIgyUfZ\/odmqjP9r6NChAzFMDBPngLRKWiUtA+l26XZpMlBJpVjl79wV3hXedfDpk9253bk9MfMrtXKtXNs3cbkpy5RlqoHe\/N78PgUMbhrcNBgN9mX2ZaoTYFxpXCn6WyxSk\/mB5twNA4kePU7AClYQBuIF8YLpDNxSdkuZRwZo0jXpmuXw3tz35r53L3z68acfH4yG3pd6X+r7M0gXSBdIk0BXqCvU7QJpjjRHWg7Osc6xzsXgHO0c7XwAHNWOascDFkvsCv1+\/X5d5+DK7Cuzm8Ph661fb62JAO0s7ay\/d8BIx0jHyEUYeHzg8YFnwDXPNc\/1TxD7aOyjsbPgseWPLX9stuW4HdAa0hrS6gyCr+CLL7Cb3cIa8wAl7LRc76DZIrObHzdqli6RLpGmg6HV0GpoheGC4YLhAnDNdM10jfDN92nxafFR1D44LBuWDfcViNRQIxbnJph2m3abjvWskKXIUmQZQAghTAeccMLJMmXQW6PQvzpy63Prc+vBMd8x3zFfJjn91emvTne\/+LsPF3246EP36BhHiaPEYXJQnGASTEIt9OT25PaUgG6DboMuDbyKvIq81sFdsXfFhjbDXNu5thFSmFE+o3xGCthii60E2va17WsrBEOMIcYQC5LVktWSFMsDprYEwSItc7j94L3Ne5t3DBzMO5h34Byk26bbpp8yR5kFD4tHUA5jUsakOCkq5CsHVg6sumP\/75c2L21eFlkSPbFvYt\/E1u87zFdpSPrH69a6al21TqDT6XQ6LZiSTcmmNVCxuGJxxXrIWZqzNGcqKC4oLsgVMOA64Ko55lFo7DB2GN2eOtwT0RPRG\/\/kKlOUKcoU6xjcqe\/Ud+pAKBVKhWOQ\/nb62+lvQ2xSbFJsEjSlNqU2eYOYJqaJqUAxxdLlgCeeVINYKBaa9oLtftv9tnWWNFw2HN90fNMXOVAhVAgVX0Pt9NrptfHQ7dnt2e0N8n3yffJ94LTZabPTVrBR2ihtVKA8qjyqLDHkDpQOlA4U7Dyg8lX5qvyyJ7rtcdvjVvb9Tr1Kr9Ir4PNXP3\/1i9esAr5pyVudtzpvFbjsctnlssumdd+kfZP2PbBv6rFFxxYd84zto4QSUz1ErY1aGxUOGS9lvJTxPoxsHtk8kg59GX0ZvZEw0DDQMJQKop\/oRwAIR4WjQqLFRZRYotgNlpP6mF1kIRGMUcYoQxhMWDZh2YRlcCb4TPDZJHjy9JOnV70ANn02fdJc6Nzeub3Dn8EkjySPx8si7Hac2HEi59PjP3pImnmaef2zQbJFskVmAFaxStRZ9sNONEenyQTbJtsm2yboVfYqe5Wg0+q0Oi0YFUaFUQGVuyp3VZbCuxvf3fjugyAJkYSwDHRhujBdGzgUOxQ7NELL\/pb9LaUgWydbJ1sD4xTjFONMH7\/T0NPQ0yCPW6U1aU1aHehL9aX6Mnjn7Dtn33kephdNL5pRDFd3XN3RMtschJNtA\/GoeFQ8YnGtnYAWWuiwzMV1IIuQRdhEgWOMY4w6CtTR6mh1DHQHdQf1bICGgIaAC6vh0IJDCz6dCcc0xzTH40ChU+gUOnCQOcgcZMZA7wTvBO9FTs\/pNXqNXjO47JPDnxz+9HOrC33Tcvjhww8f+TuYrpmuGd8d9XA94nrEtWMhd4bdGXZn7Guh9Y31jXXb11V+mvdp3qc5IJwVzgqN8OLDLz784kMwMDgwOBBmdhGle0DwF\/wFP\/McUJxtie5iCS4Fg1AtVLMPTFqTdjQVJrtOdp20Al776LWPXnsDdn2+6\/N3G8AOO5SLYVr4tPDpuWciSy6VXCoZN+MLAJ6F7vju+I5VYKe10yobQbpOuk7WATjjLLiB2Ca2iW03RI\/\/1ZE8TogT4ix520YYiBiIGIgAY7Wx2lAOgccCjwUefOhJ9yXuS9xTefLImiNrjqws\/MY+xD7EPvQ3Xss\/Xf7p8kM4J\/Yk9vy+B55NfDYxNQmaSptKm+pAkifJk+TdECUOJphgkCRLkiVzQPQX\/U3e0Ovb69urhe7t3du7V4D7HPc57o0gD5eHy\/fAscZjjcfHgxguhosBoApRhaiC+xvuWnTXorsWeSzQL9Mv0y\/TLhNrxVqx9tfvQv\/qV2IFfRL0yR32EDwpeFLQRpj47cRvJ4xC9NjosVHvPXtqXvi88HnOr7WplWqlejZ8cvSTo58chWefffbZZ5+F8e7j3ce7gSRfki\/kW4JQihuEo0OH3hxNFnzAtMa0RtwEEw9MPDCxAzImZkzMeAjeK3mv5L0OcFzluMqpEhI2JGxIiCnR775n9z3vfTPji+st11uux8BA4UBhfym47HfZ73YUlHXKOmWPWbCmWnOUmtYb0kS\/8FU0iAbxxrRSLrnshNHdo7sNu6HHqcepRwkB0QHRAfHw5qE3D735OWR+mvnp68fh3m\/u\/ebedphzcc7FOd\/Cnpl7Zu65K2FGbFxsXGzcoQb7dPt05SbYPXn35N2TIePLjC8zvgSv7V7bvbLAlGhKNCVa5q4hN3yPGmqoAfGgeFA8aImWy2Fs0tiksUlwoelC04VmWDNrzaw1s8DUZ+oz9YGrr6uvq19XRcj2kO0h213\/pvPWeeu8tVuNxcZiYzGYWk2tplbrHPim56jnUc\/Pwy1BlRsQy8VyKkDpofRQzoGPL398+aN3py3OX5W\/Kj+29m\/00IMJ\/Ir8ivzWwpvtb7a\/9TLoZXrZqAz0bfq2kWxLlFcBoqfoySa4JfKWyHGz4fiB4weOKSD90fRH0z8GRZ4iT7ELJsgmyCbI3vHw2u2122v36uvDycPJw6tBNIkm0QDSGmmNtAa0Gq1G2wUTuiZ0TdgLb9m9Zff27SBZI1kj2QmDawbXDKaApEpSJam0uKQt\/70LfTL7ZPbJYsh9Kvepd2aCR7lH+S0X4I7f3fG7wPEwNH9ovvZpGNWN6kYHQagSqoRqi6dxQ77YFGeKM8WBy3WX6y7tUPVl1ZenHj\/5emVJZUlVXeha0Uv0ohXSO9M7X\/ozzJ09d3a4H1w\/ev3o9QOW4oe2G467kpWshDHJY5LHJMPl1sutl9sg5WzK2ZSxoFfpVSMpML56fPUtZ3qzpuVMywloGydo07XpQ8Gja0djRmMMETCqHdWOqsBQbCgeLYRPT316qvhXvBLrV+9CR7ZEttxf+vP\/\/ubON3e+0fDx4Z2\/2fmbnWfi5jnLnGXOHmBcZVxljIGnpjw1JXkKKOQKuW04DOwZ2DO4BwRPwRNXy0FMIF0mXSZZAvo8fd7oJih9tPTR4ydhaP3Q+qFp4HHU46jHUfCr9av1qz34uHGNcY1xDZvlTfImefMNFskVV9xBXaYuU1fCaPlo+agBFuxZsOfBieA14DXg1Q3zV81fFRUMkdWR1fdXgqpF1aJqAeM54znjOfMAJZbx0wIOiyUe8B3wHfCCexbfs3jOAnA57nLc5UnLApPd4PC4w+NOpy3RcgPwB\/6A3Q0\/mAHDjwtDDoNtnm2efBfccfsdt98Z8\/z7lyIvRV5+5fjaxoTGhIZYKP1D6R+OLoKwc2Hn7n4BJC2SFmkiiE6ikykL0KBBB1JnqbPUGeSJ8kR5Irz91ttvvf02tOxs2XktF\/xMfibfLOh163XrK9x\/4Hzw+eDzZaMnJsRNiJuYCJPKJ5XfmgG+j\/g+4vsZeJ\/yPjXpgZ\/SdFYLfJNy32v3vXbfR2BbYltiuw+0aq1aGzhtT21zbXPt7spDTqudVqs3q\/Z2e3V7dffAU15PeT0VDitHV46uHIbmDc0bmsNAPCIeIR4ooURSYrbo4v4fH2psi22Lbd3AqDKqDHJ4YfSF0fUPQ1V9VX2VP5hdPcgYyhjKGIo5y172svfQ9NGW0ZbRFn75Wt8wwpgDkhxJjmQ39Df1N\/Wlg7hCXEE6eC3xWjIxGqZqpmr83WGwZLBk0BcqMyszK0NB7iR3kruBPEoeJY8CsU\/sE\/v4H68Vt\/Gw8bDxAJawRNj\/4Jm0O9LueO6OojuqNlVtqqyDEEWIIkQGr\/S+0rv1L2ahytxhJHIkcqTFchwFMJnJTAajv9Hf6A8T3Se6T3SH+m312+qr4Ylbn7h15eswGjgaOKIEVbgq3KEKJkROiJzo\/XHlPS\/f8\/I9X8XPcst1y3VTgKfGU+MZAwtWL1i9IMU6B75pmbhm4poJTUL8+SXnl3yXvq\/9WtO1ppa9tY8qohRRtkGqvbf53ebnFwanXj\/1etVFePizhz9bdBkuT748+UqM2VKwDNjLXkFlji5j4Mf6YJQoUYNpumm6yQCyOFmcTRUoihXFdljyo\/tAv1u\/W78N+iL6IvoCkfTX99f3l0O\/sl\/Zr\/0nXmv6a\/pLoLent6e3BsRgMZh14BjhGOG4DE5En4guywRhljBL+C04vOTwksOdcH7n+Z11lWBUG9XGROjy6fLpWgGaek29phr6Jf2Sfgn0d\/V39XdBf0d\/R3\/HDe9\/7vPS\/tL+Y9Cr69X16pDoC\/WFI4UgOAlOghPY9tn22WpAppapZWowxZvixfgbYgk\/DBDVVFMN0h5pj7QHWva07GnJB6VWqVXq4ORfT\/715Huw5fyW86+0Q7drt2u3Ei4subDk+4iHQnPH5o7N+YsoXpx2cdqFD\/a1j1eMV4yfI8T\/2p\/vX70LXTtYO1i7+PTjsn2yfbKVd7rJkmRJ0nAYkzUmy6kCJuVNyps8HXqP9x7vH4DxyeOTPZpAu0+7bzgIDEWGImMeSPokfTSDECPEUA3iWnEtTfy4MGS0drR2tBZcGlwaXELBr8yvbGoJVKmr1KdCoCu\/K7\/LGbY5bnPcNsZG5jTqNOrUCfrz+vP6S5aBQPEzw6rJkibKAolWopX0gd5Gb6N3gMYNjRsa15uDZ6Y10PVq16tdb4Cz1lnrVAx6D72HPgaOZxzPOPYUnL5y+sqp5eD+nvt7tzwFl3Zf2n35KRgOHw4f7gHTetN60z1g52\/nb6cGU5OpydT2X1hgy3XLVXKVXAl9H\/V91BdqI+vc1rmtazHIo+XRNkfBP8s\/y38bjFk4ZuGYfLhedr2sLRnIIAP9DRbYE088zQMley1LOhOBfPJpgSvLryy\/shwe0D6gfcAAnuM8x3mOgWc1z2qe9QbdbN3sYV\/4NPDTwE8LH3bb37G\/40DS6cebaOLyQPB+qwW+Sbn9wO0Hbs8LfmDy7MmzJ3sKgkuDS4NL25JbRlePrh5N6K8+nn48\/YtQePjQw4cWXoc7HO9wDHgddt63875cAZR7lXttnWDChgkbPEvAeMR4xOT+U1WNsEHYIGwC1rKWJNDEamIHUiDu2bhn486CV6pXqtc60MRp4jRd0J7UntQRtvtDxyTHJOck1zA3g5vB\/Qy4ZLtkuy0Hlx0uO9yWg8sZlzNj8+AWt1vcPHtAnapOddKBtEvaZRMPtjm2ObbxYCw1lhpTwWGrw1aHzaBwV7grXMG037Tf1GF2bUkCwSSYBBnYVNtUy4NB1avqVRng9ujbo6dlw8KZC2fGjIenb3v6tjUDMBw5HKnLAk2rplUDjK4YXWFYb1kLroJR31Hf0VDQBemCdAny0o6ijqIOn90fDhUNFQ3VwMQ5E+dMrIOF7y58N\/Ze6D\/af1SzByimWDgGdNBBlyUtthzEveJe0QRkkUUDTFgxYcWE\/SBfJF9kWwKZEzMnZtrAbRNvm3jbp\/D4xMcnPn4etLXaWm0ZTNk3Zd+UPU21yt3K3cqd45+Wl8pLbcqCH7CmkW5yxEKxUCwE42bjZsNWsG20bbRt+FubalA1qMp0mqnYp9inCBEE+\/X269Vdj9jKo+RRdrvb5p0uPl1ctQ0emPvA3AdehHseu+exOX8EXZmuTHcE1JHqSHUEiF6il+hmjkYL6TBUNlQ2UARj48bGuayEF7968asXPwJpsDRYWg0ajUbT7+2YXraqbNUxn9a7h2cPzx5ss0\/xedHnRe+Z4POiz4veD4I+TB82rIFKVaWqfB18vfzr5dURwCCDQjgoTAqTosM8gLAV8xrlrv\/nnf6PnSo88cTJUnW1H4YMQ4ahKAiICYgJOAjPnX3ubOprEBIXEheSASEhISFBPXD\/G\/e\/EXEaxq8fv95dZ59y5diVY5eXjNw74Dbg1lfomI4Jk+gFLx5\/8fjmW2EsY3GXw1DPUM9QlTltJGYBChToQBYiC6EEHCscK1RyKJ5VPKvobxB0Pej69AWwcHjhcMxnUOdW51bXA5OSJiX5yEe8pximGG6bfs\/CkLUha0M2C8KkoElBkxon3S6RSCQSeWu2aa1prbjWmge++aN0CFAFI9tGtukXgdRT6iltg9vO3Xbuth6ISYlJiZHBxm82fvPCy4X6nJdzXn7rznm2LgddDrq6DcQMFg0WDZZAUElQyYwScC90LxxXCENuQ25DrhYXL9+SzywDIUlIkmyCDrcOt45EmHhs4rGJZbDv7n1377sd1JvVm9Xboe9c37n+MJuMsqCyoBPnBt9ondA64frHp5eG1oXWzUqw9ZdIJBJpBvSu713fJwG7FXYr7DaD2Cq2inX8VHj87yKQQCEQJOGScCEENLM1szVBIK4UV4o7YPrt02+fccXWv3GgceDyzNNLjzQfaf48bvCN9pj2mPbtoIpURTrsgI9e+OiFfW+Dd6t3q\/d26Njcsbkj2LIAxtXyvQ2WYgM5jNs9brd7ExyqPFR5SA1\/Lv1z6Z8loFitWK0ogojaiNqIwIYNSx5Z8siStwQhSB2knpGguCL2iX3iufKDA8oB5YACjE3GJmMtDO8d3jt8FLT+Wv+h1b9+Af\/q58BinVgnUYH\/oP9ggCcYs4xZxiwQN4ubxc3QUtdS19oMvaW9pf33QOvp1tOtL\/2+u6WmpaYl0qHCOc45zjkawm8Nv3Xu62AfZh9mHwZ9+X35fZtAskuyS7ILiCIKP4uQq0FikpgkbjBQOVA5cAxM2aZsUwYUrypeVbwMPr7n43s+ngEb7t5w94b74ED5gfIDlcH5JW0lbSX9Opwfc37M+ZEqL3WAOsBh+rxx0kJpoSy7v5pggllsyTsXA2mkEfkLfoh\/bOb3Q5WQq9HV6Aq2BluDrc6cZ52wXbL7m03fbDqbusq9alHVoqoXU2bmK\/OV74dOcZY0SZqEWBjUDGoG2+Dlr17+6uWTEP9k\/JPxj0HjxsaNl6tBX6OvMe4BSZ2kThJ3Qx5egQJvS5GFO7TFt8W3rYUHjzx4JGYlfDX81XBFBpxce3LtyRSoz6rPqt\/hnu2y1GWpy7OBq1XTVdOVjedyAjIDMqcWgqRWUivNt+TPmyG2NbZ1gc5c581sq4Bv\/jnw27e\/Pe0VywMkAzrp5ArwBE+wFIRMIVPIBKW\/0l\/5zdTVtQm1Cec6kt\/pXtS9qNsDAtsC2wLLYfZnsz+blW2J\/uaC5JzknOQc5qqiJEteOA3EBrFB0ABttEkPAh54UAZSlVQldYLL2ZezrxyFoN1Bu4NLLd0jg6AiuiK6QgEvZ7+c\/XI+nD94\/uD5gyHN7g3uDe6ufegydZl6DYiLxEWmI9ok9QX1BbXz4XlShVQh83\/jdclyyXKJc3OgSWVSmbyv5Bk0Bo2hD0aTR5NHk0F+QH5AfsBtkdAoNApN42v65vfN7wtb+nZ3eXd5954HZh\/58MiHh0f81euH1g+tfwhUR1RH7DNhaMPQhiEZTAicEOg9CBsf2\/jYxt\/C7NbZrbOfhOby5vKr5XC58HLhlSKQbpBukCWZg1xiK4hNYhOtgBtuuIHgLrgL4ZirtTRg2GPYY9gLdnV2dXb5sKBgQcGCvXBm3Zl1Z9aAJkeTo4lTaa42Xm1s2fJsxvj48fGeUY8ywABDmyxzZqcbgmEAocB0pv\/Yi2ujNQ9805JwJeHKoqs\/n89UBCgCFAHQXtBe0F7wyP6LERcjLkbsfcigM+gMWoiMi4y7Tw0xT8U8FSuAYdAwaNSA2lPtqa4Eh2SHZIdksAuzC7MLA5tjNsdsjoEqVBWqCoW+sL6wvjDQRGoiNfNA5iZzs5mDeS11LqBGbQoHY64x17gEXApcClxqQOWucle5Qc22mm01WfD58OfDn1+DUyWnSk4dgJaYlpiWWDAtNy03rgBhs7BZkg7yVfJV8jUg08l0MgUIeUKekAuaVE3qQJq5HawpHljHOtaBTYtNi00LeDZ4Nng2wF0+d\/nc5QP3291vd78tBKUGpc7wg8G2wTZtJnQv6V7SswSkq6SrpM782IqH2cxmtiVq3QQ2e2322uSD3TG7Y3bHQL5VvlW+FWSlslJZm+V1KxhlRtmoH+iD9cF6Cdjk2+TbVMDzzz\/\/\/PPPw9Hco7mfx4O3wlsxeS8kfJnw5eJLd0kdNjtsVk2vMun36ffp9\/38\/f1j7R9r\/3jQKuCblrlvzH0j\/A\/\/jyDAesl6YS0YzxjPmFqezWpf0b6ifde2Z3RRuihdlKW8TwPSRmmjtMDSUcITSCaZVNDs0OzQ5IB+l36Xfg8olAqlQg7Xa67XtGngD6v+sGq1Kzx3\/rnzz52C5trm2qtpmAv2V5kfNDHEHJyi3pymEpab57q0guguuhs7gEQSJVEWYeeDWqVWqS+Yv4eQDDqFTqELNWd3hlNhVDWq0k+3XKQP2AzaDMoHzR6sAksVjxbYwQ4xBzSDmkGNxizUwQ7M3SR3gtAmtAlVIHgIHkINiPvF\/XiCsExYJoSAOCgOilqwD7EPsV9prt7q00Lm7zN\/v+0ZaHRvdL8cCQZ3g7vBE4aChoKGIkCn0ql0GpBPlk+2WQQSpUQp0cKA94D3QCA4+zr7OvuAY5tjm2MB9Pn3+feXwfSA6QEzAjf+zjnSOdK5Z8tu\/Xb9dn32zwv4g\/YP2j9otwr4pmXp75f+fsnnP3+DxS6xS6yFEc2IZiQMljyy5JGl10B9Rn1GfRCOP3\/8+dLj8P2c7+fUFUB9ZH1kfTQ0lDWUNUjg4UUPL3o4FoyJxkRjlEPGV7u+2vVVbdbf7UvtS+2PJVWbIk2RJi28eterd712EaYaphr89dAj6ZF0F5qj1yhvyAP\/sMDhhzriHxrSa9CgxdyEzhdzM75mfipu+KGoQo4ciSVYpLnhepUof2xsb\/gpjyusElYJq\/hJ2ZbjiRVihVhhOd9koIEGmoELXKABhEXCImERsJrVrAK3OW5zxuXAls+2fLb5MzgUcSiiaA+MixoXNS530Hk4fDh82C\/zIfsD9gfsj\/Rs9iv2K\/ZrhK+Tvk76OvKAu95N76Z36stcOXPlzJV3wZXeK71XegfSTspOyipKYMbsGbPvvGBuHSRbDWMMYwxOe2B0z+ie0YKfv785r+e8nvO6NQr968XP3NxGCBfCJXNgyHPIc8gb+nf17+rPh+Gg4SBtKBjiDfHGOBhxH3EfcQeDyqAy7ACjj9HHGA+hY0LHzBo3kPYb39\/4JmQV\/IVjHCMHujy6PLpUsP\/k\/pP7h0CeJE+yOWoWmhBv6QK5C0wNpgZTIMjmyebJcsBtu9t2t2YYGzM2fux2sFluE27TBGM2j0l0dgfZalmKLB9MlaZK0xkgnHA8La6sD6BHLywzu+jCCsAXXyEVc2eMM5ZeW57gpHRSOi0D9xXuK9wPgruzu7N7EqjSVemqc5YumqUgbhe3i40g7BH2CD1m191UCE5ZTlljGqDuQN2BOgVUplamntoLTruddjtmglQmlUl1p\/aPjR4bPXbZS7uUycpkZepbnsYQY4gx6C1Pm1KbUpvSqzJBKSgF5UDawIMDDw48OJA27DTsNOyEuUyzCvT5+nx9PgjxQjzxP82p\/6\/z62+p83P1sj8TlRV2CDuEbHPDdmEL9Hb3dvfeAy2zW2a39ECUR5RH1D64d9q908LvBWO0MdoY\/VP\/44l3Trxz4v3Hg3rm9Mzpznjj28Oth1sPn3kmoLSrtOuLJjjz5JknFz4Isctily2oh\/L68vqvaqDKt8r3VBN8+cqXr5QNwbcrv135rQBDtUMHhp4A+Wy5v2wlDPx1cPfgVEgRnx595g5I3pa8bc3TcCX4SnBzI4w2jTbpPc29pogDDnAAORi2GbYZDoLPPJ95PqVwIulE0gkfiNsYt3HBQtA+qH1w+CtwGHUYdbgE7q3ure4nYEbPjJ4ZPTDzrzP\/OvOvcIfuDt0dcvDa7LXZazO4primuOogd2Puxrdfg\/b69vrrgzDeebzz+DQIrgquCl6We9010jXSNQKM84zzjJFg0Bl0hjq4Vnqt9Fop6A\/oD+gP3lAG+HNrsH\/u9Zfed6sLfXNxn+N9jhFP\/4y\/YTLXl4p1oKvT1ekCIHZc7LiFZ2Fu2dyy8OkQPC94XnA8yFQylSzsl5+3NaU15drK9\/4YZR9lP\/\/6iswR+Yh8ZLo5vaI\/A\/3l\/eX95WCrslXZqsCUZcoyZYEiXhGviIfbam+rva0Wov8c\/Zfox+Ha0msPtj4D+ep89w+OgsJTMdm2EHrDe8N7ZJA+kN750gL47f7f7vptMFzIvlD4\/X5wjXWNcU0BbYO2QdsAj596\/NTjp+C6+rr6uhokGyQbJBtg5uDMwZmDMFk9WT1ZBScKThSc2Gu+jtYUMLYYW4wtIGgEjaCBkaqRqpEqsFtrt9ZuLbgUuxS7FMOIekQ9orZ4ENur6yfsmLBjwo6ZU3X1unpd\/Q1Tgi1sYQtI66X10noY0gxphvrAz9fP188XWvxb\/Fv8oSa0JrSmA+5surMpeDMo9ij22O0FpxKnEqflMJo5mjm6\/f+uC\/2rF\/C\/BcM\/669IzlRXV1efzj7z8kN\/euhPcS\/evk\/qLfWWJsC4lnEt4y7A\/Nb5rfM7YLrDdIfpDuDh6+Hr4QujsaOxo7Hmdqx9EtD56Hx0RaBap1qnVoDrGdczrtsgZzRnNOdWOOR\/SP7pNrCNUzjJs8BUZZIZN8Nb17OH3r4IJ0ZPjD3xJezq2NW1qw3ULeoWdas5TaQqgT9d\/NPFP50ClxqXGpdqaK9or2ivAlWHqkPVAWqtWqvWgugj+oiT4brzdefrznA+7Xza+TQ4+\/TZp88+A9\/N\/m72dyEgZogZpmxzlRP6kayFOQtzFubEnPcUPAVP4Wie1k3rpnXjP1U1CfVCvVAPowmjCaMJIN8v3y\/fD0KD0CAUQd\/CvoX9s8D+Gftn7KWgNClNymowNBuajS0\/L+B1inWKda1WAd+0rJ24dmLKAv7lrVX+u89NHiYPUxwo0hRpiuVQ2VTZVLn341cuHLlw5PuIuPVjiscUu+RA2vi08c\/PgvGTx08eXwb9c\/rn9Ieb56j4WIJFDfzYmBwffIQgoIUWMROMYcYwYzCoG9QNahMonZVu9sGQ9WrWU1lToTqsOuy0OzikOGQq14Eh2bDKeMwyl6yGJ0afGH3iW7i39N7Sew3QtLVpa3OueecH6TLz3FJsMwfRBCdzdFwcxNw\/+oeglg+Yyk3lpnJwTXVNHbsOrjVea7w2B7Ys3LJw850w4jPiMxwPDn4OfurUw26eCZ4JnvOiOg0qg8qg5sfqo\/\/t+1LyXMlzR96wzoFvWsY9OO5B94X8tJDjxhts+Pd9bp9kn6R6Fa6+cPWF5vyXp1zTXdNduxC3Xi\/RS\/S1cJ\/3fd736cH3Sd8nfQPg2vJry68FWVzSQeAYxziGuVeUh+XYNeZos5j30+mku6S7pCUw5D7kPuQOpm2mJJMPPLr40cXL\/gYtrS2mZin0xPXEdEda6oY1YJ9on2ifBON\/M\/43438HXbVdtV1yy9YmlUAbbWKhOehFqeX9ActJj1oGFCzR7UpzNFgSAN0+3T5dPTB5cPLgZAPcl3Vf1n2robC0sPRDT7DpsemRe87vuOh60bWhbM4XNi02LTbuZZHienG9KfqfDK3+Tz5\/juesQaybGKctTluc9\/7vjfQynUwn04EkThInVLpOPvXdqe9Ovbq+ui+6L7r3IPgG+QbdFgERQoQQ8SH0ruld07fG3JlCkgVisVgsFgPOOOP8Cy4onHAW\/xR1dix0LFTnQsHTBU9\/cDdcHbw62JwDjmcczzjuA3ayk0BoC2oLaguGoq1FW4sSYXXL6pbV7TAUNRQ1vMI8kEgCzGki8QD8bAjoh+1aj3CEIyCRS+QSGfTu6N3Rkw33pdyXEvkYfB3\/dXx1FjToGnQNPnBr3a11Ppv2PvBw58OdDz\/qHyeZJZklyew7YNAYNAbN\/54FBuA1q4BvWl6f9PqkzNP\/\/uOKy8Rl4jKQucpcZU7A3\/m78NBvfU0dpg5js0Rt42bjJneF+fbz7eevhHHKcUr3FGhLa0trSwMhVAgVqvlx0zOaaKLpv4ie\/pAuOcMZakD0Fr3FKHBNck1yXQFfq75WVc+BE3kn8sqyQVYjq5G1wdQzU89MdcpbQjDBDEL1vOp51fOSCsq15dpyHYQmhiaGroCAfQH7AjOhZ1HPop5QoJFG5gCVVFLJT0UT\/ygQX3zxtZQB7gVtuDZ8eCWM9xjvcctkiEqOSo7Kgdy\/5f4td9Dco6tHfYs+ryiv6C8LHn2Ai1zk7FsY9Aa9Qf\/T7o\/\/bgGnkvqrNsG\/egGveHDFgyv+9O+3wJLfSX4nTQFJpCRSCA9N3V+7v\/bjmuxXG3Ibci9Gw8yCmQVB8RD2ctjLd78FXTFdMZ1xINkv2S8pAHGJuERcZhGI7j+4ff+x7G8DG0gBoUQokWhANkc2R+IDhlhDrCEBit8rfq\/4LzB0bOjY4FYYlzYuzT0PgmcFzwqeueVd\/TP6Z\/R\/GMi\/UH6h\/ELlYueukq6SrlxVz6FHDj1yKBn8y\/zLAsosSxtLwRRlijLNMbfFNWkxb1my9b9P10jqJHWSJugwdZg6lHB38d3Fs38PJ1edXHXyQzgdejr09FqYUjmlcsq57M\/iF8QviH\/o9HPiZnGzuLVym\/GE8YTx1P+SBbYK+OZFkaxIlsv+fQ+EsERYwjJQH1QfVEdJ4g5fOXzlyBevPXq19Gpp03FzuaDDAXhw7oNzF\/aCPF2ebpcJmv2a\/UPpwDKW4WSxqOcw79XkfsPrPz54K1hBFZhkJplhK4xVjlWO7YEv4r6IOyaF7+Z+N\/e7PebGA\/ZzYKJkomTivPQ\/Dn0\/9L12wpWsprSmtCZfcPFw8XA1ZD+vT9Yn6yevp3Zt7draVDjx6IlHT8yCiNSI1PsOQMfBjoPt1SCUCWVC2S8JuFtiAhVUiMvB6GZ0E4tBniZPs0uAmISYhFgJfG\/\/vf33ntC8tXlr8wo4HXw6+HTma4\/OV89Xz\/e+94Jmi2aLJtd0QMwXzeWZ\/04B91gFfNOSP5I\/8sH9\/74HQvKh5EOJCCOqEdWIo1+Qfp5+3sj+sABTvaneuA3u7ri7425nCDofdD7oRWgvai9q227Zl3iypQ5W9l8I9h+F+8M7PXr6QBGliLJdDT26Hl1PD3z22GePfbYURkJHQkdmg7fGW+NtGKgPeSTkkZlO70hMD5geEH3A73G\/x29LgmniNNH\/tjdHi\/OL8w9NWbHsUsOlhsYkj\/zPpn429bNpMF02XTbjLCgSFAmKBBhZObJyZCU\/dbX8OW7cvlQFQovQIpyDLnmXvKsaZmTPyJ6RAGHfh31\/zx3wecXnFYcr4Nusb7O+XRwWcLb5bPO5nsmVhumG6YboBnid13nv35iFeH7t83+0WuCbF595PvOmLP\/XBSymiWlimnlDbmW0bO+lkkslDWkffn219WrrlSZwTXNNc10NDyx8YGHUKGjLteVD31qit3VgzDRmGtNgzJoxa8Ykg2K2YrbCGUYWjyweyYbelb0re1daLO4KEI4Jx4RSELeKW8VMcO1z7XMNhvf\/9v7f3v8zNLQ0tDQsBtd613rXc3Br1q1Zt25Pvavrna53ujUdGl2KLkXXAH1RfVF9zSB5WvK0sLoj022e27xxioym3pjemL7MbBrSG9IbtsLnnZ93fu4Ey3Yu27m0AK6FXwu\/Nv2GtdK55LLX3P1STIYxJWNKxhy0bMO6AnSpulRdAfRW91b3NpnLBiUe5k4c2giIiomKiXoOvjn9zemaSGgvbC9s18Gs+Fnxd8\/59v25S+cunfuMs03fe33v9W0cDieHHHKsLvR\/x68+D\/x89\/Pdzx3ipwbiP3Bjf+Nf8LnDBw4fOHwA3z393dO1TyVeKN9Xvu+rA3+5qIvSRek2SKKXli0tW3oOfnPoN4d+85ale+MxcO5w7nAehCPKI8ojSnjX8V3Hdx3hWvO15mtrYVLXpC7vZfCne\/90b8a94ODp4OngCYPqQfWgGhz8HfwdvKElqCWoZQW8Num1Sa\/dY+4x1X8QfGQ+Mh\/ZubZpy6Ytm7bsjlv6Pfs9+3UgPyI\/IteDz3mf874nQOYt87ZZDmOcxzg7ucNn3332XcnftdPKastqj++0qx1XNq7MzQmeO\/TcoTRb8Aj3CPd0h4HQgdCBYLAftB9UesFQ8lDyQBw89\/1z36fdDZc1lzVN6eDZ7Nk8Ph4SryZeTbwK89Xz1fNV0JPck9ydBI6rHVc75cLf3\/v7e38\/Dvkp+Sn5K8Bu0G7QrsxUfM+ye5bds+jxKQFzA+ZOm7\/Ld+DhgYcHH\/7XBfzKO6+886dvrAK+aZn+5fQvAz\/+F36gGCGGKHOdq9gCw17DXsMB3y\/VVemqdDW++V4KL4WXHHa8seONHW9Ai65F16KD1w+9fuj1Q1DXWtd6vgPkznJnGzWMeo566kvBuci5yEUHgx6DHkOzYYpuis6nD9Z3ru9c3wnaddp12nXgMsdljssc2HFox6Edh+Bo49HGo43g3ODc4HwBxseOjx0fN32iXC\/Xy\/Vnm0W9qBfbwOhh9DCGQce8jnmd8WB0N7obwyyNCGpAtkG2QZbo4z68d3ivdufF6z1berZ06yDCKcLpvmBYc3zN8ZQ\/QKe+U9+lBdVk1WS79bDVbqvdK3ZwQX9BfzEeVAmqBFUMsJ\/97MNcSB8GHdUd1R2VEFAfUB9QD8\/e9+x9z95n+b4xkPxe8nvJf4Xm7c3bm7eDokBRoCi4sEzRomhR1N72gWASTILeHA0X\/4XG7GeHzw7X2lld6JuWWZpZmtlZ\/wPXy1KlpDygPKDcD9\/1fdf3XdHW9gtpF9K+X+7r5hThFOEUAePk4+Tj5LD0zNIzS3fCgHxAPpgH7ePbx7eXwu1pt6fdfgDeX\/r+0vcnwdQdU3f4z4CPCz8u\/NgLHv39o79fqoCzpWdLh0rh\/Y73O96Xw4bQDaEbQqHIr8ivyA9Ozj85\/+R8GFM6pnRMKSj8FH6KgIfust9sv9k+\/WyzMc2YZkyzNHI\/Ard63up5qxIeO\/XYqcfaYTR4NNgwDsS3xLdMCeB4yfGS47eNoQdfPPjiwYdOhh\/tOtr1ecGs0pMrTq442QF39d\/VH3oBYjpiOmIOwJbDWw5vuRvOac5pvk0G+y77LvsCCIoNir0za8W4zqzOrM7Ev3YMuA+4a1pmBLg0uDS4dBU6XFlzZc2VTT4VT\/z+id8\/8QQ4ejt6O3rC1BemvjB1I\/TL+mX9chgKGQoZ8vTNH584PnH8zq1Z03Kn5U6TrR+nzdRmDvsC9dSL9VYX+v+cgJ2ynbLHeP3zN16+Wr5anmQpJF911\/YrVVeqrkQ+72YbYBtgqwHpSulKaRJ80\/dN3zd6S0F9Gzx9+OnDKbcM1j330nMvpU1VHAFg6jv7iCWW2DVfAbAYvAu9CycugdvKbyu\/Tcy9vyOkI6Q95okjR6uOVh09B1M2Ttk45QU473Le5bwLmCaZJpkmgT5CH6GPuBjUm9+b35t\/4JuOpI6kjkQQO8QOseunKqo6fZ2+zgRloWWhZWEgf0L+hPwhME01TTWNBfF78XvxlOmAsFXYKuyZjUOpQ6l6emvGUOtQ69DiW9Kq766++\/TdMBQxFDEYCUfvP3r\/53Fg62frZ6sE\/xr\/Gv+sXYrJsZNjJx3964g6TB3msAj6N\/dv7i\/8praxqLGosWAKk\/Mm503ej+Af5R\/lryoUDmsPaw\/7\/Mb0dfnX5V9Xg9Nip8VOi8A20DZQfg6uBFwJaF7\/vJt\/iX9JgO6T7e5L3Zfe8vdTKfoCfYF+8f9QwB\/\/ep\/vX70L7b3Qe6H3w\/\/8\/xPXievENJDmSHOkDflv6TP1mSMlS5OJIsoUC06hTqFjjlZ5TQufFj6t6sk746bETYn7sObAb0N+G7LU54YDZZBBMbCd7aIeWM5yNgPb2CbU\/PBHYRkPfP7A5\/MPn3iuuqy6rLoYnFOcU5w3WDqBdIBxt3G3cQV4JXolei1+4RGPao9qj8athSMFIwUj+TfcUL2gF7RgmmOaY4qEgbqBugEs7yNAMAgG4Yad7OVB8iB5ELQ3tTe1N6VM747uju6OfuMb2y22W2y3gKHJ0GToAn2VvmpkC0zYPmG7V8alnNCjoUdDG\/1fG\/Ab8Bvw0TdJvaReUj+wrbCtsM2CE94nvE8EWDqYrIPYy7GXYz+DlltabmmZaGm5szso7gvDF4Yvwt75us+9z703J6SZCiqEUpCmSlPlUR\/sMC03LTd6LHuKAgrY88\/fx6v3Xb3v6r1WAd+03H357st3X\/vn\/580UBoonQ6dZzrPdLbCgs0LNi8IkRfNuXvO3fdc1sdsF7eLb0wCeYY8wyYb4h+If+DhTyEpJyln5bYbDuSPP0pzo3VDBwgJQoLgBWK+mC9uBkmgJFCWDL3aXm1v5IzJcz+b+9m9809f0TRoGjR6qUG2SbZJ6gkuvi6+Yz2aGm5Puj3pjoJJU0YiRyJHzgFb2Spm\/nQ64xHjEWMz2DTaNMp3QMD1gOtTvwT5BfkF+Q4wHjUeNbbc4IJpZBqZ5oegnVNcwZsFbxa8de6Zdud253b1hDm2cbZxco250YBtxLB3qCJUMcvtlj\/ZJNsky1r7lxiaDc3GLhDWCGtIBjsfOx\/lBvhy3ZfrSl3Btsy2zGYyLPxy4ZcLBWgQGoSGMTAaOho6GgLXiq4VtayHlAkpE54RoWxs2djyP8qLDhYfLD5o0se4erp6ukosvbaa\/\/n7WPFJxScVH1ld6JuXUkop\/R9Y4DqxTqyz1MtmwMDqgdUDc\/QxPTN6ZvRMAL7kSxyBaqqFamDjz\/Q+1KNHj7nn1QXLsZtAUAtq4chPf1YkL5J\/uuibRs\/pntM9b7u7sT6hPuF8eCXGcGO4yQfu3HPnnju3vNQ\/1m6s3dg80C3QLdAFWlzHNTecL4AAXIF5zKMVOvd27u0cAiYykZmYdxtc8J9dTbs\/2\/3ZbmffgaC1QWuDUjZtKF5UvKh40XvoE\/WJowdgpmSm5C63iAcdnB2c7Zf0LxnxG\/HTxYHNMptlUlfLcTaZ2\/aO7oM7VXeqZrhDV09XT5cH6Jx0Tro84CAHqTFvhC5UA954CwHQ81TPU72TYGB4YHjgQX2MECgECgmYO4is4KelnVb+b1lgK1Z+zVh7YlmxYhWwFStWrAK2YsWKVcBWrFgFbMWKFauArVixYhWwFStWrAK2YsUqYCtWrFgFbMWKFauArVixCtiKFStWAVuxYsUqYCtWrPwy\/r8BAGFwmBPzd92GAAAAAElFTkSuQmCC&quot;,&quot;nombre&quot;:&quot;CertCreador1&quot;}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba2Flujo3" enabled="true">
        <stringProp name="TestPlan.comments">request dashboard</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">50</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">10</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="request dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance GET" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1_f3.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get iniciativas" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/listar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance get" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios pidiendo iniciativas simultaneamente</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get procesos" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/proceso/listar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance get" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">30 usuarios pidiendo procesos simultaneamente</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba3Flujo1" enabled="true">
        <stringProp name="TestPlan.comments">altasIniciativas</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativa user" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcion&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;colo@gmail&quot;	&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/alta</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativas organizacion" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8785/proponer</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba3Flujo2" enabled="true">
        <stringProp name="TestPlan.comments">altasIniciativas</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="post alta iniciativa user" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">{&#xd;
	&quot;nombre&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;descripcion&quot; : &quot;${__RandomString(10, _.!abcdefghijkrl)}}&quot;,&#xd;
	&quot;fecha&quot; : &quot;2022-01-31&quot;,&#xd;
	&quot;creador&quot; : &quot;colo@gmail&quot;	&#xd;
}&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/alta</stringProp>
          <stringProp name="HTTPSampler.method">POST</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance insert" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="TestPlan.comments">20 usuarios dando de alta 2 iniciativa</stringProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\JMeter\Prueba1.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get listar Certificados usuario" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/usuario/listarCertificados?user=colo@gmail</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="AssertionVisualizer" testclass="ResultCollector" testname="Assertion Results" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <JSONPathAssertion guiclass="JSONPathAssertionGui" testclass="JSONPathAssertion" testname="JSON Assertion" enabled="true">
            <stringProp name="JSON_PATH">$.[0]</stringProp>
            <stringProp name="EXPECTED_VALUE">{&quot;fecha&quot;:&quot;2022-06-14&quot;,&quot;insignia&quot;:&quot;iVBORw0KGgoAAAANSUhEUgAAAHgAAACWEAYAAAEyvaD1AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAIGNIUk0AAHolAACAgwAA+f8AAIDpAAB1MAAA6mAAADqYAAAXb5JfxUYAAIe+SURBVHja7JVbaJN3GMafL8myGdovNm1kodo0GwtZnSVY+5UusGpPgqYHu5KJFDpTKUhX6RJktoRqkUEaEPQmww0XenA36pfSkq71AIV8TSE0oLbaiqvRmorQiabVHPRz7668GlmgHe6mz8179X9+\/B\/eA0NERIT3Lgn+J22A\/6GD6oNqSzbQdL7p\/KHDwIWrF67+0g\/oRnQj2j6LvGahZmH\/HV+8uqi6qKoFUMwp5j6aAVoPtB44Uvcvxu+aK1UtVBQqvsgAdDm6HK2KqEKsEPdEiASv4BW8RMK4MC6ME6lFtZgdIdKxOlarICrtKu0q6Urtm\/bHbDfbzX73DW+32+3HZwBPyBPy9AFLT5aeLFX27rMt25Y7Lo4mhs4MnRmqAsIr4ZVHMQC7sRuqdURtcpvcXzYM24yVxkrjIjB2c+zm2F2GMSfMCfPPJ36XLkoXpZ\/s3zTPzrPzlh03hClhSpgCClwFroLRdYBbiluKW8OxMOSQIwMIRUPR0CvgdPvp9p49gL5aX\/35r0AwGUxOK2cr370LbAlsCQRSb4i04M7VztUfVhkGecjDx4Bvl2+X7xiRl\/NyvArQ3tbe3soD\/CA\/eNlFpHQr3ZmDAMdxHOdmmDU3l\/W19bW1AyheKV4pOnsnKtwSbk1uJxIWhAXhPpGf\/CQ0E\/nr\/HX+GiJDoaFQb3gTbgu2BduCqX3Tgl2TrsneNwC9pbeUBey07rQa9xHlRfIWt\/5GxOVwOUUiUdbLrJfKP4hKLaWWkkagOdIc+far1L6ydFHHa+O1iQzAyTk5pxFwnHKc6j4JyB7LliTDgDRXmvuBDkgOJAeSJ4B73nveu98DuIIr+AuACHFNUZdPl09XNAF6US9+JiPie\/ge\/ieibfJt8lwJUT6bz+ZvJuLjfNybSVRvrjfXO3+84XA6nI4X65jjxkuNl742AVBBRSrAVmYr6\/j0RSJpSBqSBQyzd3bvbFX\/0Wu+Tl\/nyHHZs4exh7EH17vKNRqNRjOT2pdJdxZNHpPHdBFQmpXmzKfAqHpUPWYHzjWcazh7DJAYJUZmMzARnghPfAhEDVFDdBCIOWPOxJ9A4HngeWB5DeCNs\/hf6W8AAAD\/\/+xWT0jTARh9s8l0GzHdLGlKThmNQhrkgsRgWZlmBKFTlzIP5aCojRitLgVuDJ1\/kGiQUbpQstilw1IZgjmba8qQH7lEIaRw1sLQTbItbH0dQjqtRV6C+i7f8X3v4\/He+\/\/qfxi4TlgnrMn4WX02R5orzc0fJDplOGU4eQQo2FewL2+YSFovrS9QAdoqbdX5M8mBE3r1TNtM24wRYDvYDvYoYAlZQmaGyN5l73rQArAYFrNNSRR3xV3fmgHbF9uXW51EgZuBmwHbL+IwGWNDhiHj6h5gNWc1Z+UikXJWOVu6AtTyank1PYBkVDIqydEtVRZWFp64Bug5es4VCbC2fW37Wmj9XFLKiUxcz+iZy0agx9xjvneY6KDyoLKohChijphXLcDixuLG4gbQG+mN3J8HvMve5RccoqaPTR+1cqJk4ZOQsb\/YX+zvsx+Xdcg69p4G5uRz8rmTgDHVmGqcBHa3727PvQ343vveTxFgi9qityxA40jjiGbkN9SV6KKzRWeL6joA0bRoOrOVyG132581E+UP5Q\/l1QD8TH4mVwBYFVaFdZ4TmhBOCCeyiMq8Zd5j\/qn5ZIwTiisd6eAWA+Wvy19X9t3OM10wXWheuPymP94ff7ifiPOU8zQtHYiFY+GYEmiwNljVLoC3wlvhd\/vKAAB3\/0BcMoVMIVsG+lX9qr47urdfdV91cTnAFrAFLBnAT+OnpQ8AnnHPuLsYkOgkuvyXLFbKQspCCqN7+8eq\/vz48+NoNWASmUSmNEDsF\/t3XQeWupe6QwJAK9QKtVk\/6q1MAzAmxsS0EqkNakNd1xYMxO1yu8ZVP3eVukpd8xwgH\/moCAiWBkuDchYLfPDBBZxSp3SwE1i3rFtihVsA3qw82gptRVPuzk\/lJeUlFSbAN+mb9NYD1ZpqTfUOIGsgayBTCWicGmfD0Se+7Gh2NHtwC7G4WXnCY+Gx8ALwyv3KHbgBKCKKyIEPjw5pVBpVY4v6hSPVkeqI2lbFXDFXLLiUEQwEA+9mAc+wZ9jj\/J\/HfwHwdwAAAP\/\/7FlrTNNXFP\/9eYi4UmZBBqUBQQGB0BafA8wYw0CJokPDm1VAXIC4GkSeDnBbzCRRxABDSAOKQHGpBeS1TIEANYJBM4glbBpAJkUgVlFWiKOcfdBEssUsIxl+kPPlfrj3nJzfuSfn3N+57yzU712kVwCvAP5\/xGCpiuEl4SWhxQD0oLc4bMYVxhWrY4GyrrKuS4ZAzs2cm1m3TH7znvWe9R5+7mA5ajlqdRwIKQ8pD74MNO1o2tG0BSiUFcoKswDWE9YTVj7DVFZVVlUqgLH0sfSxVCCKH8WPEgJYwAIWgNLa0lpp\/TIWLWmENEIaAciuyq5WlgN6NXo1Bp8B\/Zx+Tt9pIoWRwqhOf1Ee+cEPIQA3nhtvNQRooIEGAFvNVptGAVO9U71T\/QBdpIskBaCFFlogYjpiOox5NUWZn2EY673We63tgdv6t\/V73Zbxhu9G3o28mwDcT7qf9GCIqOpc1bmqXwE9iZ7EwBAwEZmIWN3ATu+d3l7h2DWxeWLzhDnTSuZkzuQBhhJDySoJEBcZFxm7FlAXqAvUp4DJ1snWyXYi+Zh8TDEOVLOr2TUsYJV4ldiogih4Y\/DG\/YYAhjGMh\/\/OVf7znOlta0dxR3HHLWBd7LpYMxGR2lRt+nsPkbJH2aO8SWTKM+WZcImatzVva3QHmgOaAxr9gWb3ZvfGcGA8aDxoPACQtcpaZQ3AFcEVwRUnQG4nt5N\/BOzh7+EHDLy210Pktt1tu1smkfi0+LQ4del+L1kxxiLGQvwScNG6aJ0NfmTcpe5SQRiRUqfUKf8kSlhIWIhnEWVOZk5mcoFUXiovxQ9wEjoJN468YSBZmizN1zbAgeoD1UH9gJfIS+TxLKZ7NHc0d6SdqNO507mjgYg\/yB\/kf0vkm+6b7hOXH7zsgIWbhJv4joAwWhjNFwOSQcngkXyi3vbe9t52oi7TLtMuUyKlmdKs05mIN8ebs15N5CZ0E7raEFmOWI5YDDUKuNHcaMv9RAn8BP6XD4iUdko7pR2R0lZpq7QlUvYp+zqHX5+XEgXOBM4ELizd7yW3JRdPF0\/XQsDZwtnCJQzQV+grDD9lmIbIhsi6EoYJqg2q3fc9wNrF2mVSB4j8RNtFA0BZQlnCxcOAXCVXKcJ3\/5JTnlP+jQBIEaQI0vQBy0TLRMtJoFJVqarouxwdlBuUG5TBMJz1nPVrzRmGl83L5h1\/B0\/LpOtJ14\/eevu+bEg2JMsjKp4uni7ZAsARjnAE2Fq2lj0DHFQdVH2hAgoMCwyL\/gCwFVvhBxhcMLhg8ANwYt+JfRkeMxzr59bPudkmT\/9uvyW5JflnZhmr9GPPx54Tlf\/sw9o6bZ2WlfiTIlARWNsHTNybuDd5GEA1qnEDODp1dOqrYcC+077Tvp9htGnaNO1uojULaxbWAJiPm4+bjwd8MnwyfD5gaV7kvch7EQJmLn8uf7b0TR9GMpJhtoyAHcMcwxzUiwC3oQ1tQMWjikcVQ0X+pWdKz5ToAS1tLW0tOUC9bb1tvR3AvcG9wa07ZuIT4xPjWwyk5ablpuQA5x3OOxRwgFNep7y+awHydfm6\/AkgtCa0JtSD6NDAoYFDQoZ5DfeVPFzGlPbQeeg89Rf9z2TPZmuvuRyzGbQZtP5kIO+a4JqgSQUgG9n4+EOx6x3XO87tTy95s73Z3uYM48Q4MU5GgDHHmGPMAYo2FG0oNCMK7wrvirjOMPKz8rPyHMAq0SrR6vNVYZqTmpPPul\/W6CQ6ie4I0O3f7d\/tu0IPV8jDCuD3DfBf7JprVFNXFsf\/l0BeQhIJBgWKqEiNUlCI42Moy6VIKY1UBRmlkVHEB1C1y1HHyqMWFCoDvnBEaARlKAREhgrtUKLWKgSx0IqB+GI0ojwNiICQEHLPfKhWVztfxunCmbW4X\/aHs9Y993f32Xvts\/97NIZHgUeBR4FHgUeBR4H\/D9u0P08mPLuusdxYbixn4NS3p7792\/dAAjOBuacGmKCfoLebKm7Ye2\/vvb2lmhnOXs5ezlsoiqViqVgVQFNxU3HTLkLEJ8UnpwdQlEFkEBkygT52H7vXAZBkSbIkOcBA5EDkQOSL\/TPPZJ6R\/30EgalEKpFKfAHMcGG4MOyer0r039R9U1fRWsvWTtBO0Eo1M\/Ib8xsVEUBweXB5sDchVAAVgLtAPpVP5UcBa8+uPbvOSMhM\/5n+brcpqv9m\/83e6wA60QnN\/0Cl5WpwNUyvAxgBjADGLsC01LTUtHTzw+S05LTkvxyxLztTdqYsG5DVyGpk3wNERERmyQC60U0OAVQYFUaFAURBFEQBaD\/TfvZPEXAw+2D2IQMQUBBQEKAAlC3KFuUwRZn0Jr1JD9Bz6bn0XODK5iubr24dwRgOLAssW8EGYA5zUgjwhnhDPD2CxU3iJvEB4IO+D\/pWcwDiQTwoX4CtYquYN4ExjmMcx+QCQpFQZH0MoAPoADoAcCpyKpriABzuO9yXxgGWVCypeN8ANMQ3xDfsBGxP2p60PQbw\/Hh+POlrSFrsGnYNuwbQz9XPNWQS0hzaHNricaSq3bLdsjMHIBfJRdIDbH2w9cHmfcCq\/av2hxh7tHY6O519Zay7qkHVcEW7pWXDig0r1j0FdDm6nM5no7nkQ8BqgdUCKx9AIBPIBBJC+qR90r7lG1yfKxIjnrQ0czRzNO9wRdnV2dXZqQBRE7XZHwD6AH2AXgNsvbf13tYPgLr36t77oYuinqqfqgd+B7Cd2E4sHcBVcBWcq3Bw7nXuneqVBrlRbpT\/sbj6U82nmviqZXM7pB3SjsnAF\/QXdH4UUMYp45wtzVCzjCwjS59JjbiHhTZCm7HxA52hhlBDqAkgh8gh+hDAPcs9y\/EA+lP6U3r1jz4qCSoJKhYBJJfk0mU\/hQDMAcqP8jPzB1bzV\/NXc4DA7MDswITl83y7fLt8HwBoQhNuAjRN0zQNFPIKeYU84FbHrY5b7a\/hSIfuCN2xxgLozurO6s4EKBklo0IAoiIqUgmkmdJMaca161jNrGaWA1BeXl7+9TSAYc4wZ5gDTBVTZZEL4C7umvUCXAFXYOkETI+cHjljMmBRYlFiwQP4A\/wB\/gDAkDPkZruBt1e9vcrb9BqOdPD+4P1BpYQUlRaVFt941r3MAjhyjnzMMaBUXCrOyjdwjcXGYqMCIDqiIxxgXdS6qHUbgci8yLzINUC3tlvbUwOgFa1oBQYbBhsG\/QCT1qQ1aYHe7b3be0OAC4ILgm83APMN8w3zawiJQAQi8Z+Laa\/s4UnHJx2fJKKoTQc3HdzwZ4Afwg\/hXwS6XLpcdLVAeV553jfblFOGaodqjQuBFkGLoE0OWAVbBVutBDqvdF7pZAMpsSmxyacBbZg27O4e4I7uju72FYAOpUPpIGAScxJz0gHA+773fe9PgHG142rH9VMjH8PWQdZBwpuAbZxtnO2Gd8VsGVvGlgFUO9VOLQD2Kfcp91oAVj5WPpbMOnu2iC3ieP36PT3JPclPjgPqEHWIupKQa2nX0n40Pov1JsD3qe9TnyjA39zf3P8kRdmk2KSM+\/A1xPDtPbf33HIAupndzG7VP26YBCaBSQAwLjEuMXYC9oX2hY46QOYuc5e5ezxU+ap8L\/sSYl5oXmieWeauLlIXqc8SMn399PXiNwlR2avsazqAFr8Wv7ZigPamvWlvQC6UC+VC4NHVR1e7JEwnpivTlVX0Giqt8Dnhc9bVAG9Vv1XtfuZPtemP0h8dPTEx0Hy3+W5G8yZR9sTsiTldFleHPIY8jB4AXOFKKgBmEDOImQgMy4flpiaA7qF76G4AwxgmB4Dzluctzy0FFGqFOn824JDnkOdg2RfjsMBhgWMmbx9XypVyB4Cjnkc9j3qOYNIadBt0G+wHxn499mtBSKqktbG1sSUa2ByzOWaLIGmtocBQYHinFTbHbY4LK4ATbSd+f2IOsHTiUsdlpwGSRbLoBUC1rlpXrQN8HHwcfByAjPqM+oz3gJ01O2t23KOo1oLWgtYvgPYt7Vs68wC6n+6n9QA84YmRBJ7FmcWZNQg4uTm5OV0DeqW90qe+zxaNurmToyZHOd0Adkh3SHe0AINWg1aGq8D1N68X\/HgCiEuIm\/fJLUApU8qUYiA8IzwjfCtgXWldKSgDCnoKegpoYGzW2KyxcoAtY8vGVAJUOBX+39xpf3O51Ohv9B8SiYuWpy5PXcHSBD5xfuL85BoAZzjDBUiNSo1KUQKpi1MXp9QDrdNap7X7A9BDDz2Qfj79\/DEhwOhl9FJsioIEEvybZPeqcukrAz+f8P1ZvnymIp4WnxYXJpGuhMMJh\/f9FdbkIXlIH\/ipwIAlEOUe5R7xHTBFOkU6eROwLWlb0o7TAJzgBCfAdqXtSlERcC7xXKKyZeMgcztzu8WnmdxfyrK7hnYNRc8fwSN948GNB5r1LwE3oxnNgC5Zl6wbhjV+wA+kHIANbNAA8Hfzd\/MagEWnFp1a5DYcVx1aHVodYh5P3aXuUu4AcSSOxBFoX9m+sn0vkLskd0luVwZH8pXkK0\/HzF\/p0CNeaXVqOjW6nhfAFjEWMRYXgcjzkecjIgBSQ2pIOIASlKAEaOxv7G8oBrht3Daul0XCkMuQy1DnxxOEHcIOoWdihO6S7pKuFqD8KX8za6C\/or+i\/11gis8UH5eXdejX1dPyiveKnzfwwvI8eB5jPryRvUyyTLJsD7CtbVvbR\/XA+MrxlaJiIHF94vrEy4AuRBeicwOi34h+I+5G0uRz98\/dV0YD1UnVSZXjgPAvw78MywBiqmKqYt4H+LP5s63qAXKEHDG5vrAjDjxePF5st\/iFrWJWMauKpq2Z9fGsjz2mAvce33t8\/\/FXMyO6IroiugCRVqQVaft5SlpJK92AWy23WjRW8Es\/mn702FUgT5OnyZ8M+Gp9tYuPUlTynOQ5yW8Dl4SXhJe\/M8baJdklOeQDz+2IZ+lfTgDMvD7z+lvHGqemz0qflbFxxh0iIILhJoCbwc0Yc5iQ0AuhF0IFi0qpMqqMOnYhwLXLtcu1D\/g8+vPoz6MJWZi4MHFh4f69LotdFruQXbF19nX2dXzguuK6Qt3UmmCmMFMwFHaxz\/d71QmAV45hsxyzHCrnpR+wat6q+fkz7gAANgKwgx2sAbcetx43HkVJLksuz34MDPAH+AOLARJBIsg0INAm0CbQmtNYH1MfUx+nj9VKtVLtQkBYJCwShgGeTZ5NEpldbL1zvXP9ypc+4DEe49EIeni0ET8KPAo8CjwKPAr82z\/\/Yu\/c46Is0z7+vYfh4HAQAYdxVBRCw8QjiHhAWTOPSIBEhIRaeEhYVl01tZZcTTMzT6lrWkiGeEIlJHVVrFwMNcVSJESEkbM44DDCOAM4z\/sH+tZrtdtnP++n913j98\/z13O4nt993dd9X6f7d2eW2kZ0G9oIbkMbwW1oI7gNbQS3oY3gNvxzyH\/rF0Y+Hfl0RA9AixYtP4QSHgtOWXtbe1t7wIPIB5EPvCFlVsqs1J0\/PKfrxK4Tu9g\/DBynglwpV1pUgrHUWNp8ZuWsZzTPaHrlvvFuTs+cnmczcOzcv3P\/zv5gG2kbaTsQmvOb85sboLNbZ7fOBijLKMuoyHdf3C2vW163JOHkkO2Qbb+1eJFYLVazBuy72Hex94PtdtvttgeDR6VHpYcZctfmrs1dBzOdZjrNdPlpMujjcv27yaH\/ORpcQw01P\/MD\/tX1MXT16urVZRRYyi3l8kC4c+XOlTvDK6YY1UZ1Y+rSbd09unu4ZUvt9en6dP05SdIka5I16U05FFNMsY1Bk6fJ09RJ0iHDIcMhX0ma6TPTJ3ZS8TsZhgxDuuHmwroJdRN0jlvGKt9RvqNyhXzPfM\/8dWDrZ+tnG\/Yzcv2bcjxxjo4BGwds7PcrGkC17G3Z27J3aZLJyeRkUq+cXpJekl4SA+3D2oc5BLe2TfNwArOD2cFsAw19G\/o29IVDKw6tONQPdCqd6t63rX2hzAmgnqaepo6BY6pjqmNqGO833m+8L1QmViZWLgOhFEqhBPcN7hvcy6HXwV4He9aCT6lPqe9ow\/6mhKaEpvklu7QXtBe02WB10eqi1cXemboRuhG6QBifPT57fLYQjWcazzSe+WUNTumT0ie13xNM8J7UPal7iuDWK7deubUNjp48ejLzWTB5mbxMI0AWJguTjYIHuQ9yH1z5Y2VZblluWd6mTmcXnl141hoqvSu9q6NBppQpZS4gL5YXyzXQ\/G3zt825wCpWkfjwhwY\/vBp\/om0\/zF8ttPwPDXPEETVIVpKVdBzUMeqYTrNBf0J\/4t6Jh\/mBV8Bik8Umi+MQ9nHYxyFfgG2MbYxtiBBitBgtRrc2fb0fAo5hjmGOftBxTMcxHWPh1MpTK0+veIJtcGNGY0bjm3D\/0\/uf3n8D5J5yT7kc7o65O6buDHTd23Wvu7d8dklUSdQNpxcs7uvu6+5vAouZFjPln4FwES5iL0hISE3QrGnWNCvA\/or9FfsUKN9evr0iHVbMWjHrrelwo+uNrkUfgSnTlGnKaB04Ld+Clb+Vv7UN2M+2n91+DEwePXn05GhYMG\/BvIVRcNP\/pv9Nf6jaVrXt9nYgn3wKAA0aKQlsNbYaW7fW70AOXse9jntth6rTVacrVeBe6F7ovhzqnOqc6uQgi5HFyGJ+B6voS69eevXSq3Bi3Yl1J9ZJkra\/tr82RJJcVrms6miWpEV9FvWZ\/3Lz3zJ7ZPY4NiNAeWT9kfWf34Zyh3KHil2ABx54QLePun3U7RxMsp9kPzEHhjgPcfZbaCp2l7vLu8XbzsgZljPsQjchbq28tbKsVghdqC5Uf1KIwi2FW24+EOJDiw8tdmQJ0dult0uvciFKh5YO1WQLMWr6qOkjLQ7WTJk1ZVakJeT75ftdzQPzOfO5loG0JuyUg26rbqtuPpz3Oe9zvgKmvjr11enrJcn+tP1pRxdJuma8Zrx2XJLuxtyNubtakm7n386\/nWeX8sQTrChSFLUzQED3gO7D3YSQD5UPlfsb1hYuKFxQuAC62nW16+oA1SnVKbd3gWyubK4sHggmWEqG+qT6pLubYejOoTsHT4QzoWdCsycN7tR4s\/GmsbPNU93WdFvjFmP4qLGoscgwFISn8BSegBNOP9fFXSwQC8QC0Cfrk\/W7wD3GPcY9Mtx1lGyUbJRciPVD1g9ZPwSmHZh2YOoB6ODYwbGDI1joLHQWWri1\/db20gJwzXbNdpVDUlxSXNIRaKxurG4ogr7efb37PrPwkq\/SV+nr0hD9xC+yfgnO3zl\/1+GYJHkaPY2eF2BLjy09tn0FplxTrnEBqNap1rlWwpCqIVX+H8BTp5469dSpcTuFQiiE4u+vSLOl2VI81K2tW1s3Bz478tmRI2+AZ4xnTI8rIFpECxqoMlYZq4xw+OLhi4cvwCDFIMUgM2g3aDdoE0EMF8PFiIc2uQWU6cp0ZSaETwqfNHmfJEXMjZj7ghpCfEJ8wnYAG9jACFAdVR1VHQWflT4rfc\/DILtBdgNmRs1z2e6yXbl2zwZnD2cPZzvYHLA5YMs\/nmAbPEVMEZESfJn2ZVr28lzbe7J7Mp1uQMM112uu1yTQxGviS7pAk7ZJaxoO7GUvCtCatWZtERjtjHZGBWyu2ly1uVbu2xzZHNn843ylAAKYCjq5Tl4nh0uxl2IvNIBdk12T3VbI9s72PtsXBsUPih9UAGSSyX5wkbvIXRTAIQ5x8eHiqwVkKplK1hd6xvaMfXop5CblJuW2wIvxL8a\/dARMCpPClAfVVtVW1VaQ55rnetUVBhcMLhh0KnW93Cg3Flemrn932LvD3vmHEA87wz25Ghz3VdxXr33S0zFrTNaYrFeu3632q\/arXgDrxq4bu24s+G322+wXAbplumX6XBBmYRaZoPJSealCYOS9kfcCbsDA8oHlA9V7hndUdFQoo6POiibRJFpA0kgaqRicgpyCnDbB4ZbDLYd0YJpmmmZaCzq9Tq\/TQ4Q8Qh5hBYOtB1sPfg7Ov3D+hW96g+1+2\/22u+DB\/AfzHywFO+ywM8AB8wHz\/nGStLhkccnrg1vLi\/qoQOiFnq2ADTbYQIdFHRZ1OA4HPQ56HNgAyQeSDyRbgnmpeanUpSy45M8lf9acdzvyxNpgQxdDF0P3Qp3zMudlzrFC9A3sG9h3lBBWwVbB1gX2vUZPHT11dDdomNAwoTEcSCONVKheWr20ahfkjM0Zm+MDX8R\/EX\/a7aXsG3k38gp9cw5Hro9c\/6IJjqYdTcs8ASU1JTW3loF8rnyuRfDD5onJP\/qQL\/mSo1DxVsVbFX+C5ZeWX1p2DyzjLeOtRkN4XHhcWI6l\/x7VHtVulSSNU49Tj4uHXuN6jeudCrJXZK+I\/qBWqBUqFwj4MODD4T7w4t0X74ZPgut7ru+58X3Pjv2a+jX11Qjh6OXo5ej12xH7f0awU4NTg3MY+Af5Bw05BH4Zfhl+x+GT7z\/5PnnkyRkd8jrkdbgCbpVulW6VQCSRRLfaOuENpXWldeUZcNL2pG3WPQg\/GH4w\/Lx\/SLR9tH20tSS1P93+tOPx24et0q3SrZROyVK6lE7qDxr2qBZVZpAZZAZwHeQ6SBUAhwMPBx5W3hiyr\/++\/qkTJCliQMSAyK+acnJ25Ow4HwpR16OuT2kHMkeZo8zq4bYpHyr0FfoKI8xPmZ8yTwHNa5rXtHwL7Ye3H+4w8Ia2w\/4O+53ng0+yT7LP3t+BJ8un3qd+wLEfjbBSWamsEvTl+nL9KUkyp5pTHwS32kB5InSM7RjbUQ\/qteq1ndZCXGhcaNzLYOlr6WupbS17k9aCFCVFmQPBZYLLBJc60GZrs+9+BIc2Htp4qB\/kR+RHXNsFJq1Ja1z2cNX7NYzcOXLniE9gYs3Emok1UOZU5lSWAeJL8aW8GKQaqUZaBbYjbEfYRoPWqDVqfeFGw42GGx5wtfPVzt\/thoKigqKCc6BN06ZpZ0OgLlD37KqkBap9qn2uk199\/5Ena2nS0qSlv+Fm6TdfZHnN9ZrbS\/aD605ykpwkFYwLGBcwfqEQlzMvZ15+F06OOznueCF0Xt15tWoOWJutzdb719WG3w6\/HbZmntPlpstNV2qh7M2yN0uVIPaKvbLhULe4bnH9arCos6izyIfw18JfC88H6Qvpi8mfAd\/zfaszm64Me6jRwVBaWFpYcRGETugsdCBVS9VSDVhprbRW1TDvL\/P+Mu8IFEUXRReezPBs79jesb3V8zfNEeYIcyIEGYOMQf7w+dDPh2Z6Qb1nvaduAbQEtQQ1G\/hfq8\/4f0\/wfwv6+LWOOnQgV8gVFqmQtydvz\/ePaq7+9ujm+c6Of3L8k0OHedLbB98++Nco+ObZb579BijPKs8qPwbWk6yft54MNnqbIuvvYHqn6X1iJ8OoMaPG\/GErNEc3RzcBzepmdXMXmDZy2shpg8Fka7I1WUJLWEtYSwh43vG841kGC3cs3LFwB1ytvVr7XTjMSpmVMiti0WWjv9Hf6I9Dp2OdjnU6BoXGQmNhA0g6SYcO8MPvZ+X8ve6Df7WjpExRZjNZkpYMWDLgje9gkO8g30HVYEgzpBkOgTglTold0C62XWy7akiuSL6R\/B7kyi4PvOQIJEjjpFUPtzd1rf2ND1hAVf+q\/lWBIIVL4eZwUNgp7BR24LbdbXu37TBm35h9zzlDWGZYZujbnw916+zW2a1HUA6OOOJEay17OYggESQiQZJLcmkbmNVmtdnrB4IXRS2KWpzyBBM844sZX8zI+pkR\/VjU5RGkNClNSoMymzKb0uGZH1yXXZcVvDkx\/tOsT7N2zwLtNu027SignHLKH5spWkBlp7LrFA+h40PHP\/9XcM11zVUOhfAPwj8Inwe9db11fWQgIkWk+Lk47td8TTaUqcvUpXNha++tvbfsABeFi0IZKESTscnYdOpnghi\/ENy48NyF5y688wRP0W5xbnFu8349we3ebvd2u0S57IjFEYsjL02Mf\/\/T9z997wHUDqwdWNsf0KNH\/6P7rLDCCswys8z8DOy7tO9S6l\/BVmYrUyRA0ISgCUHKkA82RmyM2Dgw\/Y+fyz+XH7OFquqq6qpqkNSSWlL\/6HmBBBIIvdf1Xtf7KFjYW9hbqEFUikrpzFn34LjguKA\/DyuRPCVPyeNXyFVHHU8ywaYDpgPGAb\/iR5RTjgZOpJ1IO37deNAzwTPhqUXg4uTipGyE+93vd79\/EWiggR\/XWHrjLZZDR3NHs\/Mo2B2wO2D3X2BM+pj0McuevVWbWJtYm3g6wc3bzdvNjT9uYhOb1BA+Nnxs+EsPw42rfrqZvCe7J2tIhzUr1qxY6wtT109d\/\/KxocXjT48\/PeFGz6cNUw1TG+sLC5EhE4\/JJT2US\/webLDvPN95A3f8a4KtjdZG6ybLZ0rSStJKljdd2\/333X\/fnQMN+gZ9gwoqHCocKh3g7py7c+rmQM+knklPJ4GllaWVpQNsXbl15ZZhoM3X5ms18LzP8z7PdxXC4GpwvT+51RXa1P0Z4+683Xkpudesdw\/ZPST1c9Ar9Ip7y8HJ18nXMR\/em\/7e9PemwLIty7Ysuw1lNWU1ZXr4ePLHkz+2AE2sJlaz3xTdNLtpdtMcm92yaFm0LOoxuR6ZDKDgTsGdwmNPsAbLL8ovWoT8E4JTSRXJUK+qV9Un3Ht1WtO0pmkXYE6\/Of3mCLi9+fbm28Ngp7RTSp4DSyYvmby4vvWEvpXp0Glmp5mdZkJufW597mmIr4+vj9crjzQENgQ2+IL9SvuV9nfAYanDUofX8m28hnsN9\/rbg8NLEpYkLHnNImRr7dbabV9C6P3Q+8FV0F\/bX9tPXI4KrQitCDU\/PbcloyWjZZfCb2PKxpSNJkh4OeHlhOnWKT3Se6T3GNenW7N\/s39T9tVVOOEkXP6FbX4SNXih9ULrhba\/THCtslZZG7m+OVeZq\/wmca5ce1x7vPYclHcs71j5omOVtFpaLb1ZrxaLxWLxNmQFZwWfbBo4dNblWZdn9bh01jnEOcQ5CESMiBHT\/rHGtbtrd9fuI14XKSJFpIAh0hBpiKC1XXsiWC+3Xm69HK4lXku8lihJymRlsjIZdAW6Al0R9IruFd1rnBDtvm73dbu9UBxeHF48G9yj3KPcgyKsLvhf8L+QsM8kIkSEMMBLF1+6OKWnEIYwQ5gh5Kcz0\/t73t\/z\/qdPMMGPTpj7JTw6ee71D1\/\/cNF52Htv7709f\/jh8F3UqKUGkBwkhwd1IApEgdwN4sbGjX3N50yHLHWWOssQUNc7und0n1eEMBlMBtOZ1lQgkQB3vr7zdY0nSHpJLxX9yEcdQQQRn9ysOlF1ompajMeM6TOmz14ihG6FbsXdAWBTblNu0xPO5Z\/LP1sK7vPd53usAY2dxk5TBD1ie8Q+HQ9Xo69GXz3emiBgPvdT+X7pUOC2fXAb\/jOCDW1oI7gNbQS3oY3gNrQR3EZwG\/7j8V\/snX1YVNXe9z97ZhiG4Z0QRkAkMvJdUiQiUkMlQkQjNFNTQjMyUjRTIyPrVkRTMiI1UyIjD5kJIhIioiIqIRkakqIRIiICDsjLAPO2nz+g9K7T6Tz3c13d5zG+\/6zr2sxs9trfWb+1fu+9alLvCu5FL8G96CW4F70E96KX4F70EtyLXoJ7Ce5FL8G96CW4F70E96KX4F70EtyLXoL\/tvjri5HazrCdbs0fp1XKkCGH4pXFK4vDoHJx5eKqD+\/8OW5Z3LK1CjjQ50CfA+OBNNLENDD1NvVWbIQ+7n3cHWtf9\/3B4QeH0sL3Trk1uzW7ecF3ed\/lfVcNk+Mmx02eAw2hDaENkXQX4XAAs9Vmqy02JvZ3P+t+tr\/Doqu6Y7pjOjmIW8QtJEFFcEXwJRkYYgwxBj8o9S31LfUA7xTvFO9scKxyrHKs5A9zrH65vj19e\/qO\/fcwwb80i\/6fFue0nm0926oaXop\/KX7BdJB+Lf1a+gNsPr75+GZN56QamxqbaxWmWab+pv6mJcsy5EHyILmF49OiUTSKQ0G0EW1Em+7kMSrlCy7kXMgpP9v1sfK88rwyEpodmh3UQWefMEYYI4zRKcdku2W7ZZuhZm\/N3muZ0O9sv7P9jL0r+I\/xZ9VX\/4T45ujm6OZYyHov672sdaD\/Xv+9vhpupdxKuVVkmrXFsMWwRYDw6vDq8B0OU2VOMifZTFFUzlTOVE6YOlcTo4nRrJnw+ZXwK+E\/jYn62KTIpMjECXydfJ184yHXLdctb\/mnR1dKV0pXPp0itJxuOd3yDnxc+nHp1vt7ns\/tX8znfzive2YPFuKFeCH+X4ydQqfQCcJQYajwu86MtomK6YrpilAIXhy8OHgnqOPV8ep4UVRIFBKFBFyDXYNdk6HYpNjkzNsQYBdgFxAPukRdos4t47Pjnsc9Cy5GGZ85\/8z5Z4Ig0zHT8cCH8Pazbz+7+gKoc9W5tzZDckNyw86xKeNNVaYqk+kgUUvUEjsQQoQQIQTwxVf0AWKIIYY\/rlzwd8vw\/7NywpLtku2S7dBh32Hf4SCKV+KvxF\/xBdNtpttMt4Fqh2qHqgYcUx1THdPgesT1iJoISH4q+alPJ4JJoUmh3AMkMolMugeM9kZ7owoUMoVMIYeOto62jhaQtEhaJG1AHnnkgt5T72nwgqLSotJTUT3tfftA8JjgMcFjLgTn+eT55PmAvExeJi8bkmWwN9gbbMAhySHJYXupjfMM5xnO0x++\/Wd7cOqI1BG7H76HRbQ2ThunXQkmvia+JnbdOUZiAFBHHbUg1og1Yg0YVxtXG1dD3IW4C3HtYHLU5KjJbbgReCPwhjdcL7teVlMGTl5OXk4uYFdnV2cnQlt1W7Wms6c6TgEIp4RTQjF0Dega0DUAJDWSGkkNMJKRjASaaaYZZDKZTKaH6bHTY6cthfVN65vix0JeWF5Y3pghWa4DXAe4WsEgt0Fug9zgu87vOr\/TQnNWc1ZzsYlfV1RXVNdCDv46USVKlCCWiWViOYgbxY3ihr\/BHrxh3oZ5G\/8BUSuiVkSNhf4W\/S361YDGqDFqPEB2UXZRdgW66rvqu+pA+YDyAeUPMCx+WPyITBBcBBfhPEitpFbSrSAsFBZyDdr2t+3X7KO7ftUvs2oEPPBgAL\/m5+KKKy50Z9o3cid\/t5BCsQBqrWqt6oLhdNHpoqKDYBhlGGUwgsZP49dhAsYNxg3GJXDxuYvPXXoSbpXfKr+VjawjrSOtIw2M44zjjONAMUAxQOEOinxFvmIXKJOUScp9wGM8xuP3MMGtka2RrV5gKDeUG0rhVuit0EYrGLR60OrBCqjbVretLhCELCFLOAX6W\/pb+sMgKAWlJAQEuSCnEIxao9YoARJIoAi4yEVsemp6zAFHD0cPRyMYXA2uBhdoP9t+tr0UpFqpVtIJ1jXWNdb1oA5WBzcVQaemU9OpprtGpTs0Zjdm31Lz3xO4s8GkzaTNRAKmmaaZinro6uzq7LKHhuyG7IbMnuqyHuC623W3awpUFFQUVBwDYbowXQj7Oxg6ftmjtGjpBMlwyXCJJyhLlaXKcqhT1anq8ieVKpwUTopT0D6hfUJbGVBGmVh71wuXIcMCDNGGaMNF6B\/YP7D\/Hvhq9Fej95iD\/wr\/FWM3gc+XPl+OPgyPtz\/e\/pgUHr\/\/8fv9RsHoT0Z\/4nUEog5HHY56Cm4Pvz28JQEs4y3jreqBPezBoptYIbqH4DYQQ8VQMRRMo02jTZdCu2e7Z5vW6Dtp1aRVk06B9VDroVZOoJ+un66fQXfjd\/u7nvteF9GSNZI1kjUg+1T2qfQDEDSCRpK768OTxSeLTzY\/H9U0sGng7Rxwt3C3GKCEwB8DfwxWQEdQR5DGC8QJ4gRxT0+5pG3QFNQU1BgPQyYOmTjpv0C3TbdNHw0vbHxhY0TAt5r5P87\/cf6PRxKdhjkNc2q\/+XRzanNqc6posVC7ULvQGxpWN6y+GRL38uLZi2e\/ctAi09rD2sPGHdJfSn8pfRtcPXb1WFUCCN6Ct8ls0Bfpi\/TF0PeRvo\/0fRBMUkxS5MeGLT+jOqM64yIuV+1S7VKFpO+xLbItspu+5LAQJUQRfnUHJZRQ+7\/A8C+n6L9qXHZs2bFlx2x9XSWukn7NojikZkjNoGOiuPqz1Z\/FJovizzd\/vvnz46JY9I+ifxR9IYqFXxV+Vfi1KBaeLDxZeEIUCzYVbCrYJIrbpdulH98URRe5i7xvoyhOCpsU9tSEV51++T\/tU9qntE+Ctkttl9ouQYNtg22DLVRJq6RVUpjoOtF1ohWMLRhb8Pga8I7yjvKKcAgbkj8kf1CuKNo02zRbqUXx2rxr865aimLhrcJbJx8XxcKGwobCBlE889aZt868KYrl75S\/Uz5WFN9Qv6F+I1MUHVc6rnSwEMXBFYMrBl4RxUHDBw1\/aKB+ybC4YXFD1vz17\/svF9G6HF2O7lTTKYVKoTJz18eaeZt5K7whzD7MPuw+uF51vep6Jehd9a56F2AgA\/EDcZ+4z+gC5i7mLuY7IPbl2JdjO2Cq71TfpzfOa8iakjXl4PUPa9tS2lJa68F4ynjKeAqEMcIYYcyd07KoF\/Wi\/q6t4ixnOQtaG62N1qF+7\/iS8SXjcwSh7+y+s\/vOhik7p+wM+QQsPS09LUYCmWSSCdpt2m3a7aD2VHuql0KgZaBl4FNQ\/Vb1W9UfQt2qulV1MTBCNUI1wuVNMTAkMCQw5G+wB0tVUpVkAISGh4Y\/HWP\/VV1uXe7NQrhUeKnwUgEYvA3eBp+7nq6eemE42HnYedjOhjDHMMfQTaCfqZ+puwgfHv3w6Efrkh0a6xrr6nNBKBFKhOq7TKK\/GQWZIBNkd\/RU3SrdKu0qcLZztnO2g6bCpsKmMrg\/+v7o+6MF4Vb1rWp1FdQk1yRfTwaWs5zlIGaIGWIGMJShDAXJu5J3JWtg4e2Ftxe2gn20fbT9UuiT3Ce5T\/L6zeo96j3qPX8Dgg3+Bn\/9WdC16Fq0cbcvOmQ4ZDgUXQmJPBB5IPIguAxwGeA84C5iKqkUK+F24O3A21NBM0YzRhMIbz391tNvTev3ZOzbsW+vegIMKw0rDeVgmmCaoMjs\/mGI9f9CkpToSnTFMMRviN+QwTD9zPQz0w+D\/zn\/c\/7HuyvTz2robotj7W2QvDP3nbmr3wCll9JL6ced8sRuuOEGbg5uDm728NWur3Z9lQLuI91Hunsun9QY3hjeGA4aL42XxutvQPDmYZuHJa6DjR9u\/DDhFjyy6pFV3vP3jDFWGiuNlXB77+29LXt7DB91wBWuUAn79u\/bv28\/2A+2H2w\/EPa9su+Vfa\/V5OZr8jX5I2HypMmTQj6EGf1n9J9+HSz0FnpLwOhidDG68GuJfvLIIw\/GPTPumXFvQ+j60PXTvoH7vO\/z7jMY+izts9QxCqxzrHNsM+GFCy9cmP9yks9PST8lXXYB64vWF6186K6wpwaJQqKQKGBVv1X9VvUHlYPKQeUAtsG2wbah72UrQhWhZp3gvNd5r\/OEv8EpujC5MLmwEC4XXC64HD8nLkuWJcv6OGbZutZ1retaoc2uza41EiQ5khypA5g4mTiZqOBi9MXoH6PBNs42zrYCVqWvSl+VDjq9Tq\/T3zFkSG9Kb0oPw1bFVkXSKAitDK2cZg+miaaJpvugNag1qDUQhowcMnKIJ7TMaZnTsvKP3XxuoW6hbu8evqmT6WS6bxbTnNuce\/t7ussQ+4NRYVQYFTD71dmvzn4Fcj\/L\/ezQ5J757d17c9zAcQP9N4Q5jh0\/dvzYL3tuGnEPE7zg3IJzL\/4I0i+kX8g6PntjfMH4ggnh4FnpWen5BGg1Wo3uyq86MxIbiY3UFTTRmmjNQVAsUCxQRIHtN7bf2B4GXZ2uTld3l0gfzGA84GH9w\/qRSXA5+nL0JRVcCLgQcGEH+K\/2Xz1RAs6ezp7Oq0CIE+KEjXet8F\/u0wOTbSbb5ClkiIPEQca3QfeI7hHtz8BSltIJlFBCCchT5CnyFPjg4w8+\/mADLNEu0UbbPuNwvep61fUx6VuZwhS+ffrle99dWEyxuEwUZUqZUsiH+MPxh997Bq7UX6m\/vLVbJEtWA400ihagi9ZFa7XQd1rfaS5aqPCq8PpRAjucdjh9chjEF8QXCP39ypMskCyQLAB9lj5LXwo7K3dWJmeC32y\/2Y89D36n\/E6NMYGGRxsebRjRUzgt8vf3MWkwaZDP7lIK1UK1pBqsPrH6xCqg29LZdP7O6VzqLfWW+oBquWq5ahvE28TbxJfAmw1vNsTsmRr5kPdD3gO\/+3RfMMEEz3jh8D27B8unyqfKo5L3dMo6ZV3BEHAo4ND4WeBW4FbgugH00fpobSYwgAG4gWGfYZ8hH8YeGHtg7GRobGtsa6wCRYgiROkPeiu9laH6zmhIM6QZFoHOS+el08LZ2rO1Z5vBqtiq2NIO7CPtI+2rQPmq8lVTU+ib1DdJNRja57fPb18NMhuZjWwAyNbI1si2wdWMqxlVeyLmWtlY2VjagbxAXiAvuOvttdFGCxiqDFWGSnCb6Taz\/0xYeW3ltZXXwWyG2QxlMez5YM8HX7697sw9f8iyL7QvtM+d96x1iHWItdJxmugn+rERBp0cdHLQW3Dd\/rr9dQkY6431xjoQFIJCcIEn9z2570kPuBV1K0o9FeoT6hPq12w4Km4QN4gjwdLH0seqHGpm1sysLQPNIs2ijlUgBAlBQtDd7iy0aMHgZnAzvgXWX1t\/bXUYpo2eNnpaX\/hh1w+7zvlDq12r3e1yKE8pTyn3eq5wsmSyJGQX1BXWFdY1ghAhRAhzum3Sci+4VnKtpDoMhv047MdhItiE2YTZFsG0gmkFYbGWj3fFdsV2vVvRfO\/bonv2uvbO9s62ivq9IQEhAVMWCIJXrVetV3ZV8ZpNazat3QTWG603WieAsFRYKuTA1dSrqT9Xw6ySWSWzBsOJhBMJBfWvj5s1ataomd+a+NwceXNkbS002DfYNywCFrFIXPRvRJTsYQ\/ZPcTXw6KORR2LTaBqYNXAqqDT6fWx9bF13vDGoTcOrTrZLZKF5WD0NHoaPeCI6ogqbyG8u+LdFe\/cAMfZjrNVyvQi54HOA102CkJLY0tjS1lbIfXUC\/V\/AzVJGaeMM++EES4jXDyr4GzY2bASJdQH1gfWL3fzDtAGaAM6oVXeKm+VgZggJpAI0gxphmQ7LL+x\/Mby76BD0iHpqILnW59vfb6f9vR9MffF2EfKZ4jDxeGi57+IoPhNhIW4SlwlxoBVpVWllQYyv8r8av8b3zlX5VTlVKX5TN25fuf6HSvg56KfiyoLeyxZGSBEC9FCNIyYOWLmiPlwO\/92\/u1CmHtk7pHnu0IfdfV19XVJButo62ibveCU55TX9+\/gTXpQ9qDswcaeX7o3jNKP0o+qlkxt2te0rykL\/Gf5z3piFpBMMimAHXZiPohpYprkPNQE1QTVDoDSc6Xnzm+FrpSulK4YODTn0JxDa7r+oc3SZmlrY4IU4Ypws5ie+yTfkRxivBgvxoOyTlmnvAmKHEWOosIvZPGzi5999X1RzHPLcztSOrLmtedfe\/71UeBa51rnZg\/SMGmYVMGvFeVZwAIWgMdyj+Uey0G3TLdMtwy+H\/396NLW2auMWqNWXAY1ATUBNSvBw8LD4sGCv57gvz5kZ8jDQ0YMuiMixXAxXAzvJ6\/SVGmqNNVddR\/VfXTzJlTsq9h3eSZ01HTUdNT22KZdewwfFcC7vMsicN7ovLFvDGx4Z8M7G\/4BX1R8UZGaCA4ODg4Og0Hpr\/Q3n6Hf1ljUWNRYf2ibqlnVrGr029Hu1u7W7mLtpd6t3q3OAMVexV7Fbvh67Ndj0z8CbZA2SNvWowadBTFbzBaze9QoCQiFQqGQBTYeNh5W9hBxIOJAxA8gLhQXkn1+i2O2Y7Zq5YhXhBQhRUi+4y7MNM80zxTuYYJ\/2xhLv0+\/T5924CHBQXAQOoMv1lXWVdbvA5Wbyq2vDPr69vXt6wf9V\/Vf5RoLkeMjx0eaQLtLu0t7DQgBQoCxAkR\/0V9cBP3U\/dT9Z8JB+4P22QVw\/JXjrxw\/AzdH3hx5IxrkNnIb+UwYkjckb0guhM4Lnff0PLD3s\/ez9+129KuDQUgUEiUzwFBtqDaUQ5+EPgl9JPBDwA8BP\/hA2c6ynRfegwvxF+LPq+Ba6rXUa8XQMLthdmMmLDFbYrY0XRDarrRdabsrXjomJSYlZvc9rAc\/HPBwwEi7OxPWuenc9LmTLz3c9HDTw5sS3Q4MOzBsfyqUppSmfF8BlkMth5rZh8\/OKsgq+L7ccs1L37303YIv6Y5mDAQxX8yX7gWqqCIOrrlcc6m5AsMDhgcM9wDPWM9Yz+sgPyM\/Y3q5u0mk4RZoM7QZuus9InwGqOeo59wOByFVSJVsBCFDyBA2Q3\/3\/u7948Gtya3JrQ889MJDLzw4HUwiTSJlhaDP0GcYbFpXWYyzGGfh+2PqwKCBQYMC93xdlVqVWjUVtK9oX9Eu4X8tbPYvJ7hjaMfQjpY7E+5y7XLVqsFlrctalzmLrpofNz9ubgpqvVp\/OwxCnwt9Luy7RWu37NmyJ8ldXPPN8W+O5xTBmDFjxozJAEmzpFloBmOIMcQYAmaNZmqz2dAR0hHcEQRGo9FotIFOq06rjmQgkUQAtrGNWhB8BB8hCoyxxlhjDQilQqmwF8REMVFMgAZNg6YxGFwtXS1dxkFjbmNuo1IQntr11K4gVziWeCzx6CoYmTEyY2Qm6IJ1wfpgvAznDecNMWBMMCYYE+8ieDSjGX0vq0l\/FC9sgQUW0OHU4dRhD3Pb5rY9HwyXJl+a\/OOD3d1W7JWwf8T+ERk\/gfky82XmneAS4hLiXAY1Q2uG1mTCXNu54+fMhX7J\/Tb3CwSjhdFCnNrd+JndPepTS3fLPCcrSNiasHWTMxjzjHmGcdBX0lfSN647ZUV0gRNJJ5IKZMAEJjAD1o9aP2r9eOgf1j\/MdQwY7Ax2Bhv+Y+Oi\/3pT5W8RQQQRoL6gvqA2wFq3tW7rPgZvc29z7wPAQzwEkP5D+g\/7Phx9Kfp09OnFyWceyojJiNm3EpLykvKSBDCxMLEwuQoWaRbZFlNhxIsjVgyrgPJXy1+59BFUJlYmXk4C5zTnNOdimGAywcT\/DAjFQrHEAsKSwpKeSeqJEfu220AxrQCuPnb1sauDwbHGscYRtf+lNy+9eWn+nfBbzxrPGs+LPRJhGxBAANv5j8FfvwebPWz2cEeP2mKE9ufan2sPggWFCwoXTOoWZaK+58MOPV4bI0yJmRIzJTpn69LTS08vWcjmpMSkxKTNMCVqStSUOfB8n+f7PN8HrMZZjbP5FiY6TVRNfBlGrB3x1hAz+Lnh59tVFjAlfcr+KV+CJk4T17EIPh\/7+djP3wNNqiZVsxPSgtKC0j6FvRl7M\/amgHWsdaxVCVh6WHpY+V8PLCgrKCso46hEJpFJZD2myjZ+Dc\/VLtQu1HeCbYRthJ0PdCV3JWtL\/vf24P9vipG+b\/W+1abE\/Y+9d\/S9oxtfDik8MfnE5BPX4NzSc0vPLwVBIkgEGRinGqeK5dDPo99A5xIIMgQ9HPQlmMebBypzQbpZul2aD7FdsV2xpmARbxFvNR+k8dJ4yQKglFKhFFTjVOMcx0BGekb6fgN8teyrZV86QMzYmLExHwlCc35zfnN+j+NfDuIMcYY4A2SZskzZKtBGaCO0ASBUCVVC1R2Cl89ePnvl7nuY4CWHlxxefPrf\/7xptGm06ULYm7o3de\/CVssHxj0wbkCRRUvUiagTr74K+kp9pb7qjn76yzoxeBg8DB5g22LbYucPL6a\/mB7Rt+d0HQ8vjH1hbMTTYIw3xospdIfe3B3i03MmsK62rrb2hhkrZqyY9jN4V3tXP7Ld6R3DZsNm\/eYbq\/9v5\/\/Na9+8livcwyK6Td4m13Typ3m0v1yXdko7TbxBG64N7wqwaAkeFTwq2ACGkYaRhpFACinsukPIr2e55ZLlkpVwqv5U\/clasEy3TLf8CIr8ivyKImHFRys+WpELdUPrhtb\/Erdc3mOT\/sUvLO\/2LpnYg1m1WbXyk25vlrpkZYehzFBmcFuMMFOYKcz8nb37nx9hf7m+\/h4muN8z\/Z7p99S\/T3DXka4j2r4v7tKEaEI0ETDqwKgDXilQn1ufW78N6KSTTsAKK6zumCQVngpPhRPkHs49\/M1nYFNqU2ozFBo2N2xuSIBG90b3Rncgl1zK6I6tujtvuacV\/K2yW2WNZeB3zu+c3zQo8ynzKZu+KH7ujbk35r61eL12knZS1+Q\/fv7fXe8OK7h31SRBJaiEgX8+StukbVIJFHgVeB0fE\/62KkmV1DcJOsI7wjXhd63Y37xIIUaIEWLALsYuxi4GLrpfdL+0BUaPGz1utFfwIHOtudZcC0d2Htl5ZCeIF8WL4kV+ddz\/ih6CxYXiQiIh6JOgT576BOrkdfI6HzC6G92NETKJzkJnoQ+Cf3e850\/R5WfKz1x4\/M9\/6WZxZnGKnVBfWV9ZP9O3MrA2sDbgFNzOvp3dsgkk0ZJoSTPggw8+d74u5og54nz4yeknpyu7wPia8TWjJzx2+7HbjzV9tz3HKccpZ3ChQ54yT5lX61c\/ZeeUnU+nQfPZ5rPNRn4Ni\/31B3NKOEUmuNu72z8Q250bJbwJhSMKRxTuXZCtPKo8anZ8SyCuuOL6b6zge53gB6oeqHqg7c9fhHKJconyjIdH5vHM45lAwLyAeYFrQfuU9intMhADxUCx5J98P4QQYwBkr81ee\/Bodws6ty2wZ8OeDV9q68b4ePt4+zy2es7+5P3J+8vzkK2VrZXtBHazm0zgPOc5f9f98sknFppjmmNa\/OGB+gfqB0TDLeMt4605iR1DnYY6jTVugcEMFnpMsP+0newv1+91d+FpzWnNt\/o\/H\/d\/vf\/rzMmTauVZ8iyTTLD1t\/W3ndrzws+DECqECpFAGWXU96grrmAfax\/bZyOcPHby2MliMFeaKy0cPk\/Q1ehq9Ho43Hm487DyyC67NLs0uwQoLSwtPFfdY5rcTHder4ruNNTGHv9vEXTQQYcFBJoGmgaaQZWmSlN1RTrV2mBtsDUlR3ASnCQtIDgJTtKeUfKbUdryN9CDvV7zem3kzj9ewcYIY4QxAkQL0QIbUXTJd8l3joX5L85\/cf5BcHZwdnC2gLc\/fPvD1U\/A8jPLz7zeH9QR6oimCLCqsKqwzIbnPnvus+feh5dyX8p9KWfYi4Kv4CsEle3AHXdhOqS7pLtkJOhvOKud1X2RqhY+u\/DZV38CQ4AhQFsE5XHlceVquM\/pPqf7nMAp2SnZKRms1FZqqyKY9eKsF2c9C7bRttG2abIjeoleotcbJvy2X\/B\/k0zAxVsXb93T\/YMnXZl0ZVL2HxNsa2ZrZjsR4mPiY+ID4UXLFy3nXwLbRNtE21AIXBG4InAF9CvuV9yvA7ILswuz22D09NHTR+dBwZMFTxaMAKt1VuusauCq9qr2qrZsh85D56HzAi9bL1vvKTD87PCzw0vWl+cPzh98eHWMysHbwbvPXBAjxAjjcIicFTkr8jpYBloGWgaBX4VfhV85vLb+tfWvre+J13aAQT6DfAbpy655bPHY4rFjEIKv4Cv4\/jHB9\/wefKj5UHPOdv55b\/tGkB2SHTJ5Z1gMYYQxE+zP2Z+zvwwz3pjxxrOOYFFiUWKxDEbUj6gfMR3SktKS0nxhWsm0kmkl8N6699a9txacy5zLnMsq2lSpqlRVKuh99b76CaBv1bfqVsKjGx7d4JPy2cs5jTmNByNjLt0YfmP4jc1wo+VGS20ByFPlqfJUcN3rutd1dkBTsaZYUxyUazsta1rWtL0wa8asGbNmQKZ\/pn+m\/\/3qa1zj2u4ep4T6j\/XgNaz5XQf5e4rguY\/OfTTiq98TLFaJVWINHNIc0uRUnpW2D28f3j4UlmYvzV4yAZ5494l3J86ELx764qHU\/SeUFU0VTRV7v5+fcyznWM72RYldrV2tXfdB9fvV71e\/D4qliqWKpdNWXJJfkl+SQ5\/aPrV9SuCpwKcCAydCm6JN0TKxoqJPUZ8iBxcoCi8KP1kFh7489GXuaXAJcglyWWXYZRFgEWAZeHiu2wy3GaYW0pSfbH6yqcw0zN2j2qPaowKNncZOk2u69M3n3nzurUmOL6kj1ZHqb25a\/Kecov\/6DuBmr5u9bvl7gs2KzYrNzsLu+N3xXwwVRdFP9DPugEgxUow0PPvt6wtfX7gi\/HQamWRy5dpm7QLtAm049HPs5+i0XhTdLNws7l8K9dp6bb0RHjE+YnzEKAgduR25Hbl0d\/xeDZrpmumaUBDChXAhHJpVzapmVf5jxBDDyicKmyyaLJpsYNCpQacG5Q+9ppuvm6+LvODasqNlR0sUzF07d+2c12Hr11u\/3nZZFMUsMUtcCZ42njYj0zbr77ty35X7ti8x+SOCN3256ctNX9zDK7iwrbDtpOb316WJ0kRJPtgV2BXYqW6sUWWoMhwGu12wfdL2SdsPtGksZCHhIJaKpcaNIFfL1TJ7iFPGKdddv7ksaWnS0qRIx43m9eb15t7gGO8Y7zgUdGqdWlcL0mRpsjQJBs0aNGvQs2C8YbxhvAHaedp52nlph7cP3j54++AnMKYZ04xyCOwT2Cew6YJr687Wna3vQVZnVmeWBtRR6qim5TBSNVI1cq4gmG4z3SbPuvDgSauTVkWxn0w2SzNLM1v6N3YXSnZJdgm7\/okoCRPChAAY5TPKx6vM6a3LLZdbLiUA6aTT9y5Dho\/oYxzXbYGiE+a5z3N\/cbpq05ITS04sOSluHLZ72O7hKz8v\/Mn3J9\/KOuAiF4X5IG4Xt4sDofjz4s+L14FwUDgoHARTmanMVLZdKdkn2SfJ+FgcPmH4BM89xxqvZF7JrMwGIUfIEbLgAckDkgdPgGGWYZbBEgyZhkxDFvi0+rT6pg+5fPTC0QsFn5NgHmAeYD7wX7yAJppouIcJ\/n+GFVa4g2SOZI5kDLz5X2\/+1xv9wVPiKfHUftQ8vmN8x4RTy2xtzGzMbN4BPuVT7qe7fNIIkIyVjBXsgdOc5iQonZROShfYun3r9q0Jab5yK7mVLPu501drr9b+vKPHy2QEoUwoE0JA66x11lYCt7n930yb\/6HobU55j6O3XnQvwb3oJbgXvQT3opfgXvQS3ItegnvRS3Avwb3oJbgXvQT3opfgXvQS3Iv\/J\/wf9t4\/Lqo67f9\/nplhGIZhQEAkRERDQiRSQkIjQyIlQiRyyVUzlyUzl4xcIzI1MnPJiIyMWJfMNWKNNTNDQjMlJEQkUiMkRURE5PePAYZhmJnz\/WOm8t777nO39+79+D7snuc\/85gRz5kz57ze1\/W+rvd1va3ZJCtWrCO0FStWrAK2YsWKVcBWrFgFbMWKFauArVixYhWwFStWrAK2YsUqYCtWrFgFbMWKFauArVixCtiKFStWAVuxYsUqYCtWrFgFbMXKrx7Zr\/0CF9sttkuw5aeNlX5oTP0Ld+K64ZeSIQdbP1s\/W084EX8i\/sRsmC2fLZ+tgfwn858s+OvPf49MTabmtSVw1O6o3VFbmLB4wmLPlSBqRI04CEKsECuJAVm9rF5aA9+t+25dXcbTy640X2m+Mmf7+2q9Wq+eDAovhZdie2XCyPSR6cOboy6PNo42GmT91V4KL4VXB+gD9YH6BKgNrA2sDYC7\/O\/yv0sGbkvclrgthpamlqYWwG6N3RpFEng3eTdNOgffzftu3ncrnuxoD2gP6NC\/PLfbt9u3O8Wl1meTz6ZbPa96zQqfFT7rjNfV4drh2uEqEOPFePGGLd6EZqFZqLP8Pquh2r\/av1oPDT0NPQ15EGAIMAS4wkDRQNHAAbiUcSnjUhr0y\/pl\/W5w\/877d96\/CyalTkqdtA60q7Wrtat\/wX35bz7f+cnOT\/I+tVrgmxclSpT\/4Yp\/2cbNv3Rj51+40bOpwFRgTILOrM6sDglcKb5SfGUONOub9c3p0JHakdpugm+XfLvk245XR9oy2jKuK7e\/75DtkK06BqMdox36LmiLbYu93hhaOHph9ILBve\/0aMloyWilKOrn6efpEz5\/QX9Gf0ZfHbxXMAkmwQSSQkmhsBeUF5QXlLUgCZYES0IeXNysadY068+9fKj+UP0hiShecrrkdMk3Z2yPrkfXHe5S69jg2KCuh66mrqaupgnNHyV\/lPzxkaYXBnoGeobSQYwQIySrYCR2JNaQBsY+Yx\/pUNtX2\/ddGrQ2tza3RoMiUZGoWP8Lfqd\/1335\/3kDbquAbxaqqaYKhC3CL9o1RbdFt0X3Cjhsc9imyoZ7hu4ZmmMLS79Y+sXSw0K+vE5eJ7\/wypirPVd7rmpS5Z3rO9d3psG9Sfcm3bsKKjorOis+gZPSk9KKD2BD94buDe\/CuKJxReNWw9c1X9dU50du6ajpqOnIPv3IuNRxqeOmi2Lz+ub1Vxe1\/PFYx7GOY7WieGH1hdUXgor+djnycmST6vYNvrt9d\/sugrxX8l7JuxMaHm14tMEesj\/K\/ujNpaAr0ZUMLwf9dP10vefELaczTmdUbxFFXZOuSdc3MXVo9tDswX2gKFAU2LqCg9JBqToC4ipxlVgJ7GIXu6yPy\/8Wv\/qOHL9d8NsFjzz4z7te\/2kP0wKhQCgAoU6oE2p8nb5p+ablm8aMd1VqlVqFfPMc7RztvYXjltjvsN+hzA5OdbFxsXFxbAuetHrS6skrt3x\/ZOORjYevNZVf8r\/kf8kTFj6w8IGFr8JHf\/joDx\/NjXm6Vler+7ZlValWr9UPS+CxsMfCHpsNz415bkzqZ9CY05hzZQ0IXUKXRA2mIFOQsRIcFjssdlgOrqGuoa6z4XTL6ZbTzbDj\/I7zO87DKedTzqecYFrstNhpcZD6eOrjqb+HWemz0mdthusZ1zOuZ8BQzVCNtgYklZJKoRIcQx1DncJAG6uNHdoPKz9Y+cHj70FnSGdIuxxsM20zFbWQNpQ2lHZqga1vn2+f76Iiffab2W9mH4fac7XnakvApDApTEqYUjGlYkrlPZ4D7gPuA67qosbGxsbGGuhL7kvu2wRRsihZlOJs3pRNUzZN2dCyYzBhMGEw4V93oXNcclxyx1oFfNPi+7Hvxz7vAnnksROEICFICAVptbRaegFoppkmoI022v4fB5rHPOaB6aDpoOngmq2yQlmhbN+bzyuKFEWKgzBcP1w\/XP\/jHsPoV+pX6lfCyL6RfSP7MO\/kEQBispgsrgZDnCHOEAt20XbRdrHQvqF9Q+cmeFbxrOKPckj5OuXrlK\/h0qZLmxr8QeIh8ZBVAJlkSrabLZs4B4gnnsUgRAgRQgQYq4xVxiqwy7bLtssGJ4OTwckAmhhNjCYGBtMH0wfTQbpculy6HPDBBx9+3CxZiBVihVgQQ8QQMRRsA20DbTeAMlIZabcLVm1ctXHlC3Bx0cVFDfvAPsk+yT4ROlM6UzpTQL1SvVK9EqRLpEukS2B0cHRwdBD0Sr1SrwQxXUwX08Fd7i53V4CkTdImaQX5Ovk6+dqmyjEbxmwYs2nSLEOpodRQ+q\/f\/+Mnj5\/88pRVwDct2xZtW\/SqAZTBymD7aGia1DSpSYAjq4+sLnEHoVAoFCJBkiBJkKSARC1RS5QgZolZ4vYbfqiDwkHhIJjKTGWmsqdaR9JH0kfSs2\/pWdezrmcdvH7n63e+fhcsDFkYsjAQrgdcD7juBXKZXCaXgXGycbLRB0bVo+pRFZjOmM6YzoGuRdeiawZFg6JB0QhaX62v1heGcodyh3IsQa3NIJaJZRLLXFJwMlsYcZcluKb4LyySZVv7H9\/LkCG7wVL9o+X6x\/cSJMiBUkpRA0tYIhaAY4djh7oJarJqsmraoLOis6KzAryivKK85oFTrlOuYy6ofdW+jn6g8lZ5q7xBnahOVCeCmCfmiTvh8W8e\/+bxs3Bu57md5wph7Kaxm8Zu+i7O1t\/W39Y\/4BOTv8nf5H\/DdcmRIwchQ8gQMkC\/V79XXwiSeEm8ZBHINss2yzaBGCAGiAFAIIEEwte3fH3LN+OtUeibFmeZs8xlGaiWqZap8qDzk85POr+Hnsqeyj5\/8Cv3K\/ctgKG8obyhaBDPiedED7DdabvTdjuMTh+dPqoGqb\/UXxpssSh6TLoiXZGuCNjLXvZD3+G+w30LoPNI55HOQmh3a3frCgbBS\/CiDHDFVQgCGmgQGywWT2V50JaBNkQbMqIAWmkVW0FaKa2UF4JYJVaJS8yWUsgBqqiiDkgkkT1ABBFEgiRJkiRNBGmWNEuSBYKr4Cq4\/SRIUS7KRRkYA42BxmAwVZuqTRVABRVsADazmTQQlgvLhSQQt4hbxC1AKKEEAmWUCdGgWa5ZPpgGt0bdGjUlHG7tubVnignwx59UoIYawQMMLYYWUwv0yfvkGhlos7XZuh0ghAvhQglIX5W+amMHMrlMLtOArkfXM1yFob+yv7LfD6Rh0jBpGIx4jXiNTAa88cYbxqwes3rMaggoDSgNKIIrRVeKrqSD\/qD+oL4cxtaPrR\/bAHofvY\/ex5pG+jWE6X6yMADuuOMBklZJq+QMmKJN0aZY0Bq0Bq0ajHuNew3RMMlnks+kVdCT35PflwADXgNe\/YvBpsKmQlbXGyCRSWSSJfSaOkwdJg0YHjY8bPC3RL11FqHmAcEEC41mV10stFiSGsAPvxsCYgjLheX4gLHcWG6SAEUUsR5cCl0KXY6Aaq1qrb0rXJdcl7QqoDahNuG7Kri48eLGi3Mt0el26D7QfaDnIOjn6OeM3GlJn6lBfkx+zPYYONc41zg\/Bbc8fMvDtyTClA+mfHBbDATUBdQFKMAj2iPaYx4MRA9ED0RBT0RPRE8EsIENbAC66KIQ82b3dZbvH\/5DpA7QohWPmgcsGn6y7MY8Y54xCZRlyjJlG9jp7HR2Vy0WdD0Mew9765pNuwY8BjwGljDOodmh2aEFJlRPqJ6wGzzOeZzzaIDhxcOLh9eCUWPUGLvAVGWqMh0AtrKVbDCpTWpTIIgyUfZ\/odmqjP9r6NChAzFMDBPngLRKWiUtA+l26XZpMlBJpVjl79wV3hXedfDpk9253bk9MfMrtXKtXNs3cbkpy5RlqoHe\/N78PgUMbhrcNBgN9mX2ZaoTYFxpXCn6WyxSk\/mB5twNA4kePU7AClYQBuIF8YLpDNxSdkuZRwZo0jXpmuXw3tz35r53L3z68acfH4yG3pd6X+r7M0gXSBdIk0BXqCvU7QJpjjRHWg7Osc6xzsXgHO0c7XwAHNWOascDFkvsCv1+\/X5d5+DK7Cuzm8Ph661fb62JAO0s7ay\/d8BIx0jHyEUYeHzg8YFnwDXPNc\/1TxD7aOyjsbPgseWPLX9stuW4HdAa0hrS6gyCr+CLL7Cb3cIa8wAl7LRc76DZIrObHzdqli6RLpGmg6HV0GpoheGC4YLhAnDNdM10jfDN92nxafFR1D44LBuWDfcViNRQIxbnJph2m3abjvWskKXIUmQZQAghTAeccMLJMmXQW6PQvzpy63Prc+vBMd8x3zFfJjn91emvTne\/+LsPF3246EP36BhHiaPEYXJQnGASTEIt9OT25PaUgG6DboMuDbyKvIq81sFdsXfFhjbDXNu5thFSmFE+o3xGCthii60E2va17WsrBEOMIcYQC5LVktWSFMsDprYEwSItc7j94L3Ne5t3DBzMO5h34Byk26bbpp8yR5kFD4tHUA5jUsakOCkq5CsHVg6sumP\/75c2L21eFlkSPbFvYt\/E1u87zFdpSPrH69a6al21TqDT6XQ6LZiSTcmmNVCxuGJxxXrIWZqzNGcqKC4oLsgVMOA64Ko55lFo7DB2GN2eOtwT0RPRG\/\/kKlOUKcoU6xjcqe\/Ud+pAKBVKhWOQ\/nb62+lvQ2xSbFJsEjSlNqU2eYOYJqaJqUAxxdLlgCeeVINYKBaa9oLtftv9tnWWNFw2HN90fNMXOVAhVAgVX0Pt9NrptfHQ7dnt2e0N8n3yffJ94LTZabPTVrBR2ihtVKA8qjyqLDHkDpQOlA4U7Dyg8lX5qvyyJ7rtcdvjVvb9Tr1Kr9Ir4PNXP3\/1i9esAr5pyVudtzpvFbjsctnlssumdd+kfZP2PbBv6rFFxxYd84zto4QSUz1ErY1aGxUOGS9lvJTxPoxsHtk8kg59GX0ZvZEw0DDQMJQKop\/oRwAIR4WjQqLFRZRYotgNlpP6mF1kIRGMUcYoQxhMWDZh2YRlcCb4TPDZJHjy9JOnV70ANn02fdJc6Nzeub3Dn8EkjySPx8si7Hac2HEi59PjP3pImnmaef2zQbJFskVmAFaxStRZ9sNONEenyQTbJtsm2yboVfYqe5Wg0+q0Oi0YFUaFUQGVuyp3VZbCuxvf3fjugyAJkYSwDHRhujBdGzgUOxQ7NELL\/pb9LaUgWydbJ1sD4xTjFONMH7\/T0NPQ0yCPW6U1aU1aHehL9aX6Mnjn7Dtn33kephdNL5pRDFd3XN3RMtschJNtA\/GoeFQ8YnGtnYAWWuiwzMV1IIuQRdhEgWOMY4w6CtTR6mh1DHQHdQf1bICGgIaAC6vh0IJDCz6dCcc0xzTH40ChU+gUOnCQOcgcZMZA7wTvBO9FTs\/pNXqNXjO47JPDnxz+9HOrC33Tcvjhww8f+TuYrpmuGd8d9XA94nrEtWMhd4bdGXZn7Guh9Y31jXXb11V+mvdp3qc5IJwVzgqN8OLDLz784kMwMDgwOBBmdhGle0DwF\/wFP\/McUJxtie5iCS4Fg1AtVLMPTFqTdjQVJrtOdp20Al776LWPXnsDdn2+6\/N3G8AOO5SLYVr4tPDpuWciSy6VXCoZN+MLAJ6F7vju+I5VYKe10yobQbpOuk7WATjjLLiB2Ca2iW03RI\/\/1ZE8TogT4ix520YYiBiIGIgAY7Wx2lAOgccCjwUefOhJ9yXuS9xTefLImiNrjqws\/MY+xD7EPvQ3Xss\/Xf7p8kM4J\/Yk9vy+B55NfDYxNQmaSptKm+pAkifJk+TdECUOJphgkCRLkiVzQPQX\/U3e0Ovb69urhe7t3du7V4D7HPc57o0gD5eHy\/fAscZjjcfHgxguhosBoApRhaiC+xvuWnTXorsWeSzQL9Mv0y\/TLhNrxVqx9tfvQv\/qV2IFfRL0yR32EDwpeFLQRpj47cRvJ4xC9NjosVHvPXtqXvi88HnOr7WplWqlejZ8cvSTo58chWefffbZZ5+F8e7j3ce7gSRfki\/kW4JQihuEo0OH3hxNFnzAtMa0RtwEEw9MPDCxAzImZkzMeAjeK3mv5L0OcFzluMqpEhI2JGxIiCnR775n9z3vfTPji+st11uux8BA4UBhfym47HfZ73YUlHXKOmWPWbCmWnOUmtYb0kS\/8FU0iAbxxrRSLrnshNHdo7sNu6HHqcepRwkB0QHRAfHw5qE3D735OWR+mvnp68fh3m\/u\/ebedphzcc7FOd\/Cnpl7Zu65K2FGbFxsXGzcoQb7dPt05SbYPXn35N2TIePLjC8zvgSv7V7bvbLAlGhKNCVa5q4hN3yPGmqoAfGgeFA8aImWy2Fs0tiksUlwoelC04VmWDNrzaw1s8DUZ+oz9YGrr6uvq19XRcj2kO0h213\/pvPWeeu8tVuNxcZiYzGYWk2tplbrHPim56jnUc\/Pwy1BlRsQy8VyKkDpofRQzoGPL398+aN3py3OX5W\/Kj+29m\/00IMJ\/Ir8ivzWwpvtb7a\/9TLoZXrZqAz0bfq2kWxLlFcBoqfoySa4JfKWyHGz4fiB4weOKSD90fRH0z8GRZ4iT7ELJsgmyCbI3vHw2u2122v36uvDycPJw6tBNIkm0QDSGmmNtAa0Gq1G2wUTuiZ0TdgLb9m9Zff27SBZI1kj2QmDawbXDKaApEpSJam0uKQt\/70LfTL7ZPbJYsh9Kvepd2aCR7lH+S0X4I7f3fG7wPEwNH9ovvZpGNWN6kYHQagSqoRqi6dxQ77YFGeKM8WBy3WX6y7tUPVl1ZenHj\/5emVJZUlVXeha0Uv0ohXSO9M7X\/ozzJ09d3a4H1w\/ev3o9QOW4oe2G467kpWshDHJY5LHJMPl1sutl9sg5WzK2ZSxoFfpVSMpML56fPUtZ3qzpuVMywloGydo07XpQ8Gja0djRmMMETCqHdWOqsBQbCgeLYRPT316qvhXvBLrV+9CR7ZEttxf+vP\/\/ubON3e+0fDx4Z2\/2fmbnWfi5jnLnGXOHmBcZVxljIGnpjw1JXkKKOQKuW04DOwZ2DO4BwRPwRNXy0FMIF0mXSZZAvo8fd7oJih9tPTR4ydhaP3Q+qFp4HHU46jHUfCr9av1qz34uHGNcY1xDZvlTfImefMNFskVV9xBXaYuU1fCaPlo+agBFuxZsOfBieA14DXg1Q3zV81fFRUMkdWR1fdXgqpF1aJqAeM54znjOfMAJZbx0wIOiyUe8B3wHfCCexbfs3jOAnA57nLc5UnLApPd4PC4w+NOpy3RcgPwB\/6A3Q0\/mAHDjwtDDoNtnm2efBfccfsdt98Z8\/z7lyIvRV5+5fjaxoTGhIZYKP1D6R+OLoKwc2Hn7n4BJC2SFmkiiE6ikykL0KBBB1JnqbPUGeSJ8kR5Irz91ttvvf02tOxs2XktF\/xMfibfLOh163XrK9x\/4Hzw+eDzZaMnJsRNiJuYCJPKJ5XfmgG+j\/g+4vsZeJ\/yPjXpgZ\/SdFYLfJNy32v3vXbfR2BbYltiuw+0aq1aGzhtT21zbXPt7spDTqudVqs3q\/Z2e3V7dffAU15PeT0VDitHV46uHIbmDc0bmsNAPCIeIR4ooURSYrbo4v4fH2psi22Lbd3AqDKqDHJ4YfSF0fUPQ1V9VX2VP5hdPcgYyhjKGIo5y172svfQ9NGW0ZbRFn75Wt8wwpgDkhxJjmQ39Df1N\/Wlg7hCXEE6eC3xWjIxGqZqpmr83WGwZLBk0BcqMyszK0NB7iR3kruBPEoeJY8CsU\/sE\/v4H68Vt\/Gw8bDxAJawRNj\/4Jm0O9LueO6OojuqNlVtqqyDEEWIIkQGr\/S+0rv1L2ahytxhJHIkcqTFchwFMJnJTAajv9Hf6A8T3Se6T3SH+m312+qr4Ylbn7h15eswGjgaOKIEVbgq3KEKJkROiJzo\/XHlPS\/f8\/I9X8XPcst1y3VTgKfGU+MZAwtWL1i9IMU6B75pmbhm4poJTUL8+SXnl3yXvq\/9WtO1ppa9tY8qohRRtkGqvbf53ebnFwanXj\/1etVFePizhz9bdBkuT748+UqM2VKwDNjLXkFlji5j4Mf6YJQoUYNpumm6yQCyOFmcTRUoihXFdljyo\/tAv1u\/W78N+iL6IvoCkfTX99f3l0O\/sl\/Zr\/0nXmv6a\/pLoLent6e3BsRgMZh14BjhGOG4DE5En4guywRhljBL+C04vOTwksOdcH7n+Z11lWBUG9XGROjy6fLpWgGaek29phr6Jf2Sfgn0d\/V39XdBf0d\/R3\/HDe9\/7vPS\/tL+Y9Cr69X16pDoC\/WFI4UgOAlOghPY9tn22WpAppapZWowxZvixfgbYgk\/DBDVVFMN0h5pj7QHWva07GnJB6VWqVXq4ORfT\/715Huw5fyW86+0Q7drt2u3Ei4subDk+4iHQnPH5o7N+YsoXpx2cdqFD\/a1j1eMV4yfI8T\/2p\/vX70LXTtYO1i7+PTjsn2yfbKVd7rJkmRJ0nAYkzUmy6kCJuVNyps8HXqP9x7vH4DxyeOTPZpAu0+7bzgIDEWGImMeSPokfTSDECPEUA3iWnEtTfy4MGS0drR2tBZcGlwaXELBr8yvbGoJVKmr1KdCoCu\/K7\/LGbY5bnPcNsZG5jTqNOrUCfrz+vP6S5aBQPEzw6rJkibKAolWopX0gd5Gb6N3gMYNjRsa15uDZ6Y10PVq16tdb4Cz1lnrVAx6D72HPgaOZxzPOPYUnL5y+sqp5eD+nvt7tzwFl3Zf2n35KRgOHw4f7gHTetN60z1g52\/nb6cGU5OpydT2X1hgy3XLVXKVXAl9H\/V91BdqI+vc1rmtazHIo+XRNkfBP8s\/y38bjFk4ZuGYfLhedr2sLRnIIAP9DRbYE088zQMley1LOhOBfPJpgSvLryy\/shwe0D6gfcAAnuM8x3mOgWc1z2qe9QbdbN3sYV\/4NPDTwE8LH3bb37G\/40DS6cebaOLyQPB+qwW+Sbn9wO0Hbs8LfmDy7MmzJ3sKgkuDS4NL25JbRlePrh5N6K8+nn48\/YtQePjQw4cWXoc7HO9wDHgddt63875cAZR7lXttnWDChgkbPEvAeMR4xOT+U1WNsEHYIGwC1rKWJNDEamIHUiDu2bhn486CV6pXqtc60MRp4jRd0J7UntQRtvtDxyTHJOck1zA3g5vB\/Qy4ZLtkuy0Hlx0uO9yWg8sZlzNj8+AWt1vcPHtAnapOddKBtEvaZRMPtjm2ObbxYCw1lhpTwWGrw1aHzaBwV7grXMG037Tf1GF2bUkCwSSYBBnYVNtUy4NB1avqVRng9ujbo6dlw8KZC2fGjIenb3v6tjUDMBw5HKnLAk2rplUDjK4YXWFYb1kLroJR31Hf0VDQBemCdAny0o6ijqIOn90fDhUNFQ3VwMQ5E+dMrIOF7y58N\/Ze6D\/af1SzByimWDgGdNBBlyUtthzEveJe0QRkkUUDTFgxYcWE\/SBfJF9kWwKZEzMnZtrAbRNvm3jbp\/D4xMcnPn4etLXaWm0ZTNk3Zd+UPU21yt3K3cqd45+Wl8pLbcqCH7CmkW5yxEKxUCwE42bjZsNWsG20bbRt+FubalA1qMp0mqnYp9inCBEE+\/X269Vdj9jKo+RRdrvb5p0uPl1ctQ0emPvA3AdehHseu+exOX8EXZmuTHcE1JHqSHUEiF6il+hmjkYL6TBUNlQ2UARj48bGuayEF7968asXPwJpsDRYWg0ajUbT7+2YXraqbNUxn9a7h2cPzx5ss0\/xedHnRe+Z4POiz4veD4I+TB82rIFKVaWqfB18vfzr5dURwCCDQjgoTAqTosM8gLAV8xrlrv\/nnf6PnSo88cTJUnW1H4YMQ4ahKAiICYgJOAjPnX3ubOprEBIXEheSASEhISFBPXD\/G\/e\/EXEaxq8fv95dZ59y5diVY5eXjNw74Dbg1lfomI4Jk+gFLx5\/8fjmW2EsY3GXw1DPUM9QlTltJGYBChToQBYiC6EEHCscK1RyKJ5VPKvobxB0Pej69AWwcHjhcMxnUOdW51bXA5OSJiX5yEe8pximGG6bfs\/CkLUha0M2C8KkoElBkxon3S6RSCQSeWu2aa1prbjWmge++aN0CFAFI9tGtukXgdRT6iltg9vO3Xbuth6ISYlJiZHBxm82fvPCy4X6nJdzXn7rznm2LgddDrq6DcQMFg0WDZZAUElQyYwScC90LxxXCENuQ25DrhYXL9+SzywDIUlIkmyCDrcOt45EmHhs4rGJZbDv7n1377sd1JvVm9Xboe9c37n+MJuMsqCyoBPnBt9ondA64frHp5eG1oXWzUqw9ZdIJBJpBvSu713fJwG7FXYr7DaD2Cq2inX8VHj87yKQQCEQJOGScCEENLM1szVBIK4UV4o7YPrt02+fccXWv3GgceDyzNNLjzQfaf48bvCN9pj2mPbtoIpURTrsgI9e+OiFfW+Dd6t3q\/d26Njcsbkj2LIAxtXyvQ2WYgM5jNs9brd7ExyqPFR5SA1\/Lv1z6Z8loFitWK0ogojaiNqIwIYNSx5Z8siStwQhSB2knpGguCL2iX3iufKDA8oB5YACjE3GJmMtDO8d3jt8FLT+Wv+h1b9+Af\/q58BinVgnUYH\/oP9ggCcYs4xZxiwQN4ubxc3QUtdS19oMvaW9pf33QOvp1tOtL\/2+u6WmpaYl0qHCOc45zjkawm8Nv3Xu62AfZh9mHwZ9+X35fZtAskuyS7ILiCIKP4uQq0FikpgkbjBQOVA5cAxM2aZsUwYUrypeVbwMPr7n43s+ngEb7t5w94b74ED5gfIDlcH5JW0lbSX9Opwfc37M+ZEqL3WAOsBh+rxx0kJpoSy7v5pggllsyTsXA2mkEfkLfoh\/bOb3Q5WQq9HV6Aq2BluDrc6cZ52wXbL7m03fbDqbusq9alHVoqoXU2bmK\/OV74dOcZY0SZqEWBjUDGoG2+Dlr17+6uWTEP9k\/JPxj0HjxsaNl6tBX6OvMe4BSZ2kThJ3Qx5egQJvS5GFO7TFt8W3rYUHjzx4JGYlfDX81XBFBpxce3LtyRSoz6rPqt\/hnu2y1GWpy7OBq1XTVdOVjedyAjIDMqcWgqRWUivNt+TPmyG2NbZ1gc5c581sq4Bv\/jnw27e\/Pe0VywMkAzrp5ArwBE+wFIRMIVPIBKW\/0l\/5zdTVtQm1Cec6kt\/pXtS9qNsDAtsC2wLLYfZnsz+blW2J\/uaC5JzknOQc5qqiJEteOA3EBrFB0ABttEkPAh54UAZSlVQldYLL2ZezrxyFoN1Bu4NLLd0jg6AiuiK6QgEvZ7+c\/XI+nD94\/uD5gyHN7g3uDe6ufegydZl6DYiLxEWmI9ok9QX1BbXz4XlShVQh83\/jdclyyXKJc3OgSWVSmbyv5Bk0Bo2hD0aTR5NHk0F+QH5AfsBtkdAoNApN42v65vfN7wtb+nZ3eXd5954HZh\/58MiHh0f81euH1g+tfwhUR1RH7DNhaMPQhiEZTAicEOg9CBsf2\/jYxt\/C7NbZrbOfhOby5vKr5XC58HLhlSKQbpBukCWZg1xiK4hNYhOtgBtuuIHgLrgL4ZirtTRg2GPYY9gLdnV2dXb5sKBgQcGCvXBm3Zl1Z9aAJkeTo4lTaa42Xm1s2fJsxvj48fGeUY8ywABDmyxzZqcbgmEAocB0pv\/Yi2ujNQ9805JwJeHKoqs\/n89UBCgCFAHQXtBe0F7wyP6LERcjLkbsfcigM+gMWoiMi4y7Tw0xT8U8FSuAYdAwaNSA2lPtqa4Eh2SHZIdksAuzC7MLA5tjNsdsjoEqVBWqCoW+sL6wvjDQRGoiNfNA5iZzs5mDeS11LqBGbQoHY64x17gEXApcClxqQOWucle5Qc22mm01WfD58OfDn1+DUyWnSk4dgJaYlpiWWDAtNy03rgBhs7BZkg7yVfJV8jUg08l0MgUIeUKekAuaVE3qQJq5HawpHljHOtaBTYtNi00LeDZ4Nng2wF0+d\/nc5QP3291vd78tBKUGpc7wg8G2wTZtJnQv6V7SswSkq6SrpM782IqH2cxmtiVq3QQ2e2322uSD3TG7Y3bHQL5VvlW+FWSlslJZm+V1KxhlRtmoH+iD9cF6Cdjk2+TbVMDzzz\/\/\/PPPw9Hco7mfx4O3wlsxeS8kfJnw5eJLd0kdNjtsVk2vMun36ffp9\/38\/f1j7R9r\/3jQKuCblrlvzH0j\/A\/\/jyDAesl6YS0YzxjPmFqezWpf0b6ifde2Z3RRuihdlKW8TwPSRmmjtMDSUcITSCaZVNDs0OzQ5IB+l36Xfg8olAqlQg7Xa67XtGngD6v+sGq1Kzx3\/rnzz52C5trm2qtpmAv2V5kfNDHEHJyi3pymEpab57q0guguuhs7gEQSJVEWYeeDWqVWqS+Yv4eQDDqFTqELNWd3hlNhVDWq0k+3XKQP2AzaDMoHzR6sAksVjxbYwQ4xBzSDmkGNxizUwQ7M3SR3gtAmtAlVIHgIHkINiPvF\/XiCsExYJoSAOCgOilqwD7EPsV9prt7q00Lm7zN\/v+0ZaHRvdL8cCQZ3g7vBE4aChoKGIkCn0ql0GpBPlk+2WQQSpUQp0cKA94D3QCA4+zr7OvuAY5tjm2MB9Pn3+feXwfSA6QEzAjf+zjnSOdK5Z8tu\/Xb9dn32zwv4g\/YP2j9otwr4pmXp75f+fsnnP3+DxS6xS6yFEc2IZiQMljyy5JGl10B9Rn1GfRCOP3\/8+dLj8P2c7+fUFUB9ZH1kfTQ0lDWUNUjg4UUPL3o4FoyJxkRjlEPGV7u+2vVVbdbf7UvtS+2PJVWbIk2RJi28eterd712EaYaphr89dAj6ZF0F5qj1yhvyAP\/sMDhhzriHxrSa9CgxdyEzhdzM75mfipu+KGoQo4ciSVYpLnhepUof2xsb\/gpjyusElYJq\/hJ2ZbjiRVihVhhOd9koIEGmoELXKABhEXCImERsJrVrAK3OW5zxuXAls+2fLb5MzgUcSiiaA+MixoXNS530Hk4fDh82C\/zIfsD9gfsj\/Rs9iv2K\/ZrhK+Tvk76OvKAu95N76Z36stcOXPlzJV3wZXeK71XegfSTspOyipKYMbsGbPvvGBuHSRbDWMMYwxOe2B0z+ie0YKfv785r+e8nvO6NQr968XP3NxGCBfCJXNgyHPIc8gb+nf17+rPh+Gg4SBtKBjiDfHGOBhxH3EfcQeDyqAy7ACjj9HHGA+hY0LHzBo3kPYb39\/4JmQV\/IVjHCMHujy6PLpUsP\/k\/pP7h0CeJE+yOWoWmhBv6QK5C0wNpgZTIMjmyebJcsBtu9t2t2YYGzM2fux2sFluE27TBGM2j0l0dgfZalmKLB9MlaZK0xkgnHA8La6sD6BHLywzu+jCCsAXXyEVc2eMM5ZeW57gpHRSOi0D9xXuK9wPgruzu7N7EqjSVemqc5YumqUgbhe3i40g7BH2CD1m191UCE5ZTlljGqDuQN2BOgVUplamntoLTruddjtmglQmlUl1p\/aPjR4bPXbZS7uUycpkZepbnsYQY4gx6C1Pm1KbUpvSqzJBKSgF5UDawIMDDw48OJA27DTsNOyEuUyzCvT5+nx9PgjxQjzxP82p\/6\/z62+p83P1sj8TlRV2CDuEbHPDdmEL9Hb3dvfeAy2zW2a39ECUR5RH1D64d9q908LvBWO0MdoY\/VP\/44l3Trxz4v3Hg3rm9Mzpznjj28Oth1sPn3kmoLSrtOuLJjjz5JknFz4Isctily2oh\/L68vqvaqDKt8r3VBN8+cqXr5QNwbcrv135rQBDtUMHhp4A+Wy5v2wlDPx1cPfgVEgRnx595g5I3pa8bc3TcCX4SnBzI4w2jTbpPc29pogDDnAAORi2GbYZDoLPPJ95PqVwIulE0gkfiNsYt3HBQtA+qH1w+CtwGHUYdbgE7q3ure4nYEbPjJ4ZPTDzrzP\/OvOvcIfuDt0dcvDa7LXZazO4primuOogd2Puxrdfg\/b69vrrgzDeebzz+DQIrgquCl6We9010jXSNQKM84zzjJFg0Bl0hjq4Vnqt9Fop6A\/oD+gP3lAG+HNrsH\/u9Zfed6sLfXNxn+N9jhFP\/4y\/YTLXl4p1oKvT1ekCIHZc7LiFZ2Fu2dyy8OkQPC94XnA8yFQylSzsl5+3NaU15drK9\/4YZR9lP\/\/6iswR+Yh8ZLo5vaI\/A\/3l\/eX95WCrslXZqsCUZcoyZYEiXhGviIfbam+rva0Wov8c\/Zfox+Ha0msPtj4D+ep89w+OgsJTMdm2EHrDe8N7ZJA+kN750gL47f7f7vptMFzIvlD4\/X5wjXWNcU0BbYO2QdsAj596\/NTjp+C6+rr6uhokGyQbJBtg5uDMwZmDMFk9WT1ZBScKThSc2Gu+jtYUMLYYW4wtIGgEjaCBkaqRqpEqsFtrt9ZuLbgUuxS7FMOIekQ9orZ4ENur6yfsmLBjwo6ZU3X1unpd\/Q1Tgi1sYQtI66X10noY0gxphvrAz9fP188XWvxb\/Fv8oSa0JrSmA+5surMpeDMo9ij22O0FpxKnEqflMJo5mjm6\/f+uC\/2rF\/C\/BcM\/669IzlRXV1efzj7z8kN\/euhPcS\/evk\/qLfWWJsC4lnEt4y7A\/Nb5rfM7YLrDdIfpDuDh6+Hr4QujsaOxo7Hmdqx9EtD56Hx0RaBap1qnVoDrGdczrtsgZzRnNOdWOOR\/SP7pNrCNUzjJs8BUZZIZN8Nb17OH3r4IJ0ZPjD3xJezq2NW1qw3ULeoWdas5TaQqgT9d\/NPFP50ClxqXGpdqaK9or2ivAlWHqkPVAWqtWqvWgugj+oiT4brzdefrznA+7Xza+TQ4+\/TZp88+A9\/N\/m72dyEgZogZpmxzlRP6kayFOQtzFubEnPcUPAVP4Wie1k3rpnXjP1U1CfVCvVAPowmjCaMJIN8v3y\/fD0KD0CAUQd\/CvoX9s8D+Gftn7KWgNClNymowNBuajS0\/L+B1inWKda1WAd+0rJ24dmLKAv7lrVX+u89NHiYPUxwo0hRpiuVQ2VTZVLn341cuHLlw5PuIuPVjiscUu+RA2vi08c\/PgvGTx08eXwb9c\/rn9Ieb56j4WIJFDfzYmBwffIQgoIUWMROMYcYwYzCoG9QNahMonZVu9sGQ9WrWU1lToTqsOuy0OzikOGQq14Eh2bDKeMwyl6yGJ0afGH3iW7i39N7Sew3QtLVpa3OueecH6TLz3FJsMwfRBCdzdFwcxNw\/+oeglg+Yyk3lpnJwTXVNHbsOrjVea7w2B7Ys3LJw850w4jPiMxwPDn4OfurUw26eCZ4JnvOiOg0qg8qg5sfqo\/\/t+1LyXMlzR96wzoFvWsY9OO5B94X8tJDjxhts+Pd9bp9kn6R6Fa6+cPWF5vyXp1zTXdNduxC3Xi\/RS\/S1cJ\/3fd736cH3Sd8nfQPg2vJry68FWVzSQeAYxziGuVeUh+XYNeZos5j30+mku6S7pCUw5D7kPuQOpm2mJJMPPLr40cXL\/gYtrS2mZin0xPXEdEda6oY1YJ9on2ifBON\/M\/43438HXbVdtV1yy9YmlUAbbWKhOehFqeX9ActJj1oGFCzR7UpzNFgSAN0+3T5dPTB5cPLgZAPcl3Vf1n2robC0sPRDT7DpsemRe87vuOh60bWhbM4XNi02LTbuZZHienG9KfqfDK3+Tz5\/juesQaybGKctTluc9\/7vjfQynUwn04EkThInVLpOPvXdqe9Ovbq+ui+6L7r3IPgG+QbdFgERQoQQ8SH0ruld07fG3JlCkgVisVgsFgPOOOP8Cy4onHAW\/xR1dix0LFTnQsHTBU9\/cDdcHbw62JwDjmcczzjuA3ayk0BoC2oLaguGoq1FW4sSYXXL6pbV7TAUNRQ1vMI8kEgCzGki8QD8bAjoh+1aj3CEIyCRS+QSGfTu6N3Rkw33pdyXEvkYfB3\/dXx1FjToGnQNPnBr3a11Ppv2PvBw58OdDz\/qHyeZJZklyew7YNAYNAbN\/54FBuA1q4BvWl6f9PqkzNP\/\/uOKy8Rl4jKQucpcZU7A3\/m78NBvfU0dpg5js0Rt42bjJneF+fbz7eevhHHKcUr3FGhLa0trSwMhVAgVqvlx0zOaaKLpv4ie\/pAuOcMZakD0Fr3FKHBNck1yXQFfq75WVc+BE3kn8sqyQVYjq5G1wdQzU89MdcpbQjDBDEL1vOp51fOSCsq15dpyHYQmhiaGroCAfQH7AjOhZ1HPop5QoJFG5gCVVFLJT0UT\/ygQX3zxtZQB7gVtuDZ8eCWM9xjvcctkiEqOSo7Kgdy\/5f4td9Dco6tHfYs+ryiv6C8LHn2Ai1zk7FsY9Aa9Qf\/T7o\/\/bgGnkvqrNsG\/egGveHDFgyv+9O+3wJLfSX4nTQFJpCRSCA9N3V+7v\/bjmuxXG3Ibci9Gw8yCmQVB8RD2ctjLd78FXTFdMZ1xINkv2S8pAHGJuERcZhGI7j+4ff+x7G8DG0gBoUQokWhANkc2R+IDhlhDrCEBit8rfq\/4LzB0bOjY4FYYlzYuzT0PgmcFzwqeueVd\/TP6Z\/R\/GMi\/UH6h\/ELlYueukq6SrlxVz6FHDj1yKBn8y\/zLAsosSxtLwRRlijLNMbfFNWkxb1my9b9P10jqJHWSJugwdZg6lHB38d3Fs38PJ1edXHXyQzgdejr09FqYUjmlcsq57M\/iF8QviH\/o9HPiZnGzuLVym\/GE8YTx1P+SBbYK+OZFkaxIlsv+fQ+EsERYwjJQH1QfVEdJ4g5fOXzlyBevPXq19Gpp03FzuaDDAXhw7oNzF\/aCPF2ebpcJmv2a\/UPpwDKW4WSxqOcw79XkfsPrPz54K1hBFZhkJplhK4xVjlWO7YEv4r6IOyaF7+Z+N\/e7PebGA\/ZzYKJkomTivPQ\/Dn0\/9L12wpWsprSmtCZfcPFw8XA1ZD+vT9Yn6yevp3Zt7draVDjx6IlHT8yCiNSI1PsOQMfBjoPt1SCUCWVC2S8JuFtiAhVUiMvB6GZ0E4tBniZPs0uAmISYhFgJfG\/\/vf33ntC8tXlr8wo4HXw6+HTma4\/OV89Xz\/e+94Jmi2aLJtd0QMwXzeWZ\/04B91gFfNOSP5I\/8sH9\/74HQvKh5EOJCCOqEdWIo1+Qfp5+3sj+sABTvaneuA3u7ri7425nCDofdD7oRWgvai9q227Zl3iypQ5W9l8I9h+F+8M7PXr6QBGliLJdDT26Hl1PD3z22GePfbYURkJHQkdmg7fGW+NtGKgPeSTkkZlO70hMD5geEH3A73G\/x29LgmniNNH\/tjdHi\/OL8w9NWbHsUsOlhsYkj\/zPpn429bNpMF02XTbjLCgSFAmKBBhZObJyZCU\/dbX8OW7cvlQFQovQIpyDLnmXvKsaZmTPyJ6RAGHfh31\/zx3wecXnFYcr4Nusb7O+XRwWcLb5bPO5nsmVhumG6YboBnid13nv35iFeH7t83+0WuCbF595PvOmLP\/XBSymiWlimnlDbmW0bO+lkkslDWkffn219WrrlSZwTXNNc10NDyx8YGHUKGjLteVD31qit3VgzDRmGtNgzJoxa8Ykg2K2YrbCGUYWjyweyYbelb0re1daLO4KEI4Jx4RSELeKW8VMcO1z7XMNhvf\/9v7f3v8zNLQ0tDQsBtd613rXc3Br1q1Zt25Pvavrna53ujUdGl2KLkXXAH1RfVF9zSB5WvK0sLoj022e27xxioym3pjemL7MbBrSG9IbtsLnnZ93fu4Ey3Yu27m0AK6FXwu\/Nv2GtdK55LLX3P1STIYxJWNKxhy0bMO6AnSpulRdAfRW91b3NpnLBiUe5k4c2giIiomKiXoOvjn9zemaSGgvbC9s18Gs+Fnxd8\/59v25S+cunfuMs03fe33v9W0cDieHHHKsLvR\/x68+D\/x89\/Pdzx3ipwbiP3Bjf+Nf8LnDBw4fOHwA3z393dO1TyVeKN9Xvu+rA3+5qIvSRek2SKKXli0tW3oOfnPoN4d+85ale+MxcO5w7nAehCPKI8ojSnjX8V3Hdx3hWvO15mtrYVLXpC7vZfCne\/90b8a94ODp4OngCYPqQfWgGhz8HfwdvKElqCWoZQW8Num1Sa\/dY+4x1X8QfGQ+Mh\/ZubZpy6Ytm7bsjlv6Pfs9+3UgPyI\/IteDz3mf874nQOYt87ZZDmOcxzg7ucNn3332XcnftdPKastqj++0qx1XNq7MzQmeO\/TcoTRb8Aj3CPd0h4HQgdCBYLAftB9UesFQ8lDyQBw89\/1z36fdDZc1lzVN6eDZ7Nk8Ph4SryZeTbwK89Xz1fNV0JPck9ydBI6rHVc75cLf3\/v7e38\/Dvkp+Sn5K8Bu0G7QrsxUfM+ye5bds+jxKQFzA+ZOm7\/Ld+DhgYcHH\/7XBfzKO6+886dvrAK+aZn+5fQvAz\/+F36gGCGGKHOdq9gCw17DXsMB3y\/VVemqdDW++V4KL4WXHHa8seONHW9Ai65F16KD1w+9fuj1Q1DXWtd6vgPkznJnGzWMeo566kvBuci5yEUHgx6DHkOzYYpuis6nD9Z3ru9c3wnaddp12nXgMsdljssc2HFox6Edh+Bo49HGo43g3ODc4HwBxseOjx0fN32iXC\/Xy\/Vnm0W9qBfbwOhh9DCGQce8jnmd8WB0N7obwyyNCGpAtkG2QZbo4z68d3ivdufF6z1berZ06yDCKcLpvmBYc3zN8ZQ\/QKe+U9+lBdVk1WS79bDVbqvdK3ZwQX9BfzEeVAmqBFUMsJ\/97MNcSB8GHdUd1R2VEFAfUB9QD8\/e9+x9z95n+b4xkPxe8nvJf4Xm7c3bm7eDokBRoCi4sEzRomhR1N72gWASTILeHA0X\/4XG7GeHzw7X2lld6JuWWZpZmtlZ\/wPXy1KlpDygPKDcD9\/1fdf3XdHW9gtpF9K+X+7r5hThFOEUAePk4+Tj5LD0zNIzS3fCgHxAPpgH7ePbx7eXwu1pt6fdfgDeX\/r+0vcnwdQdU3f4z4CPCz8u\/NgLHv39o79fqoCzpWdLh0rh\/Y73O96Xw4bQDaEbQqHIr8ivyA9Ozj85\/+R8GFM6pnRMKSj8FH6KgIfust9sv9k+\/WyzMc2YZkyzNHI\/Ard63up5qxIeO\/XYqcfaYTR4NNgwDsS3xLdMCeB4yfGS47eNoQdfPPjiwYdOhh\/tOtr1ecGs0pMrTq442QF39d\/VH3oBYjpiOmIOwJbDWw5vuRvOac5pvk0G+y77LvsCCIoNir0za8W4zqzOrM7Ev3YMuA+4a1pmBLg0uDS4dBU6XFlzZc2VTT4VT\/z+id8\/8QQ4ejt6O3rC1BemvjB1I\/TL+mX9chgKGQoZ8vTNH584PnH8zq1Z03Kn5U6TrR+nzdRmDvsC9dSL9VYX+v+cgJ2ynbLHeP3zN16+Wr5anmQpJF911\/YrVVeqrkQ+72YbYBtgqwHpSulKaRJ80\/dN3zd6S0F9Gzx9+OnDKbcM1j330nMvpU1VHAFg6jv7iCWW2DVfAbAYvAu9CycugdvKbyu\/Tcy9vyOkI6Q95okjR6uOVh09B1M2Ttk45QU473Le5bwLmCaZJpkmgT5CH6GPuBjUm9+b35t\/4JuOpI6kjkQQO8QOseunKqo6fZ2+zgRloWWhZWEgf0L+hPwhME01TTWNBfF78XvxlOmAsFXYKuyZjUOpQ6l6emvGUOtQ69DiW9Kq766++\/TdMBQxFDEYCUfvP3r\/53Fg62frZ6sE\/xr\/Gv+sXYrJsZNjJx3964g6TB3msAj6N\/dv7i\/8praxqLGosWAKk\/Mm503ej+Af5R\/lryoUDmsPaw\/7\/Mb0dfnX5V9Xg9Nip8VOi8A20DZQfg6uBFwJaF7\/vJt\/iX9JgO6T7e5L3Zfe8vdTKfoCfYF+8f9QwB\/\/ep\/vX70L7b3Qe6H3w\/\/8\/xPXievENJDmSHOkDflv6TP1mSMlS5OJIsoUC06hTqFjjlZ5TQufFj6t6sk746bETYn7sObAb0N+G7LU54YDZZBBMbCd7aIeWM5yNgPb2CbU\/PBHYRkPfP7A5\/MPn3iuuqy6rLoYnFOcU5w3WDqBdIBxt3G3cQV4JXolei1+4RGPao9qj8athSMFIwUj+TfcUL2gF7RgmmOaY4qEgbqBugEs7yNAMAgG4Yad7OVB8iB5ELQ3tTe1N6VM747uju6OfuMb2y22W2y3gKHJ0GToAn2VvmpkC0zYPmG7V8alnNCjoUdDG\/1fG\/Ab8Bvw0TdJvaReUj+wrbCtsM2CE94nvE8EWDqYrIPYy7GXYz+DlltabmmZaGm5szso7gvDF4Yvwt75us+9z703J6SZCiqEUpCmSlPlUR\/sMC03LTd6LHuKAgrY88\/fx6v3Xb3v6r1WAd+03H357st3X\/vn\/580UBoonQ6dZzrPdLbCgs0LNi8IkRfNuXvO3fdc1sdsF7eLb0wCeYY8wyYb4h+If+DhTyEpJyln5bYbDuSPP0pzo3VDBwgJQoLgBWK+mC9uBkmgJFCWDL3aXm1v5IzJcz+b+9m9809f0TRoGjR6qUG2SbZJ6gkuvi6+Yz2aGm5Puj3pjoJJU0YiRyJHzgFb2Spm\/nQ64xHjEWMz2DTaNMp3QMD1gOtTvwT5BfkF+Q4wHjUeNbbc4IJpZBqZ5oegnVNcwZsFbxa8de6Zdud253b1hDm2cbZxco250YBtxLB3qCJUMcvtlj\/ZJNsky1r7lxiaDc3GLhDWCGtIBjsfOx\/lBvhy3ZfrSl3Btsy2zGYyLPxy4ZcLBWgQGoSGMTAaOho6GgLXiq4VtayHlAkpE54RoWxs2djyP8qLDhYfLD5o0se4erp6ukosvbaa\/\/n7WPFJxScVH1ld6JuXUkop\/R9Y4DqxTqyz1MtmwMDqgdUDc\/QxPTN6ZvRMAL7kSxyBaqqFamDjz\/Q+1KNHj7nn1QXLsZtAUAtq4chPf1YkL5J\/uuibRs\/pntM9b7u7sT6hPuF8eCXGcGO4yQfu3HPnnju3vNQ\/1m6s3dg80C3QLdAFWlzHNTecL4AAXIF5zKMVOvd27u0cAiYykZmYdxtc8J9dTbs\/2\/3ZbmffgaC1QWuDUjZtKF5UvKh40XvoE\/WJowdgpmSm5C63iAcdnB2c7Zf0LxnxG\/HTxYHNMptlUlfLcTaZ2\/aO7oM7VXeqZrhDV09XT5cH6Jx0Tro84CAHqTFvhC5UA954CwHQ81TPU72TYGB4YHjgQX2MECgECgmYO4is4KelnVb+b1lgK1Z+zVh7YlmxYhWwFStWrAK2YsWKVcBWrFgFbMWKFauArVixYhWwFStWrAK2YsUqYCtWrFgFbMWKFauArVixCtiKFStWAVuxYsUqYCtWrPwy\/r8BAGFwmBPzd92GAAAAAElFTkSuQmCC&quot;,&quot;nombre&quot;:&quot;CertCreador1&quot;}</stringProp>
            <boolProp name="JSONVALIDATION">true</boolProp>
            <boolProp name="EXPECT_NULL">false</boolProp>
            <boolProp name="INVERT">false</boolProp>
            <boolProp name="ISREGEX">false</boolProp>
          </JSONPathAssertion>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Summary Report" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Prueba3Flujo3" enabled="true">
        <stringProp name="TestPlan.comments">request dashboard</stringProp>
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">100</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">50</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration"></stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">false</boolProp>
      </ThreadGroup>
      <hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="request dashboard" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance GET" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename">C:\Users\mathi\Desktop\eParticpation_G18\documentacion\recursos JMeter\Prueba1_f3.xml</stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get iniciativas" enabled="true">
          <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
            <collectionProp name="Arguments.arguments">
              <elementProp name="" elementType="HTTPArgument">
                <boolProp name="HTTPArgument.always_encode">false</boolProp>
                <stringProp name="Argument.value">&#xd;
</stringProp>
                <stringProp name="Argument.metadata">=</stringProp>
              </elementProp>
            </collectionProp>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/iniciativa/listar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance get" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
        <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get procesos" enabled="true">
          <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
            <collectionProp name="Arguments.arguments"/>
          </elementProp>
          <stringProp name="HTTPSampler.domain"></stringProp>
          <stringProp name="HTTPSampler.port"></stringProp>
          <stringProp name="HTTPSampler.protocol"></stringProp>
          <stringProp name="HTTPSampler.contentEncoding"></stringProp>
          <stringProp name="HTTPSampler.path">http://localhost:8080/backend-web/eParticipation/proceso/listar</stringProp>
          <stringProp name="HTTPSampler.method">GET</stringProp>
          <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
          <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
          <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
          <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
          <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
          <stringProp name="HTTPSampler.connect_timeout"></stringProp>
          <stringProp name="HTTPSampler.response_timeout"></stringProp>
        </HTTPSamplerProxy>
        <hashTree>
          <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
            <collectionProp name="HeaderManager.headers">
              <elementProp name="" elementType="Header">
                <stringProp name="Header.name">Content-type</stringProp>
                <stringProp name="Header.value">application/json</stringProp>
              </elementProp>
            </collectionProp>
          </HeaderManager>
          <hashTree/>
          <ResultCollector guiclass="SummaryReport" testclass="ResultCollector" testname="Perfomance get" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
          </ResultCollector>
          <hashTree/>
          <ResultCollector guiclass="GraphVisualizer" testclass="ResultCollector" testname="Resultados de carga" enabled="true">
            <boolProp name="ResultCollector.error_logging">false</boolProp>
            <objProp>
              <name>saveConfig</name>
              <value class="SampleSaveConfiguration">
                <time>true</time>
                <latency>true</latency>
                <timestamp>true</timestamp>
                <success>true</success>
                <label>true</label>
                <code>true</code>
                <message>true</message>
                <threadName>true</threadName>
                <dataType>true</dataType>
                <encoding>false</encoding>
                <assertions>true</assertions>
                <subresults>true</subresults>
                <responseData>false</responseData>
                <samplerData>false</samplerData>
                <xml>false</xml>
                <fieldNames>true</fieldNames>
                <responseHeaders>false</responseHeaders>
                <requestHeaders>false</requestHeaders>
                <responseDataOnError>false</responseDataOnError>
                <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
                <assertionsResultsToSave>0</assertionsResultsToSave>
                <bytes>true</bytes>
                <sentBytes>true</sentBytes>
                <url>true</url>
                <threadCounts>true</threadCounts>
                <idleTime>true</idleTime>
                <connectTime>true</connectTime>
              </value>
            </objProp>
            <stringProp name="filename"></stringProp>
            <boolProp name="ResultCollector.success_only_logging">true</boolProp>
          </ResultCollector>
          <hashTree/>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
